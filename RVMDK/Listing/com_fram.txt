; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\com_fram.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\com_fram.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\com_fram.crf ..\USR\Commucation\com_fram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  common_recv_dealwith PROC
;;;32     */
;;;33     static void common_recv_dealwith(uint8_t *dat, uint16_t len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;34     {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;35     	if(dat[2] == len)//接收长度符合
000008  78b0              LDRB     r0,[r6,#2]
00000a  42a0              CMP      r0,r4
00000c  d119              BNE      |L1.66|
;;;36     	{
;;;37     		uint8_t i,chk;
;;;38     		for(i = 0,chk = 0;i < (len-1);i++)
00000e  2500              MOVS     r5,#0
000010  2700              MOVS     r7,#0
000012  e004              B        |L1.30|
                  |L1.20|
;;;39     			chk += dat[i];
000014  5d70              LDRB     r0,[r6,r5]
000016  4438              ADD      r0,r0,r7
000018  b2c7              UXTB     r7,r0
00001a  1c68              ADDS     r0,r5,#1              ;38
00001c  b2c5              UXTB     r5,r0                 ;38
                  |L1.30|
00001e  1e60              SUBS     r0,r4,#1              ;38
000020  42a8              CMP      r0,r5                 ;38
000022  dcf7              BGT      |L1.20|
;;;40     		if(chk == dat[len-1])
000024  5c30              LDRB     r0,[r6,r0]
000026  42b8              CMP      r0,r7
000028  d10a              BNE      |L1.64|
;;;41     		{
;;;42     			for(i = 0,chk = 0;i < len;i++);
00002a  2500              MOVS     r5,#0
00002c  2700              MOVS     r7,#0
00002e  e001              B        |L1.52|
                  |L1.48|
000030  1c68              ADDS     r0,r5,#1
000032  b2c5              UXTB     r5,r0
                  |L1.52|
000034  42a5              CMP      r5,r4
000036  dbfb              BLT      |L1.48|
;;;43     			OSSemPost(sem_com_recv); 
000038  48fe              LDR      r0,|L1.1076|
00003a  6800              LDR      r0,[r0,#0]  ; sem_com_recv
00003c  f7fffffe          BL       OSSemPost
                  |L1.64|
;;;44     		}
;;;45     	}
000040  bf00              NOP      
                  |L1.66|
;;;46     }
000042  e8bd81f0          POP      {r4-r8,pc}
;;;47     
                          ENDP

                  Apply_for_mail PROC
;;;56     */
;;;57     MAIL* Apply_for_mail(uint16_t size)
000046  b538              PUSH     {r3-r5,lr}
;;;58     {
000048  4605              MOV      r5,r0
;;;59     	uint8_t err;
;;;60     	MAIL *mail = 0; 
00004a  2400              MOVS     r4,#0
;;;61     	
;;;62     	mail = (MAIL*)_malloc((sizeof(MAIL)), &err);
00004c  4669              MOV      r1,sp
00004e  2008              MOVS     r0,#8
000050  f7fffffe          BL       _malloc
000054  4604              MOV      r4,r0
;;;63     	log_output(mail);
;;;64     	if(mail != 0)
000056  b124              CBZ      r4,|L1.98|
;;;65     	{
;;;66     //		mail->com_call_back = (COM_RECV_CALLBACK)mail;
;;;67     //		mail->addr = (uint8_t*)(((uint8_t*)mail + sizeof(COM_RECV_CALLBACK)));
;;;68     		mail->addr = _malloc(size, &err);
000058  4669              MOV      r1,sp
00005a  4628              MOV      r0,r5
00005c  f7fffffe          BL       _malloc
000060  6060              STR      r0,[r4,#4]
                  |L1.98|
;;;69     	}
;;;70     	return mail;
000062  4620              MOV      r0,r4
;;;71     }
000064  bd38              POP      {r3-r5,pc}
;;;72     
                          ENDP

                  release_commucation_mail PROC
;;;75     */
;;;76     static void  release_commucation_mail(MAIL* mail)
000066  b510              PUSH     {r4,lr}
;;;77     {
000068  4604              MOV      r4,r0
;;;78     	_free(mail->addr);
00006a  6860              LDR      r0,[r4,#4]
00006c  f7fffffe          BL       _free
;;;79     	_free(mail);
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       _free
;;;80     }
000076  bd10              POP      {r4,pc}
;;;81     
                          ENDP

                  send_mail PROC
;;;85     */
;;;86     void send_mail(MAIL* mymail)
000078  b510              PUSH     {r4,lr}
;;;87     {
00007a  4604              MOV      r4,r0
;;;88     	log_output(mymail);
;;;89     	if (mymail != NULL)
00007c  b144              CBZ      r4,|L1.144|
;;;90     	{
;;;91     		if(OSQPost(commucationQueen,mymail) != OS_NO_ERR)
00007e  4621              MOV      r1,r4
000080  48ed              LDR      r0,|L1.1080|
000082  6800              LDR      r0,[r0,#0]  ; commucationQueen
000084  f7fffffe          BL       OSQPost
000088  b110              CBZ      r0,|L1.144|
;;;92     			release_commucation_mail(mymail);
00008a  4620              MOV      r0,r4
00008c  f7fffffe          BL       release_commucation_mail
                  |L1.144|
;;;93     	}
;;;94     }
000090  bd10              POP      {r4,pc}
;;;95     /*
                          ENDP

                  send_f_mail PROC
;;;97     */
;;;98     void send_f_mail(MAIL* mymail)
000092  b510              PUSH     {r4,lr}
;;;99     {
000094  4604              MOV      r4,r0
;;;100    	log_output(mymail);
;;;101    	if (mymail != NULL)
000096  b144              CBZ      r4,|L1.170|
;;;102    	{
;;;103    		if(OSQPostFront(commucationQueen,mymail) != OS_NO_ERR)
000098  4621              MOV      r1,r4
00009a  48e7              LDR      r0,|L1.1080|
00009c  6800              LDR      r0,[r0,#0]  ; commucationQueen
00009e  f7fffffe          BL       OSQPostFront
0000a2  b110              CBZ      r0,|L1.170|
;;;104    			release_commucation_mail(mymail);
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       release_commucation_mail
                  |L1.170|
;;;105    	}
;;;106    }
0000aa  bd10              POP      {r4,pc}
;;;107    
                          ENDP

                  mail_to_flash PROC
;;;111    */
;;;112    void mail_to_flash(MAIL  *cmail)
0000ac  b510              PUSH     {r4,lr}
;;;113    {
0000ae  4604              MOV      r4,r0
;;;114    	if(cmail != 0)
0000b0  b114              CBZ      r4,|L1.184|
;;;115    //	insert_to_flashqueue(cmail->addr);//存入flash
;;;116    	save_to_flash(cmail->addr);
0000b2  6860              LDR      r0,[r4,#4]
0000b4  f7fffffe          BL       save_to_flash
                  |L1.184|
;;;117    	release_commucation_mail(cmail);
0000b8  4620              MOV      r0,r4
0000ba  f7fffffe          BL       release_commucation_mail
;;;118    }
0000be  bd10              POP      {r4,pc}
;;;119    
                          ENDP

                  commucation_init PROC
;;;128    */
;;;129    static void commucation_init(void)
0000c0  b510              PUSH     {r4,lr}
;;;130    {
;;;131    	//PC_COM_INIT();//初始化串口
;;;132    	commucationQueen = OSQCreate(pt_comucationQueen,COM_QUEEN_SIZE); //创建发送队列
0000c2  2114              MOVS     r1,#0x14
0000c4  48dd              LDR      r0,|L1.1084|
0000c6  f7fffffe          BL       OSQCreate
0000ca  49db              LDR      r1,|L1.1080|
0000cc  6008              STR      r0,[r1,#0]  ; commucationQueen
;;;133    	sem_com_recv = OSSemCreate(0);//收到数据信号量
0000ce  2000              MOVS     r0,#0
0000d0  f7fffffe          BL       OSSemCreate
0000d4  49d7              LDR      r1,|L1.1076|
0000d6  6008              STR      r0,[r1,#0]  ; sem_com_recv
;;;134    	flash_lock = OSSemCreate(1);//flash存储信号量
0000d8  2001              MOVS     r0,#1
0000da  f7fffffe          BL       OSSemCreate
0000de  49d8              LDR      r1,|L1.1088|
0000e0  6008              STR      r0,[r1,#0]  ; flash_lock
;;;135    
;;;136    }
0000e2  bd10              POP      {r4,pc}
;;;137    
                          ENDP

                  get_mail_send PROC
;;;141    */
;;;142    static void get_mail_send(uint8_t *dat)
0000e4  e92d41f0          PUSH     {r4-r8,lr}
;;;143    {
0000e8  b0c2              SUB      sp,sp,#0x108
0000ea  4605              MOV      r5,r0
;;;144    	uint8_t i,j,chk,len;
;;;145    	len = dat[2];
0000ec  f8958002          LDRB     r8,[r5,#2]
;;;146    
;;;147    	if(dat[0] != 0x1f
0000f0  7828              LDRB     r0,[r5,#0]
0000f2  281f              CMP      r0,#0x1f
0000f4  d064              BEQ      |L1.448|
;;;148    	&& dat[0] != 0x10
0000f6  7828              LDRB     r0,[r5,#0]
0000f8  2810              CMP      r0,#0x10
0000fa  d061              BEQ      |L1.448|
;;;149    	&& dat[0] != 0x11 
0000fc  7828              LDRB     r0,[r5,#0]
0000fe  2811              CMP      r0,#0x11
000100  d05e              BEQ      |L1.448|
;;;150    	&& dat[0] != 0x12
000102  7828              LDRB     r0,[r5,#0]
000104  2812              CMP      r0,#0x12
000106  d05b              BEQ      |L1.448|
;;;151    	&& dat[0] != 0x14	
000108  7828              LDRB     r0,[r5,#0]
00010a  2814              CMP      r0,#0x14
00010c  d058              BEQ      |L1.448|
;;;152    	&& dat[0] != 0x17
00010e  7828              LDRB     r0,[r5,#0]
000110  2817              CMP      r0,#0x17
000112  d055              BEQ      |L1.448|
;;;153    	&& dat[0] != 0xff)
000114  7828              LDRB     r0,[r5,#0]
000116  28ff              CMP      r0,#0xff
000118  d052              BEQ      |L1.448|
;;;154    	{
;;;155    		uint8_t st[260];
;;;156    		//错误包
;;;157    		i = 0;
00011a  2400              MOVS     r4,#0
;;;158    		//包头
;;;159    		st[i++] = 0x1c;
00011c  221c              MOVS     r2,#0x1c
00011e  4621              MOV      r1,r4
000120  1c64              ADDS     r4,r4,#1
000122  a801              ADD      r0,sp,#4
000124  5442              STRB     r2,[r0,r1]
;;;160    		st[i++] = dat[1];//使用原始包序号
000126  786a              LDRB     r2,[r5,#1]
000128  4621              MOV      r1,r4
00012a  1c64              ADDS     r4,r4,#1
00012c  5442              STRB     r2,[r0,r1]
;;;161    		st[i++] = '*';	 //数据包长度
00012e  222a              MOVS     r2,#0x2a
000130  4621              MOV      r1,r4
000132  1c64              ADDS     r4,r4,#1
000134  5442              STRB     r2,[r0,r1]
;;;162    		st[i++] = 0x11;	 //业务类型
000136  2211              MOVS     r2,#0x11
000138  4621              MOV      r1,r4
00013a  1c64              ADDS     r4,r4,#1
00013c  5442              STRB     r2,[r0,r1]
;;;163    		
;;;164    		//更新待发送数据包;这样更新后才能与错误包的回应相对应
;;;165    		dat[0] = st[0];//
00013e  f89d0004          LDRB     r0,[sp,#4]
000142  7028              STRB     r0,[r5,#0]
;;;166    		dat[1] = st[1];//使用原始包序号
000144  f89d0005          LDRB     r0,[sp,#5]
000148  7068              STRB     r0,[r5,#1]
;;;167    		dat[2] = st[2];//数据包长度
00014a  f89d0006          LDRB     r0,[sp,#6]
00014e  70a8              STRB     r0,[r5,#2]
;;;168    		dat[3] = st[3];//业务类型
000150  f89d0007          LDRB     r0,[sp,#7]
000154  70e8              STRB     r0,[r5,#3]
;;;169    		
;;;170    		
;;;171    		st[i++] = '*';
000156  222a              MOVS     r2,#0x2a
000158  4621              MOV      r1,r4
00015a  1c64              ADDS     r4,r4,#1
00015c  a801              ADD      r0,sp,#4
00015e  5442              STRB     r2,[r0,r1]
;;;172    		//包体
;;;173    		for(j = 0;j < (len-1); j++)
000160  2600              MOVS     r6,#0
000162  e007              B        |L1.372|
                  |L1.356|
;;;174    		st[i++] = dat[j];
000164  5daa              LDRB     r2,[r5,r6]
000166  4620              MOV      r0,r4
000168  1c61              ADDS     r1,r4,#1
00016a  b2cc              UXTB     r4,r1
00016c  a901              ADD      r1,sp,#4
00016e  540a              STRB     r2,[r1,r0]
000170  1c70              ADDS     r0,r6,#1              ;173
000172  b2c6              UXTB     r6,r0                 ;173
                  |L1.372|
000174  f1a80001          SUB      r0,r8,#1              ;173
000178  42b0              CMP      r0,r6                 ;173
00017a  dcf3              BGT      |L1.356|
;;;175    		st[i++] = '*';
00017c  222a              MOVS     r2,#0x2a
00017e  4620              MOV      r0,r4
000180  1c61              ADDS     r1,r4,#1
000182  b2cc              UXTB     r4,r1
000184  a901              ADD      r1,sp,#4
000186  540a              STRB     r2,[r1,r0]
;;;176    		st[i++] = ' ';//校验占位
000188  2220              MOVS     r2,#0x20
00018a  4620              MOV      r0,r4
00018c  1c61              ADDS     r1,r4,#1
00018e  b2cc              UXTB     r4,r1
000190  a901              ADD      r1,sp,#4
000192  540a              STRB     r2,[r1,r0]
;;;177    		st[2] = i;
000194  f88d4006          STRB     r4,[sp,#6]
;;;178    		//校验
;;;179    		for(j = 0,chk = 0;j < (i-1);j++)
000198  2600              MOVS     r6,#0
00019a  2700              MOVS     r7,#0
00019c  e005              B        |L1.426|
                  |L1.414|
;;;180    		chk += st[j];
00019e  a801              ADD      r0,sp,#4
0001a0  5d80              LDRB     r0,[r0,r6]
0001a2  4438              ADD      r0,r0,r7
0001a4  b2c7              UXTB     r7,r0
0001a6  1c70              ADDS     r0,r6,#1              ;179
0001a8  b2c6              UXTB     r6,r0                 ;179
                  |L1.426|
0001aa  1e60              SUBS     r0,r4,#1              ;179
0001ac  42b0              CMP      r0,r6                 ;179
0001ae  dcf6              BGT      |L1.414|
;;;181    		st[i-1] = chk;
0001b0  a901              ADD      r1,sp,#4
0001b2  540f              STRB     r7,[r1,r0]
;;;182    		commucation_send(st, i, common_recv_dealwith);//串口发送 
0001b4  4aa3              LDR      r2,|L1.1092|
0001b6  4621              MOV      r1,r4
0001b8  a801              ADD      r0,sp,#4
0001ba  f7fffffe          BL       commucation_send
;;;183    	}
0001be  e020              B        |L1.514|
                  |L1.448|
;;;184    	else
;;;185    	{
;;;186    		for(i = 0,chk = 0;i < (len-1) ; i++)
0001c0  2400              MOVS     r4,#0
0001c2  2700              MOVS     r7,#0
0001c4  e004              B        |L1.464|
                  |L1.454|
;;;187    		{
;;;188    			if(dat[i] == 0)
0001c6  5d28              LDRB     r0,[r5,r4]
0001c8  b900              CBNZ     r0,|L1.460|
;;;189    			{
;;;190    				i = i;
0001ca  bf00              NOP      
                  |L1.460|
0001cc  1c60              ADDS     r0,r4,#1              ;186
0001ce  b2c4              UXTB     r4,r0                 ;186
                  |L1.464|
0001d0  f1a80001          SUB      r0,r8,#1              ;186
0001d4  42a0              CMP      r0,r4                 ;186
0001d6  dcf6              BGT      |L1.454|
;;;191    			}
;;;192    		}
;;;193    		
;;;194    		for(i = 0,chk = 0;i < (len-1) ; i++)
0001d8  2400              MOVS     r4,#0
0001da  2700              MOVS     r7,#0
0001dc  e004              B        |L1.488|
                  |L1.478|
;;;195    		{
;;;196    			chk += dat[i];
0001de  5d28              LDRB     r0,[r5,r4]
0001e0  4438              ADD      r0,r0,r7
0001e2  b2c7              UXTB     r7,r0
0001e4  1c60              ADDS     r0,r4,#1              ;194
0001e6  b2c4              UXTB     r4,r0                 ;194
                  |L1.488|
0001e8  f1a80001          SUB      r0,r8,#1              ;194
0001ec  42a0              CMP      r0,r4                 ;194
0001ee  dcf6              BGT      |L1.478|
;;;197    		}
;;;198    		dat[i++] = chk;
0001f0  4620              MOV      r0,r4
0001f2  1c61              ADDS     r1,r4,#1
0001f4  b2cc              UXTB     r4,r1
0001f6  542f              STRB     r7,[r5,r0]
;;;199    		
;;;200    		
;;;201    		commucation_send(dat, i, common_recv_dealwith);//串口发送 
0001f8  4a92              LDR      r2,|L1.1092|
0001fa  4621              MOV      r1,r4
0001fc  4628              MOV      r0,r5
0001fe  f7fffffe          BL       commucation_send
                  |L1.514|
;;;202    	}
;;;203    }
000202  b042              ADD      sp,sp,#0x108
000204  e8bd81f0          POP      {r4-r8,pc}
;;;204    /*
                          ENDP

                  send_linking PROC
;;;206    */
;;;207    static void send_linking(uint8_t first,volatile uint32_t *correct)//连机
000208  e92d47f0          PUSH     {r4-r10,lr}
;;;208    {
00020c  b086              SUB      sp,sp,#0x18
00020e  4681              MOV      r9,r0
000210  460e              MOV      r6,r1
;;;209    	MAIL *cmail;
;;;210    	uint8_t *str; 
;;;211    	uint8_t err,i ;
;;;212    	
;;;213    	cmail = Apply_for_mail(256);//申请一个信封
000212  f44f7080          MOV      r0,#0x100
000216  f7fffffe          BL       Apply_for_mail
00021a  4607              MOV      r7,r0
;;;214    	
;;;215    	log_output(cmail);
;;;216    	if(cmail == 0)
00021c  b917              CBNZ     r7,|L1.548|
                  |L1.542|
;;;217    		return ;
;;;218    	
;;;219    	str = cmail->addr; 
;;;220    	err = OS_TIMEOUT;
;;;221    
;;;222    	get_link_info(str);//编写一个连接请求信息
;;;223    	str[1]=g_vm.linkNum+1; //加上编号
;;;224    	g_vm.linkNum=(g_vm.linkNum+1)%255;//更新编号
;;;225    	
;;;226    	while(OSSemAccept(sem_com_recv));
;;;227    	get_mail_send(str);
;;;228    	OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*15,&err);
;;;229    	
;;;230    	if(err==OS_NO_ERR)
;;;231    	{				
;;;232    		i=0;
;;;233    		do
;;;234    		{//防止交错的数据包，终端收到的上一次发送数据的回应
;;;235    			uint32_t timelast;
;;;236    			if(i==0)
;;;237    				timelast=OSTimeGet();
;;;238    			OSSemPend(sem_com_recv, OS_TICKS_PER_SEC, &err);
;;;239    			if(OSTimeGet()-timelast>=OS_TICKS_PER_SEC)
;;;240    			{
;;;241    				timelast=OSTimeGet();
;;;242    			}
;;;243    			i++;				
;;;244    		}while((!(err==OS_TIMEOUT && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1]))&& i<100);//消除多余的应答
;;;245    		
;;;246    		if(err==OS_TIMEOUT && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1])
;;;247    		{
;;;248    			if(commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1])
;;;249    			{						
;;;250    				uint8_t ts,ctime[6];
;;;251    //				OS_CPU_SR  cpu_sr ;
;;;252    				ctime[0] = (commucation_recv_get()[3]-'0')*10 + commucation_recv_get()[4]-'0';
;;;253    				ctime[1] = (commucation_recv_get()[5]-'0')*10 + commucation_recv_get()[6]-'0';
;;;254    				ctime[2] = (commucation_recv_get()[7]-'0')*10 + commucation_recv_get()[8]-'0';
;;;255    				ctime[3] = (commucation_recv_get()[9]-'0')*10 + commucation_recv_get()[10]-'0';
;;;256    				ctime[4] = (commucation_recv_get()[11]-'0')*10 + commucation_recv_get()[12]-'0';
;;;257    				ctime[5] = (commucation_recv_get()[13]-'0')*10 + commucation_recv_get()[14]-'0';
;;;258    				
;;;259    //				CPU_CRITICAL_ENTER();//临界代码处理
;;;260    				ts  = set_rtc_time(1, ctime[0], ctime[1], ctime[2], ctime[3], ctime[4], ctime[5]);
;;;261    //				CPU_CRITICAL_EXIT();
;;;262    				
;;;263    				if(ts)
;;;264    				{
;;;265    					if(first)
;;;266    					{
;;;267    						get_channel_status(str);
;;;268    						str[1]=g_vm.linkNum+1; //加上编号
;;;269    						g_vm.linkNum=(g_vm.linkNum+1)%255;//更新编号
;;;270    						
;;;271    						while(OSSemAccept(sem_com_recv));
;;;272    						get_mail_send(str); //发送到远程管理端
;;;273    						OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*15,&err);
;;;274    						
;;;275    						if(err==OS_NO_ERR && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1])
;;;276    						{
;;;277    							get_machine_status(str);
;;;278    							str[1]=g_vm.linkNum+1; //加上编号
;;;279    							g_vm.linkNum=(g_vm.linkNum+1)%255;//更新编号
;;;280    							
;;;281    							while(OSSemAccept(sem_com_recv));
;;;282    							get_mail_send(str); //发送到远程管理端。
;;;283    							OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*15,&err);
;;;284    							
;;;285    							if(err==OS_NO_ERR && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1])
;;;286    							{
;;;287    								get_software_version(str);
;;;288    								str[1]=g_vm.linkNum+1; //加上编号
;;;289    								g_vm.linkNum=(g_vm.linkNum+1)%255;//更新编号
;;;290    								
;;;291    								while(OSSemAccept(sem_com_recv));
;;;292    								get_mail_send(str); //发送到远程管理端。
;;;293    								OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*15,&err);
;;;294    								
;;;295    								if(err==OS_NO_ERR && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1])
;;;296    								{
;;;297    									first=0;
;;;298    									g_vm.linkState=1;//标记网络状态为连接
;;;299    									(*correct) = OSTimeGet();
;;;300    								}
;;;301    							}
;;;302    						}
;;;303    					}
;;;304    					else
;;;305    					{
;;;306    						g_vm.linkState = 1;
;;;307    						(*correct) = OSTimeGet();
;;;308    					}
;;;309    				}
;;;310    			}
;;;311    		}
;;;312    	}
;;;313    	release_commucation_mail(cmail);
;;;314    }
00021e  b006              ADD      sp,sp,#0x18
000220  e8bd87f0          POP      {r4-r10,pc}
                  |L1.548|
000224  687c              LDR      r4,[r7,#4]            ;219
000226  200a              MOVS     r0,#0xa               ;220
000228  9005              STR      r0,[sp,#0x14]         ;220
00022a  4620              MOV      r0,r4                 ;222
00022c  f7fffffe          BL       get_link_info
000230  4885              LDR      r0,|L1.1096|
000232  7ac0              LDRB     r0,[r0,#0xb]          ;223  ; g_vm
000234  1c40              ADDS     r0,r0,#1              ;223
000236  7060              STRB     r0,[r4,#1]            ;223
000238  4883              LDR      r0,|L1.1096|
00023a  7ac0              LDRB     r0,[r0,#0xb]          ;224  ; g_vm
00023c  1c40              ADDS     r0,r0,#1              ;224
00023e  21ff              MOVS     r1,#0xff              ;224
000240  fb90f2f1          SDIV     r2,r0,r1              ;224
000244  fb010012          MLS      r0,r1,r2,r0           ;224
000248  497f              LDR      r1,|L1.1096|
00024a  72c8              STRB     r0,[r1,#0xb]          ;224
00024c  bf00              NOP                            ;226
                  |L1.590|
00024e  4879              LDR      r0,|L1.1076|
000250  6800              LDR      r0,[r0,#0]            ;226  ; sem_com_recv
000252  f7fffffe          BL       OSSemAccept
000256  2800              CMP      r0,#0                 ;226
000258  d1f9              BNE      |L1.590|
00025a  4620              MOV      r0,r4                 ;227
00025c  f7fffffe          BL       get_mail_send
000260  aa05              ADD      r2,sp,#0x14           ;228
000262  f6432198          MOV      r1,#0x3a98            ;228
000266  4873              LDR      r0,|L1.1076|
000268  6800              LDR      r0,[r0,#0]            ;228  ; sem_com_recv
00026a  f7fffffe          BL       OSSemPend
00026e  f89d0014          LDRB     r0,[sp,#0x14]         ;230
000272  2800              CMP      r0,#0                 ;230
                  |L1.628|
000274  d17e              BNE      |L1.884|
000276  2500              MOVS     r5,#0                 ;232
000278  bf00              NOP                            ;233
                  |L1.634|
00027a  b915              CBNZ     r5,|L1.642|
00027c  f7fffffe          BL       OSTimeGet
000280  4680              MOV      r8,r0                 ;237
                  |L1.642|
000282  aa05              ADD      r2,sp,#0x14           ;238
000284  f44f717a          MOV      r1,#0x3e8             ;238
000288  486a              LDR      r0,|L1.1076|
00028a  6800              LDR      r0,[r0,#0]            ;238  ; sem_com_recv
00028c  f7fffffe          BL       OSSemPend
000290  f7fffffe          BL       OSTimeGet
000294  eba00008          SUB      r0,r0,r8              ;239
000298  f5b07f7a          CMP      r0,#0x3e8             ;239
00029c  d302              BCC      |L1.676|
00029e  f7fffffe          BL       OSTimeGet
0002a2  4680              MOV      r8,r0                 ;241
                  |L1.676|
0002a4  1c68              ADDS     r0,r5,#1              ;243
0002a6  b2c5              UXTB     r5,r0                 ;243
0002a8  f89d0014          LDRB     r0,[sp,#0x14]         ;244
0002ac  280a              CMP      r0,#0xa               ;244
0002ae  d10a              BNE      |L1.710|
0002b0  f7fffffe          BL       commucation_recv_get
0002b4  7800              LDRB     r0,[r0,#0]            ;244
0002b6  281d              CMP      r0,#0x1d              ;244
0002b8  d105              BNE      |L1.710|
0002ba  f7fffffe          BL       commucation_recv_get
0002be  7840              LDRB     r0,[r0,#1]            ;244
0002c0  7861              LDRB     r1,[r4,#1]            ;244
0002c2  4288              CMP      r0,r1                 ;244
0002c4  d001              BEQ      |L1.714|
                  |L1.710|
0002c6  2d64              CMP      r5,#0x64              ;244
0002c8  dbd7              BLT      |L1.634|
                  |L1.714|
0002ca  f89d0014          LDRB     r0,[sp,#0x14]         ;246
0002ce  280a              CMP      r0,#0xa               ;246
0002d0  d1d0              BNE      |L1.628|
0002d2  f7fffffe          BL       commucation_recv_get
0002d6  7800              LDRB     r0,[r0,#0]            ;246
0002d8  281d              CMP      r0,#0x1d              ;246
0002da  d1cb              BNE      |L1.628|
0002dc  f7fffffe          BL       commucation_recv_get
0002e0  7840              LDRB     r0,[r0,#1]            ;246
0002e2  7861              LDRB     r1,[r4,#1]            ;246
0002e4  4288              CMP      r0,r1                 ;246
0002e6  d1c5              BNE      |L1.628|
0002e8  f7fffffe          BL       commucation_recv_get
0002ec  7800              LDRB     r0,[r0,#0]            ;248
0002ee  281d              CMP      r0,#0x1d              ;248
0002f0  d1c0              BNE      |L1.628|
0002f2  f7fffffe          BL       commucation_recv_get
0002f6  7840              LDRB     r0,[r0,#1]            ;248
0002f8  7861              LDRB     r1,[r4,#1]            ;248
0002fa  4288              CMP      r0,r1                 ;248
0002fc  d1ba              BNE      |L1.628|
0002fe  f7fffffe          BL       commucation_recv_get
000302  f890a004          LDRB     r10,[r0,#4]           ;252
000306  f7fffffe          BL       commucation_recv_get
00030a  78c0              LDRB     r0,[r0,#3]            ;252
00030c  3830              SUBS     r0,r0,#0x30           ;252
00030e  eb000080          ADD      r0,r0,r0,LSL #2       ;252
000312  eb0a0040          ADD      r0,r10,r0,LSL #1      ;252
000316  3830              SUBS     r0,r0,#0x30           ;252
000318  b2c0              UXTB     r0,r0                 ;252
00031a  f88d000c          STRB     r0,[sp,#0xc]          ;252
00031e  f7fffffe          BL       commucation_recv_get
000322  f890a006          LDRB     r10,[r0,#6]           ;253
000326  f7fffffe          BL       commucation_recv_get
00032a  7940              LDRB     r0,[r0,#5]            ;253
00032c  3830              SUBS     r0,r0,#0x30           ;253
00032e  eb000080          ADD      r0,r0,r0,LSL #2       ;253
000332  eb0a0040          ADD      r0,r10,r0,LSL #1      ;253
000336  3830              SUBS     r0,r0,#0x30           ;253
000338  b2c0              UXTB     r0,r0                 ;253
00033a  f88d000d          STRB     r0,[sp,#0xd]          ;253
00033e  f7fffffe          BL       commucation_recv_get
000342  f890a008          LDRB     r10,[r0,#8]           ;254
000346  f7fffffe          BL       commucation_recv_get
00034a  79c0              LDRB     r0,[r0,#7]            ;254
00034c  3830              SUBS     r0,r0,#0x30           ;254
00034e  eb000080          ADD      r0,r0,r0,LSL #2       ;254
000352  eb0a0040          ADD      r0,r10,r0,LSL #1      ;254
000356  3830              SUBS     r0,r0,#0x30           ;254
000358  b2c0              UXTB     r0,r0                 ;254
00035a  f88d000e          STRB     r0,[sp,#0xe]          ;254
00035e  f7fffffe          BL       commucation_recv_get
000362  f890a00a          LDRB     r10,[r0,#0xa]         ;255
000366  f7fffffe          BL       commucation_recv_get
00036a  7a40              LDRB     r0,[r0,#9]            ;255
00036c  3830              SUBS     r0,r0,#0x30           ;255
00036e  eb000080          ADD      r0,r0,r0,LSL #2       ;255
000372  e000              B        |L1.886|
                  |L1.884|
000374  e0ef              B        |L1.1366|
                  |L1.886|
000376  eb0a0040          ADD      r0,r10,r0,LSL #1      ;255
00037a  3830              SUBS     r0,r0,#0x30           ;255
00037c  b2c0              UXTB     r0,r0                 ;255
00037e  f88d000f          STRB     r0,[sp,#0xf]          ;255
000382  f7fffffe          BL       commucation_recv_get
000386  f890a00c          LDRB     r10,[r0,#0xc]         ;256
00038a  f7fffffe          BL       commucation_recv_get
00038e  7ac0              LDRB     r0,[r0,#0xb]          ;256
000390  3830              SUBS     r0,r0,#0x30           ;256
000392  eb000080          ADD      r0,r0,r0,LSL #2       ;256
000396  eb0a0040          ADD      r0,r10,r0,LSL #1      ;256
00039a  3830              SUBS     r0,r0,#0x30           ;256
00039c  b2c0              UXTB     r0,r0                 ;256
00039e  f88d0010          STRB     r0,[sp,#0x10]         ;256
0003a2  f7fffffe          BL       commucation_recv_get
0003a6  f890a00e          LDRB     r10,[r0,#0xe]         ;257
0003aa  f7fffffe          BL       commucation_recv_get
0003ae  7b40              LDRB     r0,[r0,#0xd]          ;257
0003b0  3830              SUBS     r0,r0,#0x30           ;257
0003b2  eb000080          ADD      r0,r0,r0,LSL #2       ;257
0003b6  eb0a0040          ADD      r0,r10,r0,LSL #1      ;257
0003ba  3830              SUBS     r0,r0,#0x30           ;257
0003bc  b2c0              UXTB     r0,r0                 ;257
0003be  f88d0011          STRB     r0,[sp,#0x11]         ;257
0003c2  f89d0011          LDRB     r0,[sp,#0x11]         ;260
0003c6  f89d1010          LDRB     r1,[sp,#0x10]         ;260
0003ca  f89d200f          LDRB     r2,[sp,#0xf]          ;260
0003ce  e9cd2100          STRD     r2,r1,[sp,#0]         ;260
0003d2  9002              STR      r0,[sp,#8]            ;260
0003d4  f89d300e          LDRB     r3,[sp,#0xe]          ;260
0003d8  f89d200d          LDRB     r2,[sp,#0xd]          ;260
0003dc  f89d100c          LDRB     r1,[sp,#0xc]          ;260
0003e0  2001              MOVS     r0,#1                 ;260
0003e2  f7fffffe          BL       set_rtc_time
0003e6  4680              MOV      r8,r0                 ;260
0003e8  f1b80f00          CMP      r8,#0                 ;263
0003ec  d07e              BEQ      |L1.1260|
0003ee  f1b90f00          CMP      r9,#0                 ;265
0003f2  d07c              BEQ      |L1.1262|
0003f4  4620              MOV      r0,r4                 ;267
0003f6  f7fffffe          BL       get_channel_status
0003fa  4813              LDR      r0,|L1.1096|
0003fc  7ac0              LDRB     r0,[r0,#0xb]          ;268  ; g_vm
0003fe  1c40              ADDS     r0,r0,#1              ;268
000400  7060              STRB     r0,[r4,#1]            ;268
000402  4811              LDR      r0,|L1.1096|
000404  7ac0              LDRB     r0,[r0,#0xb]          ;269  ; g_vm
000406  1c40              ADDS     r0,r0,#1              ;269
000408  21ff              MOVS     r1,#0xff              ;269
00040a  fb90f2f1          SDIV     r2,r0,r1              ;269
00040e  fb010012          MLS      r0,r1,r2,r0           ;269
000412  490d              LDR      r1,|L1.1096|
000414  72c8              STRB     r0,[r1,#0xb]          ;269
000416  bf00              NOP                            ;271
                  |L1.1048|
000418  4806              LDR      r0,|L1.1076|
00041a  6800              LDR      r0,[r0,#0]            ;271  ; sem_com_recv
00041c  f7fffffe          BL       OSSemAccept
000420  2800              CMP      r0,#0                 ;271
000422  d1f9              BNE      |L1.1048|
000424  4620              MOV      r0,r4                 ;272
000426  f7fffffe          BL       get_mail_send
00042a  aa05              ADD      r2,sp,#0x14           ;273
00042c  f6432198          MOV      r1,#0x3a98            ;273
000430  4800              LDR      r0,|L1.1076|
000432  e00b              B        |L1.1100|
                  |L1.1076|
                          DCD      sem_com_recv
                  |L1.1080|
                          DCD      commucationQueen
                  |L1.1084|
                          DCD      pt_comucationQueen
                  |L1.1088|
                          DCD      flash_lock
                  |L1.1092|
                          DCD      common_recv_dealwith
                  |L1.1096|
                          DCD      g_vm
                  |L1.1100|
00044c  6800              LDR      r0,[r0,#0]            ;273  ; sem_com_recv
00044e  f7fffffe          BL       OSSemPend
000452  f89d0014          LDRB     r0,[sp,#0x14]         ;275
000456  2800              CMP      r0,#0                 ;275
000458  d17c              BNE      |L1.1364|
00045a  f7fffffe          BL       commucation_recv_get
00045e  7800              LDRB     r0,[r0,#0]            ;275
000460  281d              CMP      r0,#0x1d              ;275
000462  d177              BNE      |L1.1364|
000464  f7fffffe          BL       commucation_recv_get
000468  7840              LDRB     r0,[r0,#1]            ;275
00046a  7861              LDRB     r1,[r4,#1]            ;275
00046c  4288              CMP      r0,r1                 ;275
00046e  d171              BNE      |L1.1364|
000470  4620              MOV      r0,r4                 ;277
000472  f7fffffe          BL       get_machine_status
000476  48f7              LDR      r0,|L1.2132|
000478  7ac0              LDRB     r0,[r0,#0xb]          ;278  ; g_vm
00047a  1c40              ADDS     r0,r0,#1              ;278
00047c  7060              STRB     r0,[r4,#1]            ;278
00047e  48f5              LDR      r0,|L1.2132|
000480  7ac0              LDRB     r0,[r0,#0xb]          ;279  ; g_vm
000482  1c40              ADDS     r0,r0,#1              ;279
000484  21ff              MOVS     r1,#0xff              ;279
000486  fb90f2f1          SDIV     r2,r0,r1              ;279
00048a  fb010012          MLS      r0,r1,r2,r0           ;279
00048e  49f1              LDR      r1,|L1.2132|
000490  72c8              STRB     r0,[r1,#0xb]          ;279
000492  bf00              NOP                            ;281
                  |L1.1172|
000494  48f0              LDR      r0,|L1.2136|
000496  6800              LDR      r0,[r0,#0]            ;281  ; sem_com_recv
000498  f7fffffe          BL       OSSemAccept
00049c  2800              CMP      r0,#0                 ;281
00049e  d1f9              BNE      |L1.1172|
0004a0  4620              MOV      r0,r4                 ;282
0004a2  f7fffffe          BL       get_mail_send
0004a6  aa05              ADD      r2,sp,#0x14           ;283
0004a8  f6432198          MOV      r1,#0x3a98            ;283
0004ac  48ea              LDR      r0,|L1.2136|
0004ae  6800              LDR      r0,[r0,#0]            ;283  ; sem_com_recv
0004b0  f7fffffe          BL       OSSemPend
0004b4  f89d0014          LDRB     r0,[sp,#0x14]         ;285
0004b8  b9c0              CBNZ     r0,|L1.1260|
0004ba  f7fffffe          BL       commucation_recv_get
0004be  7800              LDRB     r0,[r0,#0]            ;285
0004c0  281d              CMP      r0,#0x1d              ;285
0004c2  d147              BNE      |L1.1364|
0004c4  f7fffffe          BL       commucation_recv_get
0004c8  7840              LDRB     r0,[r0,#1]            ;285
0004ca  7861              LDRB     r1,[r4,#1]            ;285
0004cc  4288              CMP      r0,r1                 ;285
0004ce  d141              BNE      |L1.1364|
0004d0  4620              MOV      r0,r4                 ;287
0004d2  f7fffffe          BL       get_software_version
0004d6  48df              LDR      r0,|L1.2132|
0004d8  7ac0              LDRB     r0,[r0,#0xb]          ;288  ; g_vm
0004da  1c40              ADDS     r0,r0,#1              ;288
0004dc  7060              STRB     r0,[r4,#1]            ;288
0004de  48dd              LDR      r0,|L1.2132|
0004e0  7ac0              LDRB     r0,[r0,#0xb]          ;289  ; g_vm
0004e2  1c40              ADDS     r0,r0,#1              ;289
0004e4  21ff              MOVS     r1,#0xff              ;289
0004e6  fb90f2f1          SDIV     r2,r0,r1              ;289
0004ea  e001              B        |L1.1264|
                  |L1.1260|
0004ec  e032              B        |L1.1364|
                  |L1.1262|
0004ee  e02b              B        |L1.1352|
                  |L1.1264|
0004f0  fb010012          MLS      r0,r1,r2,r0           ;289
0004f4  49d7              LDR      r1,|L1.2132|
0004f6  72c8              STRB     r0,[r1,#0xb]          ;289
0004f8  bf00              NOP                            ;291
                  |L1.1274|
0004fa  48d7              LDR      r0,|L1.2136|
0004fc  6800              LDR      r0,[r0,#0]            ;291  ; sem_com_recv
0004fe  f7fffffe          BL       OSSemAccept
000502  2800              CMP      r0,#0                 ;291
000504  d1f9              BNE      |L1.1274|
000506  4620              MOV      r0,r4                 ;292
000508  f7fffffe          BL       get_mail_send
00050c  aa05              ADD      r2,sp,#0x14           ;293
00050e  f6432198          MOV      r1,#0x3a98            ;293
000512  48d1              LDR      r0,|L1.2136|
000514  6800              LDR      r0,[r0,#0]            ;293  ; sem_com_recv
000516  f7fffffe          BL       OSSemPend
00051a  f89d0014          LDRB     r0,[sp,#0x14]         ;295
00051e  b9c8              CBNZ     r0,|L1.1364|
000520  f7fffffe          BL       commucation_recv_get
000524  7800              LDRB     r0,[r0,#0]            ;295
000526  281d              CMP      r0,#0x1d              ;295
000528  d114              BNE      |L1.1364|
00052a  f7fffffe          BL       commucation_recv_get
00052e  7840              LDRB     r0,[r0,#1]            ;295
000530  7861              LDRB     r1,[r4,#1]            ;295
000532  4288              CMP      r0,r1                 ;295
000534  d10e              BNE      |L1.1364|
000536  f04f0900          MOV      r9,#0                 ;297
00053a  2001              MOVS     r0,#1                 ;298
00053c  49c5              LDR      r1,|L1.2132|
00053e  7288              STRB     r0,[r1,#0xa]          ;298
000540  f7fffffe          BL       OSTimeGet
000544  6030              STR      r0,[r6,#0]            ;299
000546  e005              B        |L1.1364|
                  |L1.1352|
000548  2001              MOVS     r0,#1                 ;306
00054a  49c2              LDR      r1,|L1.2132|
00054c  7288              STRB     r0,[r1,#0xa]          ;306
00054e  f7fffffe          BL       OSTimeGet
000552  6030              STR      r0,[r6,#0]            ;307
                  |L1.1364|
000554  bf00              NOP                            ;310
                  |L1.1366|
000556  4638              MOV      r0,r7                 ;313
000558  f7fffffe          BL       release_commucation_mail
00055c  bf00              NOP      
00055e  e65e              B        |L1.542|
;;;315    
                          ENDP

                  send_heart PROC
;;;319    */
;;;320    static uint8_t send_heart(volatile uint32_t *hearTime, uint8_t *xintiao)//心跳包
000560  b5f8              PUSH     {r3-r7,lr}
;;;321    {
000562  4605              MOV      r5,r0
000564  460c              MOV      r4,r1
;;;322    	uint8_t rs = TRUE ,err ;
000566  2601              MOVS     r6,#1
;;;323    	if(OSTimeGet() - (*hearTime) >= OS_TICKS_PER_SEC*40)//40s发送一次心跳包
000568  f7fffffe          BL       OSTimeGet
00056c  6829              LDR      r1,[r5,#0]
00056e  1a40              SUBS     r0,r0,r1
000570  f6494140          MOV      r1,#0x9c40
000574  4288              CMP      r0,r1
000576  d33c              BCC      |L1.1522|
;;;324    	{
;;;325    		(*hearTime) = OSTimeGet();
000578  f7fffffe          BL       OSTimeGet
00057c  6028              STR      r0,[r5,#0]
;;;326    		xintiao[0]=0xff;
00057e  20ff              MOVS     r0,#0xff
000580  7020              STRB     r0,[r4,#0]
;;;327    		xintiao[1] = g_vm.linkNum+1;
000582  48b4              LDR      r0,|L1.2132|
000584  7ac0              LDRB     r0,[r0,#0xb]  ; g_vm
000586  1c40              ADDS     r0,r0,#1
000588  7060              STRB     r0,[r4,#1]
;;;328    		xintiao[2]=4;
00058a  2004              MOVS     r0,#4
00058c  70a0              STRB     r0,[r4,#2]
;;;329    		g_vm.linkNum = (g_vm.linkNum+1)%255;
00058e  48b1              LDR      r0,|L1.2132|
000590  7ac0              LDRB     r0,[r0,#0xb]  ; g_vm
000592  1c40              ADDS     r0,r0,#1
000594  21ff              MOVS     r1,#0xff
000596  fb90f2f1          SDIV     r2,r0,r1
00059a  fb010012          MLS      r0,r1,r2,r0
00059e  49ad              LDR      r1,|L1.2132|
0005a0  72c8              STRB     r0,[r1,#0xb]
;;;330    		
;;;331    		while(OSSemAccept(sem_com_recv));
0005a2  bf00              NOP      
                  |L1.1444|
0005a4  48ac              LDR      r0,|L1.2136|
0005a6  6800              LDR      r0,[r0,#0]  ; sem_com_recv
0005a8  f7fffffe          BL       OSSemAccept
0005ac  2800              CMP      r0,#0
0005ae  d1f9              BNE      |L1.1444|
;;;332    		get_mail_send(xintiao);
0005b0  4620              MOV      r0,r4
0005b2  f7fffffe          BL       get_mail_send
;;;333    		OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*10,&err);
0005b6  466a              MOV      r2,sp
0005b8  f2427110          MOV      r1,#0x2710
0005bc  48a6              LDR      r0,|L1.2136|
0005be  6800              LDR      r0,[r0,#0]  ; sem_com_recv
0005c0  f7fffffe          BL       OSSemPend
;;;334    		if(!(err == OS_NO_ERR && commucation_recv_get()[0]==0x1D && commucation_recv_get()[1] == xintiao[1] && commucation_recv_get()[2] == 4))//需要判断心跳回应是否正确
0005c4  f89d0000          LDRB     r0,[sp,#0]
0005c8  b978              CBNZ     r0,|L1.1514|
0005ca  f7fffffe          BL       commucation_recv_get
0005ce  7800              LDRB     r0,[r0,#0]
0005d0  281d              CMP      r0,#0x1d
0005d2  d10a              BNE      |L1.1514|
0005d4  f7fffffe          BL       commucation_recv_get
0005d8  7840              LDRB     r0,[r0,#1]
0005da  7861              LDRB     r1,[r4,#1]
0005dc  4288              CMP      r0,r1
0005de  d104              BNE      |L1.1514|
0005e0  f7fffffe          BL       commucation_recv_get
0005e4  7880              LDRB     r0,[r0,#2]
0005e6  2804              CMP      r0,#4
0005e8  d003              BEQ      |L1.1522|
                  |L1.1514|
;;;335    		{
;;;336    			g_vm.linkState = 0;
0005ea  2000              MOVS     r0,#0
0005ec  4999              LDR      r1,|L1.2132|
0005ee  7288              STRB     r0,[r1,#0xa]
;;;337    			rs = FALSE;
0005f0  2600              MOVS     r6,#0
                  |L1.1522|
;;;338    		}
;;;339    	}
;;;340    	return rs;
0005f2  4630              MOV      r0,r6
;;;341    }
0005f4  bdf8              POP      {r3-r7,pc}
;;;342    
                          ENDP

                  send_correct_time PROC
;;;345    */
;;;346    static uint8_t send_correct_time(volatile uint32_t *correct)//发对时
0005f6  e92d41f0          PUSH     {r4-r8,lr}
;;;347    {
0005fa  b086              SUB      sp,sp,#0x18
0005fc  4605              MOV      r5,r0
;;;348    	uint8_t err,rs = TRUE; 
0005fe  2701              MOVS     r7,#1
;;;349    		
;;;350    	if(OSTimeGet()-(*correct) > OS_TICKS_PER_SEC*60*60)//1h 对时一次
000600  f7fffffe          BL       OSTimeGet
000604  6829              LDR      r1,[r5,#0]
000606  1a40              SUBS     r0,r0,r1
000608  4994              LDR      r1,|L1.2140|
00060a  4288              CMP      r0,r1
00060c  d97e              BLS      |L1.1804|
;;;351    	{
;;;352    		uint8_t *str;
;;;353    		MAIL *cmail;
;;;354    
;;;355    		cmail = Apply_for_mail(50);
00060e  2032              MOVS     r0,#0x32
000610  f7fffffe          BL       Apply_for_mail
000614  4606              MOV      r6,r0
;;;356    		
;;;357    		log_output(cmail);
;;;358    		
;;;359    		if(cmail == 0)
000616  b91e              CBNZ     r6,|L1.1568|
;;;360    			return FALSE; 
000618  2000              MOVS     r0,#0
                  |L1.1562|
;;;361    		
;;;362    		str = cmail->addr;
;;;363    		
;;;364    		(*correct) = OSTimeGet();
;;;365    		get_link_info(str);		//编写对时包
;;;366    		str[1]=g_vm.linkNum+1; 		//加上编号
;;;367    		g_vm.linkNum=(g_vm.linkNum+1)%255;//更新编号
;;;368    		
;;;369    		while(OSSemAccept(sem_com_recv));
;;;370    		get_mail_send(str);
;;;371    		OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*30,&err);//30s 超时
;;;372    		
;;;373    		if(err==OS_NO_ERR)
;;;374    		{
;;;375    			if(commucation_recv_get()[0] == 0x1D && commucation_recv_get()[1] == str[1])
;;;376    			{
;;;377    				uint8_t ctime[6];
;;;378    //				OS_CPU_SR  cpu_sr ;
;;;379    				ctime[0] = (commucation_recv_get()[3]-'0')*10 + commucation_recv_get()[4]-'0';
;;;380    				ctime[1] = (commucation_recv_get()[5]-'0')*10 + commucation_recv_get()[6]-'0';
;;;381    				ctime[2] = (commucation_recv_get()[7]-'0')*10 + commucation_recv_get()[8]-'0';
;;;382    				ctime[3] = (commucation_recv_get()[9]-'0')*10 + commucation_recv_get()[10]-'0';
;;;383    				ctime[4] = (commucation_recv_get()[11]-'0')*10 + commucation_recv_get()[12]-'0';
;;;384    				ctime[5] = (commucation_recv_get()[13]-'0')*10 + commucation_recv_get()[14]-'0';
;;;385    				//更新时间
;;;386    //				CPU_CRITICAL_ENTER();
;;;387    				set_rtc_time(1, ctime[0], ctime[1], ctime[2], ctime[3], ctime[4], ctime[5]);
;;;388    //				CPU_CRITICAL_EXIT();
;;;389    			}
;;;390    		}
;;;391    		else
;;;392    		{	
;;;393    			g_vm.linkState = 0;
;;;394    			rs = FALSE;
;;;395    		}
;;;396    		release_commucation_mail(cmail);//释放掉该信封
;;;397    	}
;;;398    	return rs;
;;;399    }
00061a  b006              ADD      sp,sp,#0x18
00061c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1568|
000620  6874              LDR      r4,[r6,#4]            ;362
000622  f7fffffe          BL       OSTimeGet
000626  6028              STR      r0,[r5,#0]            ;364
000628  4620              MOV      r0,r4                 ;365
00062a  f7fffffe          BL       get_link_info
00062e  4889              LDR      r0,|L1.2132|
000630  7ac0              LDRB     r0,[r0,#0xb]          ;366  ; g_vm
000632  1c40              ADDS     r0,r0,#1              ;366
000634  7060              STRB     r0,[r4,#1]            ;366
000636  4887              LDR      r0,|L1.2132|
000638  7ac0              LDRB     r0,[r0,#0xb]          ;367  ; g_vm
00063a  1c40              ADDS     r0,r0,#1              ;367
00063c  21ff              MOVS     r1,#0xff              ;367
00063e  fb90f2f1          SDIV     r2,r0,r1              ;367
000642  fb010012          MLS      r0,r1,r2,r0           ;367
000646  4983              LDR      r1,|L1.2132|
000648  72c8              STRB     r0,[r1,#0xb]          ;367
00064a  bf00              NOP                            ;369
                  |L1.1612|
00064c  4882              LDR      r0,|L1.2136|
00064e  6800              LDR      r0,[r0,#0]            ;369  ; sem_com_recv
000650  f7fffffe          BL       OSSemAccept
000654  2800              CMP      r0,#0                 ;369
000656  d1f9              BNE      |L1.1612|
000658  4620              MOV      r0,r4                 ;370
00065a  f7fffffe          BL       get_mail_send
00065e  aa05              ADD      r2,sp,#0x14           ;371
000660  f2475130          MOV      r1,#0x7530            ;371
000664  487c              LDR      r0,|L1.2136|
000666  6800              LDR      r0,[r0,#0]            ;371  ; sem_com_recv
000668  f7fffffe          BL       OSSemPend
00066c  f89d0014          LDRB     r0,[sp,#0x14]         ;373
000670  2800              CMP      r0,#0                 ;373
000672  d17d              BNE      |L1.1904|
000674  f7fffffe          BL       commucation_recv_get
000678  7800              LDRB     r0,[r0,#0]            ;375
00067a  281d              CMP      r0,#0x1d              ;375
00067c  d179              BNE      |L1.1906|
00067e  f7fffffe          BL       commucation_recv_get
000682  7840              LDRB     r0,[r0,#1]            ;375
000684  7861              LDRB     r1,[r4,#1]            ;375
000686  4288              CMP      r0,r1                 ;375
000688  d17b              BNE      |L1.1922|
00068a  f7fffffe          BL       commucation_recv_get
00068e  f8908004          LDRB     r8,[r0,#4]            ;379
000692  f7fffffe          BL       commucation_recv_get
000696  78c0              LDRB     r0,[r0,#3]            ;379
000698  3830              SUBS     r0,r0,#0x30           ;379
00069a  eb000080          ADD      r0,r0,r0,LSL #2       ;379
00069e  eb080040          ADD      r0,r8,r0,LSL #1       ;379
0006a2  3830              SUBS     r0,r0,#0x30           ;379
0006a4  b2c0              UXTB     r0,r0                 ;379
0006a6  f88d000c          STRB     r0,[sp,#0xc]          ;379
0006aa  f7fffffe          BL       commucation_recv_get
0006ae  f8908006          LDRB     r8,[r0,#6]            ;380
0006b2  f7fffffe          BL       commucation_recv_get
0006b6  7940              LDRB     r0,[r0,#5]            ;380
0006b8  3830              SUBS     r0,r0,#0x30           ;380
0006ba  eb000080          ADD      r0,r0,r0,LSL #2       ;380
0006be  eb080040          ADD      r0,r8,r0,LSL #1       ;380
0006c2  3830              SUBS     r0,r0,#0x30           ;380
0006c4  b2c0              UXTB     r0,r0                 ;380
0006c6  f88d000d          STRB     r0,[sp,#0xd]          ;380
0006ca  f7fffffe          BL       commucation_recv_get
0006ce  f8908008          LDRB     r8,[r0,#8]            ;381
0006d2  f7fffffe          BL       commucation_recv_get
0006d6  79c0              LDRB     r0,[r0,#7]            ;381
0006d8  3830              SUBS     r0,r0,#0x30           ;381
0006da  eb000080          ADD      r0,r0,r0,LSL #2       ;381
0006de  eb080040          ADD      r0,r8,r0,LSL #1       ;381
0006e2  3830              SUBS     r0,r0,#0x30           ;381
0006e4  b2c0              UXTB     r0,r0                 ;381
0006e6  f88d000e          STRB     r0,[sp,#0xe]          ;381
0006ea  f7fffffe          BL       commucation_recv_get
0006ee  f890800a          LDRB     r8,[r0,#0xa]          ;382
0006f2  f7fffffe          BL       commucation_recv_get
0006f6  7a40              LDRB     r0,[r0,#9]            ;382
0006f8  3830              SUBS     r0,r0,#0x30           ;382
0006fa  eb000080          ADD      r0,r0,r0,LSL #2       ;382
0006fe  eb080040          ADD      r0,r8,r0,LSL #1       ;382
000702  3830              SUBS     r0,r0,#0x30           ;382
000704  b2c0              UXTB     r0,r0                 ;382
000706  f88d000f          STRB     r0,[sp,#0xf]          ;382
00070a  e000              B        |L1.1806|
                  |L1.1804|
00070c  e03d              B        |L1.1930|
                  |L1.1806|
00070e  f7fffffe          BL       commucation_recv_get
000712  f890800c          LDRB     r8,[r0,#0xc]          ;383
000716  f7fffffe          BL       commucation_recv_get
00071a  7ac0              LDRB     r0,[r0,#0xb]          ;383
00071c  3830              SUBS     r0,r0,#0x30           ;383
00071e  eb000080          ADD      r0,r0,r0,LSL #2       ;383
000722  eb080040          ADD      r0,r8,r0,LSL #1       ;383
000726  3830              SUBS     r0,r0,#0x30           ;383
000728  b2c0              UXTB     r0,r0                 ;383
00072a  f88d0010          STRB     r0,[sp,#0x10]         ;383
00072e  f7fffffe          BL       commucation_recv_get
000732  f890800e          LDRB     r8,[r0,#0xe]          ;384
000736  f7fffffe          BL       commucation_recv_get
00073a  7b40              LDRB     r0,[r0,#0xd]          ;384
00073c  3830              SUBS     r0,r0,#0x30           ;384
00073e  eb000080          ADD      r0,r0,r0,LSL #2       ;384
000742  eb080040          ADD      r0,r8,r0,LSL #1       ;384
000746  3830              SUBS     r0,r0,#0x30           ;384
000748  b2c0              UXTB     r0,r0                 ;384
00074a  f88d0011          STRB     r0,[sp,#0x11]         ;384
00074e  f89d0011          LDRB     r0,[sp,#0x11]         ;387
000752  f89d1010          LDRB     r1,[sp,#0x10]         ;387
000756  f89d200f          LDRB     r2,[sp,#0xf]          ;387
00075a  e9cd2100          STRD     r2,r1,[sp,#0]         ;387
00075e  9002              STR      r0,[sp,#8]            ;387
000760  f89d300e          LDRB     r3,[sp,#0xe]          ;387
000764  f89d200d          LDRB     r2,[sp,#0xd]          ;387
000768  f89d100c          LDRB     r1,[sp,#0xc]          ;387
00076c  2001              MOVS     r0,#1                 ;387
00076e  e001              B        |L1.1908|
                  |L1.1904|
000770  e003              B        |L1.1914|
                  |L1.1906|
000772  e006              B        |L1.1922|
                  |L1.1908|
000774  f7fffffe          BL       set_rtc_time
000778  e003              B        |L1.1922|
                  |L1.1914|
00077a  2000              MOVS     r0,#0                 ;393
00077c  4935              LDR      r1,|L1.2132|
00077e  7288              STRB     r0,[r1,#0xa]          ;393
000780  2700              MOVS     r7,#0                 ;394
                  |L1.1922|
000782  4630              MOV      r0,r6                 ;396
000784  f7fffffe          BL       release_commucation_mail
000788  bf00              NOP                            ;397
                  |L1.1930|
00078a  4638              MOV      r0,r7                 ;398
00078c  e745              B        |L1.1562|
;;;400    
                          ENDP

                  send_ram_data PROC
;;;403    */
;;;404    static uint8_t send_ram_data(void)//发送内存数据
00078e  b5f8              PUSH     {r3-r7,lr}
;;;405    {
;;;406    	uint8_t rs,err;
;;;407    	MAIL * cmail;
;;;408    	
;;;409    	cmail = (MAIL*)OSQPend(commucationQueen,OS_TICKS_PER_SEC,&err);
000790  466a              MOV      r2,sp
000792  f44f717a          MOV      r1,#0x3e8
000796  4832              LDR      r0,|L1.2144|
000798  6800              LDR      r0,[r0,#0]  ; commucationQueen
00079a  f7fffffe          BL       OSQPend
00079e  4604              MOV      r4,r0
;;;410    	if(err == OS_NO_ERR)
0007a0  f89d0000          LDRB     r0,[sp,#0]
0007a4  2800              CMP      r0,#0
0007a6  d15d              BNE      |L1.2148|
;;;411    	{
;;;412    		if(g_vm.linkState == 1)
0007a8  482a              LDR      r0,|L1.2132|
0007aa  7a80              LDRB     r0,[r0,#0xa]  ; g_vm
0007ac  2801              CMP      r0,#1
0007ae  d14c              BNE      |L1.2122|
;;;413    		{
;;;414    			rs = TRUE;
0007b0  2501              MOVS     r5,#1
;;;415    			cmail->addr[1] = g_vm.linkNum+1;//发送流水号+1
0007b2  4828              LDR      r0,|L1.2132|
0007b4  7ac0              LDRB     r0,[r0,#0xb]  ; g_vm
0007b6  1c40              ADDS     r0,r0,#1
0007b8  6861              LDR      r1,[r4,#4]
0007ba  7048              STRB     r0,[r1,#1]
;;;416    			g_vm.linkNum = (g_vm.linkNum+1)%255;
0007bc  4825              LDR      r0,|L1.2132|
0007be  7ac0              LDRB     r0,[r0,#0xb]  ; g_vm
0007c0  1c40              ADDS     r0,r0,#1
0007c2  21ff              MOVS     r1,#0xff
0007c4  fb90f2f1          SDIV     r2,r0,r1
0007c8  fb010012          MLS      r0,r1,r2,r0
0007cc  4921              LDR      r1,|L1.2132|
0007ce  72c8              STRB     r0,[r1,#0xb]
;;;417    			
;;;418    			while(OSSemAccept(sem_com_recv));	//清除信号量
0007d0  bf00              NOP      
                  |L1.2002|
0007d2  4821              LDR      r0,|L1.2136|
0007d4  6800              LDR      r0,[r0,#0]  ; sem_com_recv
0007d6  f7fffffe          BL       OSSemAccept
0007da  2800              CMP      r0,#0
0007dc  d1f9              BNE      |L1.2002|
;;;419    			get_mail_send(cmail->addr);			//发送数据
0007de  6860              LDR      r0,[r4,#4]
0007e0  f7fffffe          BL       get_mail_send
;;;420    			OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*15,&err);
0007e4  466a              MOV      r2,sp
0007e6  f6432198          MOV      r1,#0x3a98
0007ea  481b              LDR      r0,|L1.2136|
0007ec  6800              LDR      r0,[r0,#0]  ; sem_com_recv
0007ee  f7fffffe          BL       OSSemPend
;;;421    			if(err == OS_NO_ERR)
0007f2  f89d0000          LDRB     r0,[sp,#0]
0007f6  bb28              CBNZ     r0,|L1.2116|
;;;422    			{
;;;423    				if(cmail->com_call_back != 0)//如果注册了回调函数，则调用
0007f8  6820              LDR      r0,[r4,#0]
0007fa  b170              CBZ      r0,|L1.2074|
;;;424    				{
;;;425    					if(!(cmail->com_call_back(commucation_recv_get(), commucation_rxlen_get(), cmail->addr))) //回调函数处理
0007fc  f7fffffe          BL       commucation_rxlen_get
000800  b286              UXTH     r6,r0
000802  f7fffffe          BL       commucation_recv_get
000806  4607              MOV      r7,r0
000808  4631              MOV      r1,r6
00080a  e9d43200          LDRD     r3,r2,[r4,#0]
00080e  4798              BLX      r3
000810  b9d8              CBNZ     r0,|L1.2122|
;;;426    						g_vm.linkState = 0;//直接踹掉线，重新发起连接
000812  2000              MOVS     r0,#0
000814  490f              LDR      r1,|L1.2132|
000816  7288              STRB     r0,[r1,#0xa]
000818  e017              B        |L1.2122|
                  |L1.2074|
;;;427    				}
;;;428    				else//未注册回调函数（用于那些普通回复：表示收到或者什么的）
;;;429    				{
;;;430    					if(commucation_recv_get()[0] == 0x1D && commucation_recv_get()[1] == cmail->addr[1] && commucation_recv_get()[3] == ACK_OK)
00081a  f7fffffe          BL       commucation_recv_get
00081e  7800              LDRB     r0,[r0,#0]
000820  281d              CMP      r0,#0x1d
000822  d10b              BNE      |L1.2108|
000824  f7fffffe          BL       commucation_recv_get
000828  7840              LDRB     r0,[r0,#1]
00082a  6861              LDR      r1,[r4,#4]
00082c  7849              LDRB     r1,[r1,#1]
00082e  4288              CMP      r0,r1
000830  d104              BNE      |L1.2108|
000832  f7fffffe          BL       commucation_recv_get
000836  78c0              LDRB     r0,[r0,#3]
000838  2830              CMP      r0,#0x30
00083a  d006              BEQ      |L1.2122|
                  |L1.2108|
;;;431    					{
;;;432    						//应答是正确的
;;;433    					}
;;;434    					else
;;;435    					{
;;;436    						g_vm.linkState = 0;//直接开始重新连接
00083c  2000              MOVS     r0,#0
00083e  4905              LDR      r1,|L1.2132|
000840  7288              STRB     r0,[r1,#0xa]
000842  e002              B        |L1.2122|
                  |L1.2116|
;;;437    					}
;;;438    				}
;;;439    				
;;;440    			}
;;;441    			else//无应答掉线
;;;442    			{
;;;443    				g_vm.linkState = 0;
000844  2000              MOVS     r0,#0
000846  4903              LDR      r1,|L1.2132|
000848  7288              STRB     r0,[r1,#0xa]
                  |L1.2122|
;;;444    			}
;;;445    		}
;;;446    		release_commucation_mail(cmail);//对于这种即时数据只发送一次立刻删除
00084a  4620              MOV      r0,r4
00084c  f7fffffe          BL       release_commucation_mail
000850  e009              B        |L1.2150|
000852  0000              DCW      0x0000
                  |L1.2132|
                          DCD      g_vm
                  |L1.2136|
                          DCD      sem_com_recv
                  |L1.2140|
                          DCD      0x0036ee80
                  |L1.2144|
                          DCD      commucationQueen
                  |L1.2148|
;;;447    	}
;;;448    	else//没有数据了
;;;449    	{
;;;450    		rs = FALSE;
000864  2500              MOVS     r5,#0
                  |L1.2150|
;;;451    	}	
;;;452    	return rs;
000866  4628              MOV      r0,r5
;;;453    }
000868  bdf8              POP      {r3-r7,pc}
;;;454    
                          ENDP

                  send_flash_data PROC
;;;458    */
;;;459    static void send_flash_data(void)//发送flash中的数据
00086a  b57c              PUSH     {r2-r6,lr}
;;;460    {
;;;461    //	uint32_t yy;
;;;462    //	yy = mailnum_get();
;;;463    //	yy = mailusedsec_get();
;;;464    //	yy = flashqueue_rear_get();
;;;465    //	yy = flashqueue_head_get();
;;;466    	
;;;467    	if(mailnum_get() != 0)
00086c  f7fffffe          BL       mailnum_get
000870  2800              CMP      r0,#0
000872  d058              BEQ      |L1.2342|
;;;468    	{
;;;469    		MAIL *cmail;
;;;470    		uint8_t *str, err;
;;;471    		uint32_t offset;
;;;472    		cmail = Apply_for_mail(PACK_MAX_SIZE);
000874  f44f7080          MOV      r0,#0x100
000878  f7fffffe          BL       Apply_for_mail
00087c  4605              MOV      r5,r0
;;;473    		
;;;474    		log_output(cmail);
;;;475    		if(cmail == 0)
00087e  b905              CBNZ     r5,|L1.2178|
                  |L1.2176|
;;;476    			return ;
;;;477    		
;;;478    		str = cmail->addr;			//数据读入地址
;;;479    		if(load_from_flash(str, &offset) != TRUE)
;;;480    		{
;;;481    			err = err;
;;;482    		}
;;;483    //		read_from_flashqueue(str);	//从FLASH中取出一条信息
;;;484    		if(mailcount_get() == 0)
;;;485    			mailcount_set(1);
;;;486    		str[1] = mailcount_get()+1; 		//加上编号,这个编号只有发送成功才+1
;;;487    							
;;;488    		while(OSSemAccept(sem_com_recv));
;;;489    		get_mail_send(str);
;;;490    		OSSemPend(sem_com_recv,OS_TICKS_PER_SEC*20,&err);
;;;491    		
;;;492    		if(err==OS_NO_ERR)//如果得到应答
;;;493    		{
;;;494    			if(commucation_recv_get()[0]==0x1D && commucation_recv_get()[1]==str[1] && commucation_recv_get()[3] == ACK_OK)
;;;495    			{
;;;496    				mailcount_set((mailcount_get()+1)%255);
;;;497    				delet_commucation_data(offset);
;;;498    //				delete_flashqueue_head(str);//删除掉该信息
;;;499    			}
;;;500    			else//不对也要强制掉线
;;;501    			{
;;;502    				g_vm.linkState = 0;
;;;503    			}
;;;504    		}
;;;505    		else//如果超时则认为断网
;;;506    		{
;;;507    			g_vm.linkState = 0;
;;;508    		}
;;;509    		release_commucation_mail(cmail);//释放掉该信封
;;;510    	}
;;;511    }
000880  bd7c              POP      {r2-r6,pc}
                  |L1.2178|
000882  686c              LDR      r4,[r5,#4]            ;478
000884  4669              MOV      r1,sp                 ;479
000886  4620              MOV      r0,r4                 ;479
000888  f7fffffe          BL       load_from_flash
00088c  2801              CMP      r0,#1                 ;479
00088e  d002              BEQ      |L1.2198|
000890  f89d0004          LDRB     r0,[sp,#4]            ;481
000894  9001              STR      r0,[sp,#4]            ;481
                  |L1.2198|
000896  f7fffffe          BL       mailcount_get
00089a  b910              CBNZ     r0,|L1.2210|
00089c  2001              MOVS     r0,#1                 ;485
00089e  f7fffffe          BL       mailcount_set
                  |L1.2210|
0008a2  f7fffffe          BL       mailcount_get
0008a6  1c40              ADDS     r0,r0,#1              ;486
0008a8  7060              STRB     r0,[r4,#1]            ;486
0008aa  bf00              NOP                            ;488
                  |L1.2220|
0008ac  483b              LDR      r0,|L1.2460|
0008ae  6800              LDR      r0,[r0,#0]            ;488  ; sem_com_recv
0008b0  f7fffffe          BL       OSSemAccept
0008b4  2800              CMP      r0,#0                 ;488
0008b6  d1f9              BNE      |L1.2220|
0008b8  4620              MOV      r0,r4                 ;489
0008ba  f7fffffe          BL       get_mail_send
0008be  aa01              ADD      r2,sp,#4              ;490
0008c0  f6446120          MOV      r1,#0x4e20            ;490
0008c4  4835              LDR      r0,|L1.2460|
0008c6  6800              LDR      r0,[r0,#0]            ;490  ; sem_com_recv
0008c8  f7fffffe          BL       OSSemPend
0008cc  f89d0004          LDRB     r0,[sp,#4]            ;492
0008d0  bb10              CBNZ     r0,|L1.2328|
0008d2  f7fffffe          BL       commucation_recv_get
0008d6  7800              LDRB     r0,[r0,#0]            ;494
0008d8  281d              CMP      r0,#0x1d              ;494
0008da  d119              BNE      |L1.2320|
0008dc  f7fffffe          BL       commucation_recv_get
0008e0  7840              LDRB     r0,[r0,#1]            ;494
0008e2  7861              LDRB     r1,[r4,#1]            ;494
0008e4  4288              CMP      r0,r1                 ;494
0008e6  d113              BNE      |L1.2320|
0008e8  f7fffffe          BL       commucation_recv_get
0008ec  78c0              LDRB     r0,[r0,#3]            ;494
0008ee  2830              CMP      r0,#0x30              ;494
0008f0  d10e              BNE      |L1.2320|
0008f2  f7fffffe          BL       mailcount_get
0008f6  1c40              ADDS     r0,r0,#1              ;496
0008f8  21ff              MOVS     r1,#0xff              ;496
0008fa  fbb0f2f1          UDIV     r2,r0,r1              ;496
0008fe  fb010612          MLS      r6,r1,r2,r0           ;496
000902  4630              MOV      r0,r6                 ;496
000904  f7fffffe          BL       mailcount_set
000908  9800              LDR      r0,[sp,#0]            ;497
00090a  f7fffffe          BL       delet_commucation_data
00090e  e006              B        |L1.2334|
                  |L1.2320|
000910  2000              MOVS     r0,#0                 ;502
000912  4923              LDR      r1,|L1.2464|
000914  7288              STRB     r0,[r1,#0xa]          ;502
000916  e002              B        |L1.2334|
                  |L1.2328|
000918  2000              MOVS     r0,#0                 ;507
00091a  4921              LDR      r1,|L1.2464|
00091c  7288              STRB     r0,[r1,#0xa]          ;507
                  |L1.2334|
00091e  4628              MOV      r0,r5                 ;509
000920  f7fffffe          BL       release_commucation_mail
000924  bf00              NOP                            ;510
                  |L1.2342|
000926  bf00              NOP      
000928  e7aa              B        |L1.2176|
;;;512    /*
                          ENDP

                  commucation_task PROC
;;;514    */
;;;515    void commucation_task(void)
00092a  b086              SUB      sp,sp,#0x18
;;;516    {
;;;517    	volatile uint32_t heart,correct;
;;;518    	volatile uint8_t firstLink;
;;;519    	uint8_t xintiao[6];
;;;520    	
;;;521    	heart = correct = OSTimeGet();
00092c  f7fffffe          BL       OSTimeGet
000930  9004              STR      r0,[sp,#0x10]
000932  9005              STR      r0,[sp,#0x14]
;;;522    	
;;;523    	g_vm.linkState = 0;
000934  2000              MOVS     r0,#0
000936  491a              LDR      r1,|L1.2464|
000938  7288              STRB     r0,[r1,#0xa]
;;;524    	g_vm.linkNum = 0;
00093a  72c8              STRB     r0,[r1,#0xb]
;;;525    	
;;;526    	xintiao[0]=0xff;
00093c  20ff              MOVS     r0,#0xff
00093e  f88d0004          STRB     r0,[sp,#4]
;;;527    	xintiao[2]=4;
000942  2004              MOVS     r0,#4
000944  f88d0006          STRB     r0,[sp,#6]
;;;528    	firstLink = TRUE;
000948  2001              MOVS     r0,#1
00094a  9003              STR      r0,[sp,#0xc]
;;;529    	
;;;530    	commucation_init();
00094c  f7fffffe          BL       commucation_init
;;;531    	
;;;532    	while(check_w_power_on < 4)//等待启动完成
000950  e003              B        |L1.2394|
                  |L1.2386|
;;;533    	OSTimeDly(OS_TICKS_PER_SEC);//等待所有设备初始化完成
000952  f44f707a          MOV      r0,#0x3e8
000956  f7fffffe          BL       OSTimeDly
                  |L1.2394|
00095a  4812              LDR      r0,|L1.2468|
00095c  7800              LDRB     r0,[r0,#0]            ;532  ; check_w_power_on
00095e  2804              CMP      r0,#4                 ;532
000960  dbf7              BLT      |L1.2386|
;;;534    	
;;;535    	while(1)
000962  e019              B        |L1.2456|
                  |L1.2404|
;;;536    	{
;;;537    		//查内存是否有数据要即时发送
;;;538    		if(!send_ram_data())//没有即时数据需要发送
000964  f7fffffe          BL       send_ram_data
000968  b9b0              CBNZ     r0,|L1.2456|
;;;539    		{
;;;540    			if(g_vm.linkState == 1 )//如果连网中
00096a  480d              LDR      r0,|L1.2464|
00096c  7a80              LDRB     r0,[r0,#0xa]  ; g_vm
00096e  2801              CMP      r0,#1
000970  d10d              BNE      |L1.2446|
;;;541    			{
;;;542    				firstLink = FALSE;
000972  2000              MOVS     r0,#0
000974  9003              STR      r0,[sp,#0xc]
;;;543    				if(send_heart(&heart,xintiao))//发心跳
000976  a901              ADD      r1,sp,#4
000978  a805              ADD      r0,sp,#0x14
00097a  f7fffffe          BL       send_heart
00097e  b158              CBZ      r0,|L1.2456|
;;;544    				if(send_correct_time(&correct))//发对时
000980  a804              ADD      r0,sp,#0x10
000982  f7fffffe          BL       send_correct_time
000986  b138              CBZ      r0,|L1.2456|
;;;545    					send_flash_data();//发flash数据
000988  f7fffffe          BL       send_flash_data
00098c  e004              B        |L1.2456|
                  |L1.2446|
;;;546    			}
;;;547    			else
;;;548    			{
;;;549    				send_linking(firstLink,&correct);//联机
00098e  a904              ADD      r1,sp,#0x10
000990  f89d000c          LDRB     r0,[sp,#0xc]
000994  f7fffffe          BL       send_linking
                  |L1.2456|
000998  e7e4              B        |L1.2404|
;;;550    			}
;;;551    		}
;;;552    	}
;;;553    }
;;;554    
                          ENDP

00099a  0000              DCW      0x0000
                  |L1.2460|
                          DCD      sem_com_recv
                  |L1.2464|
                          DCD      g_vm
                  |L1.2468|
                          DCD      check_w_power_on

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  pt_comucationQueen
                          %        80

                          AREA ||.data||, DATA, ALIGN=2

                  commucationQueen
                          DCD      0x00000000
                  sem_com_recv
                          DCD      0x00000000
                  flash_lock
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\USR\\Commucation\\com_fram.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_com_fram_c_897ba48e____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_com_fram_c_897ba48e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_com_fram_c_897ba48e____REVSH|
#line 144
|__asm___10_com_fram_c_897ba48e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

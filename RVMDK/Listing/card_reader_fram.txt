; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\card_reader_fram.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\card_reader_fram.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\card_reader_fram.crf ..\USR\Card\card_reader_fram.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  send_icreader_msg PROC
;;;21     */
;;;22     uint8_t send_icreader_msg(uint8_t cmdtype, uint8_t value)
000000  b570              PUSH     {r4-r6,lr}
;;;23     {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;24     	FSMMSG *imsg;
;;;25     	imsg = apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       apply_fsm_msg
00000c  4604              MOV      r4,r0
;;;26     	log_output(imsg);
;;;27     	if(imsg != 0)
00000e  b184              CBZ      r4,|L1.50|
;;;28     	{
;;;29     		imsg->type = MsgCARD;
000010  2004              MOVS     r0,#4
000012  7020              STRB     r0,[r4,#0]
;;;30     		imsg->stype = cmdtype;
000014  7065              STRB     r5,[r4,#1]
;;;31     		imsg->value = value;
000016  6066              STR      r6,[r4,#4]
;;;32     		if(OSQPost(icreaderQueen, imsg)!=OS_NO_ERR){
000018  4621              MOV      r1,r4
00001a  483b              LDR      r0,|L1.264|
00001c  6800              LDR      r0,[r0,#0]  ; icreaderQueen
00001e  f7fffffe          BL       OSQPost
000022  b120              CBZ      r0,|L1.46|
;;;33     			release_fsm_msg(imsg);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       release_fsm_msg
;;;34     			return FALSE;
00002a  2000              MOVS     r0,#0
                  |L1.44|
;;;35     		}
;;;36     		return TRUE;
;;;37     	}
;;;38     	return 2; 
;;;39     }
00002c  bd70              POP      {r4-r6,pc}
                  |L1.46|
00002e  2001              MOVS     r0,#1                 ;36
000030  e7fc              B        |L1.44|
                  |L1.50|
000032  2002              MOVS     r0,#2                 ;38
000034  e7fa              B        |L1.44|
;;;40     
                          ENDP

                  icreader_state_change PROC
;;;43     */
;;;44     void icreader_state_change(uint8_t state)
000036  b570              PUSH     {r4-r6,lr}
;;;45     {
000038  4604              MOV      r4,r0
;;;46     	if(state != cIC.state)
00003a  4834              LDR      r0,|L1.268|
00003c  7880              LDRB     r0,[r0,#2]  ; cIC
00003e  42a0              CMP      r0,r4
000040  d01f              BEQ      |L1.130|
;;;47     	{
;;;48     		if(cIC.state == INIT)//初始状态（此状态为开机，不汇报，因为有开机汇报包）
000042  4832              LDR      r0,|L1.268|
000044  7880              LDRB     r0,[r0,#2]  ; cIC
000046  2802              CMP      r0,#2
000048  d114              BNE      |L1.116|
;;;49     		{
;;;50     			FSMMSG* imsg;
;;;51     			//发送消息
;;;52     			imsg = apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
00004a  2000              MOVS     r0,#0
00004c  f7fffffe          BL       apply_fsm_msg
000050  4605              MOV      r5,r0
;;;53     			log_output(imsg);//日志输出
;;;54     			cIC.state = state;
000052  482e              LDR      r0,|L1.268|
000054  7084              STRB     r4,[r0,#2]
;;;55     			if(imsg!= 0)
000056  b155              CBZ      r5,|L1.110|
;;;56     			{
;;;57     				imsg->type = MsgCARD;
000058  2004              MOVS     r0,#4
00005a  7028              STRB     r0,[r5,#0]
;;;58     				imsg->stype = ICREADER_INIT;
00005c  2000              MOVS     r0,#0
00005e  7068              STRB     r0,[r5,#1]
;;;59     				if(!send_fsm_msg(imsg))
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       send_fsm_msg
000066  b910              CBNZ     r0,|L1.110|
;;;60     				release_fsm_msg(imsg);
000068  4628              MOV      r0,r5
00006a  f7fffffe          BL       release_fsm_msg
                  |L1.110|
;;;61     			}
;;;62     			/***********
;;;63     			这个赋值的前后顺序与状态机的优先级有关，
;;;64     			如果状态机的优先级任务高于当前任务，则需要赋值在
;;;65     			send_fsm_msg() 之前，否则消息发送后，状态机立即抢占
;;;66     			cpu资源，导致下面这句话没有来得及执行
;;;67     			***********/
;;;68     			cIC.state = state;
00006e  4827              LDR      r0,|L1.268|
000070  7084              STRB     r4,[r0,#2]
;;;69     		}
000072  e006              B        |L1.130|
                  |L1.116|
;;;70     		else//这里不用发消息，因为有全局变量
;;;71     		{
;;;72     			cIC.state = state;
000074  4825              LDR      r0,|L1.268|
000076  7084              STRB     r4,[r0,#2]
;;;73     			report_state_change(STATE_PAY, EQU_ICCARD, state);//汇报状态改变
000078  4622              MOV      r2,r4
00007a  2103              MOVS     r1,#3
00007c  2002              MOVS     r0,#2
00007e  f7fffffe          BL       report_state_change
                  |L1.130|
;;;74     		}
;;;75     	}
;;;76     }
000082  bd70              POP      {r4-r6,pc}
;;;77     
                          ENDP

                  ireader_init PROC
;;;80     */
;;;81     static void ireader_init(void)
000084  b510              PUSH     {r4,lr}
;;;82     {
;;;83     	//设备初始化
;;;84     	icreaderQueen = OSQCreate(icmsg,IREADER_QUEEN_SIZE);//创建队列
000086  2105              MOVS     r1,#5
000088  4821              LDR      r0,|L1.272|
00008a  f7fffffe          BL       OSQCreate
00008e  491e              LDR      r1,|L1.264|
000090  6008              STR      r0,[r1,#0]  ; icreaderQueen
;;;85     	sem_icreader_recv = OSSemCreate(0); //创建接收信号量
000092  2000              MOVS     r0,#0
000094  f7fffffe          BL       OSSemCreate
000098  491e              LDR      r1,|L1.276|
00009a  6008              STR      r0,[r1,#0]  ; sem_icreader_recv
;;;86     	cIC.state = INIT;
00009c  2002              MOVS     r0,#2
00009e  491b              LDR      r1,|L1.268|
0000a0  7088              STRB     r0,[r1,#2]
;;;87     	ireader_link();//连机查询
0000a2  f7fffffe          BL       ireader_link
;;;88     }
0000a6  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  ireader_task PROC
;;;92     */
;;;93     void ireader_task(void)
0000a8  b508              PUSH     {r3,lr}
;;;94     {
;;;95     	FSMMSG* imsg;
;;;96     	uint8_t err;
;;;97     	ireader_init();
0000aa  f7fffffe          BL       ireader_init
;;;98     	
;;;99     	while(1)
0000ae  e02a              B        |L1.262|
                  |L1.176|
;;;100    	{
;;;101    		/*
;;;102    		那个简易刷卡头,主动推送消息
;;;103    		*/
;;;104    //		if(wait_ireader_bus() == OS_NO_ERR)
;;;105    //		{
;;;106    //			imsg = apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;107    //			assert_param(imsg);
;;;108    //			imsg->type = MsgCARD;
;;;109    //			imsg->value = 1;
;;;110    //			if(!send_fsm_msg(imsg))
;;;111    //			release_fsm_msg(imsg);
;;;112    //		}
;;;113    		
;;;114    		/*
;;;115    		一问一答的刷卡头
;;;116    		*/
;;;117    		imsg = (FSMMSG*)OSQPend(icreaderQueen, OS_TICKS_PER_SEC*10, &err);//队列等待
0000b0  466a              MOV      r2,sp
0000b2  f2427110          MOV      r1,#0x2710
0000b6  4814              LDR      r0,|L1.264|
0000b8  6800              LDR      r0,[r0,#0]  ; icreaderQueen
0000ba  f7fffffe          BL       OSQPend
0000be  4604              MOV      r4,r0
;;;118    		if(err == OS_NO_ERR)
0000c0  f89d0000          LDRB     r0,[sp,#0]
0000c4  b9e8              CBNZ     r0,|L1.258|
;;;119    		{
;;;120    			switch(imsg->stype)
0000c6  7860              LDRB     r0,[r4,#1]
0000c8  2801              CMP      r0,#1
0000ca  d002              BEQ      |L1.210|
0000cc  2802              CMP      r0,#2
0000ce  d117              BNE      |L1.256|
0000d0  e00a              B        |L1.232|
                  |L1.210|
;;;121    			{
;;;122    				case ICREADER_FIND:
;;;123    					imsg->value =  ireader_read();
0000d2  f7fffffe          BL       ireader_read
0000d6  6060              STR      r0,[r4,#4]
;;;124    					if(!send_fsm_msg(imsg))
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       send_fsm_msg
0000de  b910              CBNZ     r0,|L1.230|
;;;125    					release_fsm_msg(imsg);
0000e0  4620              MOV      r0,r4
0000e2  f7fffffe          BL       release_fsm_msg
                  |L1.230|
;;;126    				break;
0000e6  e00b              B        |L1.256|
                  |L1.232|
;;;127    				
;;;128    				case ICREADER_PAY:
;;;129    					imsg->value =  ireader_pay(imsg->value);
0000e8  6860              LDR      r0,[r4,#4]
0000ea  f7fffffe          BL       ireader_pay
0000ee  6060              STR      r0,[r4,#4]
;;;130    					if(!send_fsm_msg(imsg))
0000f0  4620              MOV      r0,r4
0000f2  f7fffffe          BL       send_fsm_msg
0000f6  b910              CBNZ     r0,|L1.254|
;;;131    					release_fsm_msg(imsg);
0000f8  4620              MOV      r0,r4
0000fa  f7fffffe          BL       release_fsm_msg
                  |L1.254|
;;;132    				break;
0000fe  bf00              NOP      
                  |L1.256|
000100  e001              B        |L1.262|
                  |L1.258|
;;;133    			}
;;;134    		}
;;;135    		else
;;;136    		{
;;;137    			ireader_link();//联机
000102  f7fffffe          BL       ireader_link
                  |L1.262|
000106  e7d3              B        |L1.176|
;;;138    		}
;;;139    	}
;;;140    }
                          ENDP

                  |L1.264|
                          DCD      icreaderQueen
                  |L1.268|
                          DCD      ||cIC||
                  |L1.272|
                          DCD      icmsg
                  |L1.276|
                          DCD      sem_icreader_recv

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ||cIC||
                          %        64
                  icmsg
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  icreaderQueen
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\USR\\Card\\card_reader_fram.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_card_reader_fram_c_8dacc009____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_card_reader_fram_c_8dacc009____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_card_reader_fram_c_8dacc009____REVSH|
#line 144
|__asm___18_card_reader_fram_c_8dacc009____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

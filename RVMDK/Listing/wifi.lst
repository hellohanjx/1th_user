L 1 "..\LCD\wifi.c"
N/*********************************************************************
N*                SEGGER Microcontroller GmbH & Co. KG                *
N*        Solutions for real time microcontroller applications        *
N*                           www.segger.com                           *
N**********************************************************************
N*                                                                    *
N* C-file generated by                                                *
N*                                                                    *
N*        Bitmap converter for emWin V5.12.                           *
N*        Compiled Jun 29 2011, 15:28:21                              *
N*        (C) 1998 - 2010 Segger Microcontroller GmbH & Co. KG        *
N*                                                                    *
N**********************************************************************
N*                                                                    *
N* Source file: wifi                                                  *
N* Dimensions:  25 * 22                                               *
N* NumColors:   16bpp: 65536                                          *
N*                                                                    *
N**********************************************************************
N*/
N
N#include "stdint.h"
L 1 "..\USR\stm32\stdint.h" 1
N/* Copyright (C) ARM Ltd., 1999 */
N/* All rights reserved */
N
N/*
N * RCS $Revision: 180721 $
N * Checkin $Date: 2013-06-24 09:41:57 +0100 (Mon, 24 Jun 2013) $
N * Revising $Author: agrant $
N */
N
N#ifndef __stdint_h
N#define __stdint_h
N#define __ARMCLIB_VERSION 5040049
N
N/*
N * Depending on compiler version __int64 or __INT64_TYPE__ should be defined.
N */
N#ifndef __int64
N  #ifdef __INT64_TYPE__
S    #define __int64 __INT64_TYPE__
N  #endif
N  /* On some architectures neither of these may be defined - if so, fall
N     through and error out if used. */
N#endif
N
N  #ifndef __STDINT_DECLS
N  #define __STDINT_DECLS
N
N    #undef __CLIBNS
N
N    #ifdef __cplusplus
S      namespace std {
S          #define __CLIBNS std::
S          extern "C" {
N    #else
N      #define __CLIBNS
N    #endif  /* __cplusplus */
N
N
N/*
N * 'signed' is redundant below, except for 'signed char' and if
N * the typedef is used to declare a bitfield.
N * '__int64' is used instead of 'long long' so that this header
N * can be used in --strict mode.
N */
N
N    /* 7.18.1.1 */
N
N    /* exact-width signed integer types */
Ntypedef   signed          char int8_t;
Ntypedef   signed short     int int16_t;
Ntypedef   signed           int int32_t;
Ntypedef   signed       __int64 int64_t;
N
N    /* exact-width unsigned integer types */
Ntypedef unsigned          char uint8_t;
Ntypedef unsigned short     int uint16_t;
Ntypedef unsigned           int uint32_t;
Ntypedef unsigned       __int64 uint64_t;
N
N
Ntypedef enum{FALSE = 0, TRUE = !FALSE}bool;
N
N    /* 7.18.1.2 */
N
N    /* smallest type of at least n bits */
N    /* minimum-width signed integer types */
Ntypedef   signed          char int_least8_t;
Ntypedef   signed short     int int_least16_t;
Ntypedef   signed           int int_least32_t;
Ntypedef   signed       __int64 int_least64_t;
N
N    /* minimum-width unsigned integer types */
Ntypedef unsigned          char uint_least8_t;
Ntypedef unsigned short     int uint_least16_t;
Ntypedef unsigned           int uint_least32_t;
Ntypedef unsigned       __int64 uint_least64_t;
N
N    /* 7.18.1.3 */
N
N    /* fastest minimum-width signed integer types */
Ntypedef   signed           int int_fast8_t;
Ntypedef   signed           int int_fast16_t;
Ntypedef   signed           int int_fast32_t;
Ntypedef   signed       __int64 int_fast64_t;
N
N    /* fastest minimum-width unsigned integer types */
Ntypedef unsigned           int uint_fast8_t;
Ntypedef unsigned           int uint_fast16_t;
Ntypedef unsigned           int uint_fast32_t;
Ntypedef unsigned       __int64 uint_fast64_t;
N
N    /* 7.18.1.4 integer types capable of holding object pointers */
Ntypedef   signed           int intptr_t;
Ntypedef unsigned           int uintptr_t;
N
N    /* 7.18.1.5 greatest-width integer types */
Ntypedef   signed       __int64 intmax_t;
Ntypedef unsigned       __int64 uintmax_t;
N
N
N#if !defined(__cplusplus) || defined(__STDC_LIMIT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.2.1 */
N
N    /* minimum values of exact-width signed integer types */
N#define INT8_MIN                   -128
N#define INT16_MIN                -32768
N#define INT32_MIN          (~0x7fffffff)   /* -2147483648 is unsigned */
N#define INT64_MIN  __ESCAPE__(~0x7fffffffffffffffll) /* -9223372036854775808 is unsigned */
N
N    /* maximum values of exact-width signed integer types */
N#define INT8_MAX                    127
N#define INT16_MAX                 32767
N#define INT32_MAX            2147483647
N#define INT64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of exact-width unsigned integer types */
N#define UINT8_MAX                   255
N#define UINT16_MAX                65535
N#define UINT32_MAX           4294967295u
N#define UINT64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.2 */
N
N    /* minimum values of minimum-width signed integer types */
N#define INT_LEAST8_MIN                   -128
N#define INT_LEAST16_MIN                -32768
N#define INT_LEAST32_MIN          (~0x7fffffff)
N#define INT_LEAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of minimum-width signed integer types */
N#define INT_LEAST8_MAX                    127
N#define INT_LEAST16_MAX                 32767
N#define INT_LEAST32_MAX            2147483647
N#define INT_LEAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of minimum-width unsigned integer types */
N#define UINT_LEAST8_MAX                   255
N#define UINT_LEAST16_MAX                65535
N#define UINT_LEAST32_MAX           4294967295u
N#define UINT_LEAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.3 */
N
N    /* minimum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MIN           (~0x7fffffff)
N#define INT_FAST16_MIN          (~0x7fffffff)
N#define INT_FAST32_MIN          (~0x7fffffff)
N#define INT_FAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MAX             2147483647
N#define INT_FAST16_MAX            2147483647
N#define INT_FAST32_MAX            2147483647
N#define INT_FAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of fastest minimum-width unsigned integer types */
N#define UINT_FAST8_MAX            4294967295u
N#define UINT_FAST16_MAX           4294967295u
N#define UINT_FAST32_MAX           4294967295u
N#define UINT_FAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.4 */
N
N    /* minimum value of pointer-holding signed integer type */
N#define INTPTR_MIN (~0x7fffffff)
N
N    /* maximum value of pointer-holding signed integer type */
N#define INTPTR_MAX   2147483647
N
N    /* maximum value of pointer-holding unsigned integer type */
N#define UINTPTR_MAX  4294967295u
N
N    /* 7.18.2.5 */
N
N    /* minimum value of greatest-width signed integer type */
N#define INTMAX_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum value of greatest-width signed integer type */
N#define INTMAX_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum value of greatest-width unsigned integer type */
N#define UINTMAX_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.3 */
N
N    /* limits of ptrdiff_t */
N#define PTRDIFF_MIN (~0x7fffffff)
N#define PTRDIFF_MAX   2147483647
N
N    /* limits of sig_atomic_t */
N#define SIG_ATOMIC_MIN (~0x7fffffff)
N#define SIG_ATOMIC_MAX   2147483647
N
N    /* limit of size_t */
N#define SIZE_MAX 4294967295u
N
N    /* limits of wchar_t */
N    /* NB we have to undef and redef because they're defined in both
N     * stdint.h and wchar.h */
N#undef WCHAR_MIN
N#undef WCHAR_MAX
N
N#if defined(__WCHAR32) || (defined(__ARM_SIZEOF_WCHAR_T) && __ARM_SIZEOF_WCHAR_T == 4)
X#if 0L || (0L && __ARM_SIZEOF_WCHAR_T == 4)
S  #define WCHAR_MIN   0
S  #define WCHAR_MAX   0xffffffffU
N#else
N  #define WCHAR_MIN   0
N  #define WCHAR_MAX   65535
N#endif
N
N    /* limits of wint_t */
N#define WINT_MIN (~0x7fffffff)
N#define WINT_MAX 2147483647
N
N#endif /* __STDC_LIMIT_MACROS */
N
N#if !defined(__cplusplus) || defined(__STDC_CONSTANT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.4.1 macros for minimum-width integer constants */
N#define INT8_C(x)   (x)
N#define INT16_C(x)  (x)
N#define INT32_C(x)  (x)
N#define INT64_C(x)  __ESCAPE__(x ## ll)
N
N#define UINT8_C(x)  (x ## u)
N#define UINT16_C(x) (x ## u)
N#define UINT32_C(x) (x ## u)
N#define UINT64_C(x) __ESCAPE__(x ## ull)
N
N    /* 7.18.4.2 macros for greatest-width integer constants */
N#define INTMAX_C(x)  __ESCAPE__(x ## ll)
N#define UINTMAX_C(x) __ESCAPE__(x ## ull)
N
N#endif /* __STDC_CONSTANT_MACROS */
N
N    #ifdef __cplusplus
S         }  /* extern "C" */
S      }  /* namespace std */
N    #endif /* __cplusplus */
N  #endif /* __STDINT_DECLS */
N
N  #ifdef __cplusplus
S    #ifndef __STDINT_NO_EXPORTS
S      using ::std::int8_t;
S      using ::std::int16_t;
S      using ::std::int32_t;
S      using ::std::int64_t;
S      using ::std::uint8_t;
S      using ::std::uint16_t;
S      using ::std::uint32_t;
S      using ::std::uint64_t;
S      using ::std::int_least8_t;
S      using ::std::int_least16_t;
S      using ::std::int_least32_t;
S      using ::std::int_least64_t;
S      using ::std::uint_least8_t;
S      using ::std::uint_least16_t;
S      using ::std::uint_least32_t;
S      using ::std::uint_least64_t;
S      using ::std::int_fast8_t;
S      using ::std::int_fast16_t;
S      using ::std::int_fast32_t;
S      using ::std::int_fast64_t;
S      using ::std::uint_fast8_t;
S      using ::std::uint_fast16_t;
S      using ::std::uint_fast32_t;
S      using ::std::uint_fast64_t;
S      using ::std::intptr_t;
S      using ::std::uintptr_t;
S      using ::std::intmax_t;
S      using ::std::uintmax_t;
S    #endif 
N  #endif /* __cplusplus */
N
N#endif /* __stdint_h */
N
N/* end of stdint.h */
N
N
N
L 23 "..\LCD\wifi.c" 2
N//48*34
Nconst uint16_t acwifi[] = {
N 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x19E3, 0x1A44, 0x1A44, 0x19E3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x33C6, 0x3CA7, 0x3C87, 0x3C87, 0x3C87, 0x5F2C, 0x5FED, 0x5FED, 0x5F2C, 0x3C87, 0x3C87, 0x3C87, 0x3CA7, 0x34A6, 
N        0x0260, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0921, 0x1142, 0x4508, 0x56CB, 0x56CB, 0x67AC, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CC, 
N        0x574B, 0x56CB, 0x3D07, 0x1142, 0x0921, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x08E1, 0x33A6, 0x570B, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 
N        0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x572B, 0x2BA6, 0x08E1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 0x3C27, 0x566A, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 
N        0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x566A, 0x3426, 0x0060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x22C4, 0x5FCC, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 
N        0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67ED, 0x22C5, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1162, 0x3CE8, 0x5F4C, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67EC, 0x2EC5, 0x22E5, 0x22E5, 0x22E5, 0x22E5, 0x22E5, 0x22E5, 0x2B45, 0x67EC, 0x67CD, 0x67CD, 
N        0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x5F4C, 0x3CE8, 0x1162, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x1122, 0x5F4C, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CC, 0x4E4A, 0x564A, 0x19C3, 0x08A1, 0x08A1, 0x0080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x08A1, 0x08A1, 0x11C2, 
N        0x4E49, 0x564A, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x5F2C, 0x1122, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0881, 0x3BE7, 0x56AB, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x5F6C, 0x33E6, 0x2BE6, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0020, 0x3BE7, 0x33E6, 0x5F6C, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x56AB, 0x3BE7, 0x0881, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x558A, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67AC, 0x3427, 0x1182, 0x0000, 0x0000, 0x0000, 0x0060, 0x00A0, 0x00A0, 0x03C2, 0x05C4, 0x05C4, 0x05C4, 0x05E4, 0x05C4, 0x05C4, 0x05C4, 0x05C4, 0x03E2, 0x00A0, 0x00A0, 
N        0x0060, 0x0000, 0x0000, 0x0000, 0x1182, 0x3447, 0x5FAC, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x4DA9, 0x0861, 0x0000,
N  0x0000, 0x0000, 0x56AB, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x4DC9, 0x33A6, 0x0000, 0x0000, 0x0000, 0x0000, 0x02A2, 0x0542, 0x0784, 0x0765, 0x0764, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0764, 0x0764, 0x0765, 
N        0x0544, 0x02A1, 0x0000, 0x0000, 0x0000, 0x0000, 0x2BA5, 0x4DC9, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x3C87, 0x0000,
N  0x0000, 0x0000, 0x4EAA, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x4DC9, 0x08E1, 0x0000, 0x0000, 0x0000, 0x01E1, 0x04E3, 0x0745, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 
N        0x0765, 0x0744, 0x04E3, 0x01E1, 0x0000, 0x0000, 0x0000, 0x08E1, 0x45C9, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x67CD, 0x570C, 0x1182, 0x0000,
N  0x0000, 0x0000, 0x1102, 0x5ECC, 0x67CD, 0x67CD, 0x56CB, 0x554A, 0x0020, 0x0000, 0x0080, 0x01E1, 0x0624, 0x0724, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 
N        0x0765, 0x0765, 0x0765, 0x0724, 0x0624, 0x01E1, 0x0080, 0x0000, 0x0020, 0x1142, 0x56AB, 0x67CD, 0x67CD, 0x4EAB, 0x0902, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x1182, 0x4EA9, 0x56AB, 0x11A3, 0x0000, 0x0000, 0x0000, 0x04C3, 0x0785, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0764, 0x0765, 0x0764, 0x0764, 0x0764, 0x0765, 0x0764, 0x0764, 0x0765, 0x0765, 0x0765, 
N        0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0745, 0x04A3, 0x0000, 0x0000, 0x0000, 0x11A3, 0x56AB, 0x568B, 0x1182, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x08E1, 0x0902, 0x0000, 0x0000, 0x0060, 0x0483, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x06C4, 0x0664, 0x0664, 0x0664, 0x0623, 0x0623, 0x0664, 0x0684, 0x0664, 0x06C4, 0x0765, 0x0765, 
N        0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0483, 0x0100, 0x0020, 0x0000, 0x0902, 0x08E1, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 0x04C3, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x04E3, 0x0443, 0x0161, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0161, 0x0443, 0x04E3, 
N        0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0783, 0x0340, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00E0, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0764, 0x0624, 0x0221, 0x0060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 
N        0x0221, 0x0604, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0684, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00A0, 0x05C3, 0x0744, 0x0765, 0x0765, 0x0765, 0x0684, 0x01C1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0161, 0x0221, 0x0221, 0x0604, 0x0745, 0x0745, 0x0724, 0x0501, 0x0221, 0x0241, 0x00E0, 0x0000, 
N        0x0000, 0x0000, 0x01C1, 0x0684, 0x0764, 0x0765, 0x0765, 0x0745, 0x05E4, 0x00A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0121, 0x05E4, 0x0765, 0x0765, 0x0722, 0x01E1, 0x0000, 0x0000, 0x0000, 0x0342, 0x0443, 0x0644, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0764, 0x0583, 0x0362, 
N        0x0000, 0x0000, 0x0000, 0x0201, 0x0722, 0x0765, 0x0765, 0x05E4, 0x0141, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00A0, 0x05E4, 0x0642, 0x01E0, 0x0000, 0x0000, 0x0281, 0x06A2, 0x0724, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0724, 
N        0x06A4, 0x0282, 0x0000, 0x0000, 0x00E0, 0x0362, 0x05E4, 0x00A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0241, 0x0724, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 
N        0x0764, 0x0744, 0x0241, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0221, 0x06C4, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0764, 0x0764, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 
N        0x0765, 0x0765, 0x06C4, 0x0261, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x02C2, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0624, 0x04E3, 0x04E3, 0x04E3, 0x04E3, 0x0604, 0x0764, 0x0765, 0x0765, 0x0765, 
N        0x0765, 0x0765, 0x0765, 0x0602, 0x0080, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0101, 0x05C4, 0x0765, 0x0765, 0x0765, 0x0765, 0x07A3, 0x0302, 0x0161, 0x0000, 0x0000, 0x0000, 0x0000, 0x0161, 0x02C2, 0x0463, 0x0764, 0x0764, 
N        0x0765, 0x0765, 0x05E4, 0x0121, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 0x05E4, 0x0764, 0x0745, 0x03E3, 0x00A0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0040, 0x03C2, 0x0745, 
N        0x0764, 0x0603, 0x0060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00E0, 0x03A2, 0x0383, 0x0000, 0x0000, 0x0000, 0x0201, 0x03C2, 0x03A2, 0x03A2, 0x03A2, 0x01C1, 0x0000, 0x0000, 0x0000, 0x0383, 
N        0x03A2, 0x00E1, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 0x0563, 0x06A4, 0x0764, 0x0765, 0x0764, 0x0744, 0x0684, 0x0583, 0x0060, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x04E3, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x05E3, 0x0120, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x04E3, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x05C3, 0x0100, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0040, 0x05A4, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0765, 0x0584, 0x0020, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00C1, 0x0564, 0x0765, 0x0765, 0x0765, 0x0765, 0x0563, 0x00C0, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00A0, 0x0583, 0x0765, 0x0765, 0x0564, 0x00A0, 0x0000, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0060, 0x0443, 0x0443, 0x0060, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
N  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
N        0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
N};
N
N
N/* *** End of file *** */

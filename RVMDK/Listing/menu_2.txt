; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\menu_2.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\menu_2.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\menu_2.crf ..\USR\FSM\menu_2.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  content_creat PROC
;;;9      */
;;;10     static void content_creat(void)
000000  4770              BX       lr
;;;11     {
;;;12     	#if (SCREEN != TM12864Z && SCREEN != TM12864_NO_FONT)
;;;13     
;;;14     	//读取数据结构体
;;;15     	SETUP_DEVICE mac_data;
;;;16     	SETUP_COMMON vm_common;
;;;17     	SETUP_COMMUCATION commucation;
;;;18     	//声明此界面要显示的内容，并初始化
;;;19     //	lcd_fill_color(300, 0, (lcd_get_xsize() - 300), lcd_get_ysize(), BLUE);//刷屏
;;;20     
;;;21     	//显示内容
;;;22     	//读取要显示的数据
;;;23     	e2p_get_vminfo(&mac_data);
;;;24     	e2p_get_common(&vm_common);
;;;25     	e2p_get_commucation(&commucation);
;;;26     	
;;;27     	//"机器信息"
;;;28     	lcd_show_string(pt_word.menu[7].character, pt_word.menu[7].x, pt_word.menu[7].y, pt_word.menu[7].color, pt_word.menu[7].background, *(pt_word.menu[7].font));
;;;29     	lcd_show_character(&pt_word.menu[11]);//"机器ID:"
;;;30     	lcd_show_num(mac_data.facId, pt_word.menu[11].valx, pt_word.menu[11].valy, pt_word.menu[11].color, pt_word.menu[11].background, *(pt_word.menu[11].font), 1, 10);
;;;31     
;;;32     	lcd_show_character(&pt_word.menu[12]);//"版本号:"
;;;33     	lcd_show_string((const char*)version, pt_word.menu[12].valx, pt_word.menu[12].valy, pt_word.menu[12].color, pt_word.menu[12].background, *(pt_word.menu[12].font));
;;;34     	
;;;35     	lcd_show_character(&pt_word.menu[13]);//"驱动板:"
;;;36     	if(pt_driverBoard[0]->state == 1)//"正常"
;;;37     		lcd_show_string(pt_word.menu[14].character, pt_word.menu[13].valx, pt_word.menu[13].valy, pt_word.menu[14].color, pt_word.menu[14].background, *(pt_word.menu[14].font));
;;;38     	else//"未连接"
;;;39     		lcd_show_string(pt_word.menu[15].character, pt_word.menu[13].valx, pt_word.menu[13].valy, pt_word.menu[15].color, pt_word.menu[15].background, *(pt_word.menu[15].font));
;;;40     	
;;;41     	lcd_show_character(&pt_word.menu[16]);//"读卡器:"
;;;42     	if(cIC.state == 1)//"正常"
;;;43     		lcd_show_string(pt_word.menu[14].character, pt_word.menu[16].valx, pt_word.menu[16].valy, pt_word.menu[14].color, pt_word.menu[14].background, *(pt_word.menu[14].font));
;;;44     	else//"未连接"
;;;45     		lcd_show_string(pt_word.menu[15].character, pt_word.menu[16].valx, pt_word.menu[16].valy, pt_word.menu[15].color, pt_word.menu[15].background, *(pt_word.menu[15].font));
;;;46     	
;;;47     	lcd_show_character(&pt_word.menu[17]);//"纸币器:"
;;;48     	if(billequip.eqiu_status > 1)//"未连接"
;;;49     		lcd_show_string(pt_word.menu[15].character, pt_word.menu[17].valx, pt_word.menu[17].valy, pt_word.menu[15].color, pt_word.menu[15].background, *(pt_word.menu[15].font));
;;;50     	else//"正常"
;;;51     		lcd_show_string(pt_word.menu[14].character, pt_word.menu[17].valx, pt_word.menu[17].valy, pt_word.menu[14].color, pt_word.menu[14].background, *(pt_word.menu[14].font));
;;;52     	
;;;53     	lcd_show_character(&pt_word.menu[18]);//"硬币器:
;;;54     	if(coinequip.eqiu_status > 1)//"未连接"
;;;55     		lcd_show_string(pt_word.menu[15].character, pt_word.menu[18].valx, pt_word.menu[18].valy, pt_word.menu[15].color, pt_word.menu[15].background, *(pt_word.menu[15].font));
;;;56     	else//"正常"
;;;57     		lcd_show_string(pt_word.menu[14].character, pt_word.menu[18].valx, pt_word.menu[18].valy, pt_word.menu[14].color, pt_word.menu[14].background, *(pt_word.menu[14].font));
;;;58     
;;;59     	lcd_show_character(&pt_word.menu[19]);//"网  络:"
;;;60     	if(g_vm.linkState == 1)//"连网"
;;;61     		lcd_show_string(pt_word.menu[20].character, pt_word.menu[19].valx, pt_word.menu[19].valy, pt_word.menu[20].color, pt_word.menu[20].background, *(pt_word.menu[20].font));
;;;62     	else//"未连网"
;;;63     		lcd_show_string(pt_word.menu[21].character, pt_word.menu[19].valx, pt_word.menu[19].valy, pt_word.menu[21].color, pt_word.menu[21].background, *(pt_word.menu[21].font));
;;;64     	
;;;65     	lcd_show_character(&pt_word.menu[22]);//"温  度:"
;;;66     	if(pt_driverBoard[0]->temp.state[0] == 1)//温度值
;;;67     		lcd_show_num(pt_driverBoard[0]->temp.value[0], pt_word.menu[22].valx, pt_word.menu[22].valy, pt_word.menu[22].color, pt_word.menu[22].background, *(pt_word.menu[22].font), 0, 10);
;;;68     	else//"故障"
;;;69     		lcd_show_string(pt_word.menu[23].character, pt_word.menu[22].valx, pt_word.menu[22].valy, pt_word.menu[23].color, pt_word.menu[23].background, *(pt_word.menu[23].font));
;;;70     
;;;71     	#endif
;;;72     }
;;;73     
                          ENDP

                  menu_free PROC
;;;92     */
;;;93     static void menu_free(void)
000002  b510              PUSH     {r4,lr}
;;;94     {
;;;95     	_free(senior);
000004  485e              LDR      r0,|L1.384|
000006  6800              LDR      r0,[r0,#0]  ; senior
000008  f7fffffe          BL       _free
;;;96     }
00000c  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  creat_menu PROC
;;;102    */
;;;103    static void creat_menu(void)
00000e  b508              PUSH     {r3,lr}
;;;104    {
;;;105    	uint8_t err;
;;;106    	senior = _malloc(sizeof(MENU), &err);
000010  4669              MOV      r1,sp
000012  2040              MOVS     r0,#0x40
000014  f7fffffe          BL       _malloc
000018  4959              LDR      r1,|L1.384|
00001a  6008              STR      r0,[r1,#0]  ; senior
;;;107    	log_output(senior);
;;;108    	if(senior)
00001c  4608              MOV      r0,r1
00001e  6800              LDR      r0,[r0,#0]  ; senior
000020  2800              CMP      r0,#0
000022  d052              BEQ      |L1.202|
;;;109    	{
;;;110    		senior->manegertiem[0].item = &pt_word.menu[0]; 
000024  4857              LDR      r0,|L1.388|
000026  68c0              LDR      r0,[r0,#0xc]  ; pt_word
000028  6809              LDR      r1,[r1,#0]  ; senior
00002a  6008              STR      r0,[r1,#0]
;;;111    		senior->manegertiem[0].status_id = fsm_id_goodsSet; 
00002c  2010              MOVS     r0,#0x10
00002e  4954              LDR      r1,|L1.384|
000030  6809              LDR      r1,[r1,#0]  ; senior
000032  7108              STRB     r0,[r1,#4]
;;;112    		
;;;113    		senior->manegertiem[1].item = &pt_word.menu[1]; 
000034  4853              LDR      r0,|L1.388|
000036  68c0              LDR      r0,[r0,#0xc]  ; pt_word
000038  3014              ADDS     r0,r0,#0x14
00003a  4951              LDR      r1,|L1.384|
00003c  6809              LDR      r1,[r1,#0]  ; senior
00003e  6088              STR      r0,[r1,#8]
;;;114    		senior->manegertiem[1].status_id = fsm_id_channelTest; 
000040  210f              MOVS     r1,#0xf
000042  484f              LDR      r0,|L1.384|
000044  6800              LDR      r0,[r0,#0]  ; senior
000046  7301              STRB     r1,[r0,#0xc]
;;;115    		
;;;116    		senior->manegertiem[2].item = &pt_word.menu[2]; 
000048  484e              LDR      r0,|L1.388|
00004a  68c0              LDR      r0,[r0,#0xc]  ; pt_word
00004c  3028              ADDS     r0,r0,#0x28
00004e  494c              LDR      r1,|L1.384|
000050  6809              LDR      r1,[r1,#0]  ; senior
000052  6108              STR      r0,[r1,#0x10]
;;;117    		senior->manegertiem[2].status_id = fsm_id_channelSet; 
000054  210e              MOVS     r1,#0xe
000056  484a              LDR      r0,|L1.384|
000058  6800              LDR      r0,[r0,#0]  ; senior
00005a  7501              STRB     r1,[r0,#0x14]
;;;118    		
;;;119    		senior->manegertiem[3].item = &pt_word.menu[3]; 
00005c  4849              LDR      r0,|L1.388|
00005e  68c0              LDR      r0,[r0,#0xc]  ; pt_word
000060  303c              ADDS     r0,r0,#0x3c
000062  4947              LDR      r1,|L1.384|
000064  6809              LDR      r1,[r1,#0]  ; senior
000066  6188              STR      r0,[r1,#0x18]
;;;120    		senior->manegertiem[3].status_id = fsm_id_temperatureSet; 
000068  210c              MOVS     r1,#0xc
00006a  4845              LDR      r0,|L1.384|
00006c  6800              LDR      r0,[r0,#0]  ; senior
00006e  7701              STRB     r1,[r0,#0x1c]
;;;121    		
;;;122    		senior->manegertiem[4].item = &pt_word.menu[4]; 
000070  4844              LDR      r0,|L1.388|
000072  68c0              LDR      r0,[r0,#0xc]  ; pt_word
000074  3050              ADDS     r0,r0,#0x50
000076  4942              LDR      r1,|L1.384|
000078  6809              LDR      r1,[r1,#0]  ; senior
00007a  6208              STR      r0,[r1,#0x20]
;;;123    		senior->manegertiem[4].status_id = fsm_id_peripheralSet; 
00007c  210d              MOVS     r1,#0xd
00007e  4840              LDR      r0,|L1.384|
000080  6800              LDR      r0,[r0,#0]  ; senior
000082  f8801024          STRB     r1,[r0,#0x24]
;;;124    		
;;;125    		senior->manegertiem[5].item = &pt_word.menu[5]; 
000086  483f              LDR      r0,|L1.388|
000088  68c0              LDR      r0,[r0,#0xc]  ; pt_word
00008a  3064              ADDS     r0,r0,#0x64
00008c  493c              LDR      r1,|L1.384|
00008e  6809              LDR      r1,[r1,#0]  ; senior
000090  6288              STR      r0,[r1,#0x28]
;;;126    		senior->manegertiem[5].status_id = fsm_id_payment; 
000092  210b              MOVS     r1,#0xb
000094  483a              LDR      r0,|L1.384|
000096  6800              LDR      r0,[r0,#0]  ; senior
000098  f880102c          STRB     r1,[r0,#0x2c]
;;;127    		
;;;128    		senior->manegertiem[6].item = &pt_word.menu[25]; 
00009c  4839              LDR      r0,|L1.388|
00009e  68c0              LDR      r0,[r0,#0xc]  ; pt_word
0000a0  f50070fa          ADD      r0,r0,#0x1f4
0000a4  4936              LDR      r1,|L1.384|
0000a6  6809              LDR      r1,[r1,#0]  ; senior
0000a8  6308              STR      r0,[r1,#0x30]
;;;129    		senior->manegertiem[6].status_id = fsm_id_statistic; 
0000aa  2115              MOVS     r1,#0x15
0000ac  4834              LDR      r0,|L1.384|
0000ae  6800              LDR      r0,[r0,#0]  ; senior
0000b0  f8801034          STRB     r1,[r0,#0x34]
;;;130    		
;;;131    		senior->manegertiem[7].item = &pt_word.menu[7]; 
0000b4  4833              LDR      r0,|L1.388|
0000b6  68c0              LDR      r0,[r0,#0xc]  ; pt_word
0000b8  308c              ADDS     r0,r0,#0x8c
0000ba  4931              LDR      r1,|L1.384|
0000bc  6809              LDR      r1,[r1,#0]  ; senior
0000be  6388              STR      r0,[r1,#0x38]
;;;132    		senior->manegertiem[7].status_id = fsm_id_vmSet; 
0000c0  210a              MOVS     r1,#0xa
0000c2  482f              LDR      r0,|L1.384|
0000c4  6800              LDR      r0,[r0,#0]  ; senior
0000c6  f880103c          STRB     r1,[r0,#0x3c]
                  |L1.202|
;;;133    		
;;;134    	}
;;;135    }
0000ca  bd08              POP      {r3,pc}
;;;136    
                          ENDP

                  fsm_fun_seniorMenu PROC
;;;137    
;;;138    uint8_t fsm_fun_seniorMenu(FSMMSG* cmsg)
0000cc  b510              PUSH     {r4,lr}
;;;139    {
0000ce  4604              MOV      r4,r0
;;;140    	switch (cmsg->type)
0000d0  7820              LDRB     r0,[r4,#0]
0000d2  b110              CBZ      r0,|L1.218|
0000d4  2801              CMP      r0,#1
0000d6  d14e              BNE      |L1.374|
0000d8  e022              B        |L1.288|
                  |L1.218|
;;;141    	{
;;;142    		case MsgSYS:
;;;143    			if(cmsg->stype == FSM_STATUS_INIT)
0000da  7860              LDRB     r0,[r4,#1]
0000dc  b9d0              CBNZ     r0,|L1.276|
;;;144    			{
;;;145    				//画左边菜单栏
;;;146    				lcd_clear();//清屏
0000de  f7fffffe          BL       lcd_clear
;;;147    				
;;;148    				LCD_DRAW_FRAME; //画边框
;;;149    				content_creat();//显示侧边栏内容
0000e2  f7fffffe          BL       content_creat
;;;150    				creat_menu();
0000e6  f7fffffe          BL       creat_menu
;;;151    				
;;;152    				mymenu.background = RED;	//当前选项前景色
0000ea  f44f4078          MOV      r0,#0xf800
0000ee  4926              LDR      r1,|L1.392|
0000f0  8288              STRH     r0,[r1,#0x14]
;;;153    				mymenu.forceground = BLACK;	//当前选项背景色
0000f2  2000              MOVS     r0,#0
0000f4  8248              STRH     r0,[r1,#0x12]
;;;154    				mymenu.itemlist = senior->manegertiem;	//当前菜单首地址
0000f6  4822              LDR      r0,|L1.384|
0000f8  6800              LDR      r0,[r0,#0]  ; senior
0000fa  60c8              STR      r0,[r1,#0xc]  ; mymenu
;;;155    				mymenu.name = &pt_word.menu[9];//菜单名称
0000fc  4821              LDR      r0,|L1.388|
0000fe  68c0              LDR      r0,[r0,#0xc]  ; pt_word
000100  30b4              ADDS     r0,r0,#0xb4
000102  6088              STR      r0,[r1,#8]  ; mymenu
;;;156    				mymenu.height = MENU_SIZE;//菜单数量
000104  2008              MOVS     r0,#8
000106  70c8              STRB     r0,[r1,#3]
;;;157    				mymenu.sizePer = G_HOLDER_ITEM_SIZE; 
000108  2003              MOVS     r0,#3
00010a  7108              STRB     r0,[r1,#4]
;;;158    				LoadMenu(&mymenu);
00010c  4608              MOV      r0,r1
00010e  f7fffffe          BL       LoadMenu
000112  e004              B        |L1.286|
                  |L1.276|
;;;159    			}
;;;160    			else
;;;161    			if(cmsg->stype == FSM_STATUS_EXIT)
000114  7860              LDRB     r0,[r4,#1]
000116  2802              CMP      r0,#2
000118  d101              BNE      |L1.286|
;;;162    			{
;;;163    				menu_free();
00011a  f7fffffe          BL       menu_free
                  |L1.286|
;;;164    			}
;;;165    		break;
00011e  e02b              B        |L1.376|
                  |L1.288|
;;;166    		
;;;167    		case MsgKEY:
;;;168    			if(cmsg->value == DOOR_CLOSE_VAL)
000120  6860              LDR      r0,[r4,#4]
000122  286a              CMP      r0,#0x6a
000124  d103              BNE      |L1.302|
;;;169    			{
;;;170    				Load_status(fsm_id_init);
000126  2001              MOVS     r0,#1
000128  f7fffffe          BL       Load_status
00012c  e022              B        |L1.372|
                  |L1.302|
;;;171    			}
;;;172    			else
;;;173    		    if(cmsg->value =='*')
00012e  6860              LDR      r0,[r4,#4]
000130  282a              CMP      r0,#0x2a
000132  d103              BNE      |L1.316|
;;;174    			{
;;;175    		    	Load_status(fsm_id_init);
000134  2001              MOVS     r0,#1
000136  f7fffffe          BL       Load_status
00013a  e01b              B        |L1.372|
                  |L1.316|
;;;176    			}
;;;177    		    else
;;;178    		    if(cmsg->value=='#')
00013c  6860              LDR      r0,[r4,#4]
00013e  2823              CMP      r0,#0x23
000140  d104              BNE      |L1.332|
;;;179    			{
;;;180    		    	intermenuitem(mymenu.selectitem,&mymenu);
000142  4911              LDR      r1,|L1.392|
000144  7c08              LDRB     r0,[r1,#0x10]  ; mymenu
000146  f7fffffe          BL       intermenuitem
00014a  e013              B        |L1.372|
                  |L1.332|
;;;181    			}
;;;182    		    else
;;;183    		    if(cmsg->value==KEY_DOWN_VAL)//下翻
00014c  6860              LDR      r0,[r4,#4]
00014e  286d              CMP      r0,#0x6d
000150  d103              BNE      |L1.346|
;;;184    			{
;;;185    		    	MenuNAVDOWN(&mymenu);
000152  480d              LDR      r0,|L1.392|
000154  f7fffffe          BL       MenuNAVDOWN
000158  e00c              B        |L1.372|
                  |L1.346|
;;;186    			}
;;;187    			else
;;;188    		    if(cmsg->value==KEY_UP_VAL)//上翻
00015a  6860              LDR      r0,[r4,#4]
00015c  286c              CMP      r0,#0x6c
00015e  d103              BNE      |L1.360|
;;;189    			{
;;;190    		    	MenuNAVUP(&mymenu);
000160  4809              LDR      r0,|L1.392|
000162  f7fffffe          BL       MenuNAVUP
000166  e005              B        |L1.372|
                  |L1.360|
;;;191    			}
;;;192    			else
;;;193    			if(cmsg->value == '0')
000168  6860              LDR      r0,[r4,#4]
00016a  2830              CMP      r0,#0x30
00016c  d102              BNE      |L1.372|
;;;194    			{
;;;195    				Load_status(fsm_id_vmInfo);
00016e  2009              MOVS     r0,#9
000170  f7fffffe          BL       Load_status
                  |L1.372|
;;;196    			}
;;;197    //			else
;;;198    //			if(cmsg->value == '9')
;;;199    //			{
;;;200    //				Load_status(fsm_id_driverSet);
;;;201    //			}
;;;202    //		    else
;;;203    //			{
;;;204    //		    	if(cmsg->value>'0' && cmsg->value<='9')
;;;205    //		        	intermenuitem((cmsg->value-'0'),&mymenu);
;;;206    //		        else
;;;207    //		        if(cmsg->value>='A' && cmsg->value<='F')
;;;208    //					intermenuitem((cmsg->value-'A'+10),&mymenu);
;;;209    //			}
;;;210    		break;
000174  e000              B        |L1.376|
                  |L1.374|
;;;211    			
;;;212    		default:
;;;213    		break;
000176  bf00              NOP      
                  |L1.376|
000178  bf00              NOP                            ;165
;;;214    	}
;;;215    	return 0;
00017a  2000              MOVS     r0,#0
;;;216    }
00017c  bd10              POP      {r4,pc}
;;;217    
                          ENDP

00017e  0000              DCW      0x0000
                  |L1.384|
                          DCD      senior
                  |L1.388|
                          DCD      pt_word
                  |L1.392|
                          DCD      mymenu

                          AREA ||.data||, DATA, ALIGN=2

                  senior
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\USR\\FSM\\menu_2.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_menu_2_c_fc7f5ebc____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_menu_2_c_fc7f5ebc____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_menu_2_c_fc7f5ebc____REVSH|
#line 144
|__asm___8_menu_2_c_fc7f5ebc____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

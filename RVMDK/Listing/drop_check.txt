; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\drop_check.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\drop_check.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\drop_check.crf ..\USR\Drop\drop_check.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DropInit PROC
;;;12     
;;;13     void DropInit()
000000  4770              BX       lr
;;;14     {
;;;15     }
;;;16     
                          ENDP

                  setdropstate PROC
;;;17     void setdropstate(uint8_t con,uint8_t num,uint8_t type)
000002  e92d41f0          PUSH     {r4-r8,lr}
;;;18     {
000006  4606              MOV      r6,r0
000008  460c              MOV      r4,r1
00000a  4617              MOV      r7,r2
;;;19     	FSMMSG * dropmsg;
;;;20     		dropmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       apply_fsm_msg
000012  4605              MOV      r5,r0
;;;21     		assert_param(dropmsg);
;;;22     		dropmsg->type=MsgDROP;
000014  200b              MOVS     r0,#0xb
000016  7028              STRB     r0,[r5,#0]
;;;23     			dropmsg->stype=MSG_DS_INIT;
000018  2003              MOVS     r0,#3
00001a  7068              STRB     r0,[r5,#1]
;;;24     			dropmsg->stype=MSG_DS_STATUS;
00001c  2000              MOVS     r0,#0
00001e  7068              STRB     r0,[r5,#1]
;;;25     		    {
;;;26     				if(num==3)
000020  2c03              CMP      r4,#3
000022  d105              BNE      |L1.48|
;;;27     					status_equip_msg(1,0xFF,3);//有隔断
000024  2203              MOVS     r2,#3
000026  21ff              MOVS     r1,#0xff
000028  2001              MOVS     r0,#1
00002a  f7fffffe          BL       status_equip_msg
00002e  e016              B        |L1.94|
                  |L1.48|
;;;28     				else
;;;29     				if(num==1)
000030  2c01              CMP      r4,#1
000032  d105              BNE      |L1.64|
;;;30     					status_equip_msg(1,0xFF,2);//正常
000034  2202              MOVS     r2,#2
000036  21ff              MOVS     r1,#0xff
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       status_equip_msg
00003e  e00e              B        |L1.94|
                  |L1.64|
;;;31     				else
;;;32     				if(num==2)
000040  2c02              CMP      r4,#2
000042  d105              BNE      |L1.80|
;;;33     					status_equip_msg(1,0xFF,0xFF);//无连接
000044  22ff              MOVS     r2,#0xff
000046  4611              MOV      r1,r2
000048  2001              MOVS     r0,#1
00004a  f7fffffe          BL       status_equip_msg
00004e  e006              B        |L1.94|
                  |L1.80|
;;;34     				else
;;;35     				if(num==4)
000050  2c04              CMP      r4,#4
000052  d104              BNE      |L1.94|
;;;36     					status_equip_msg(1,0xFF,1);//故障
000054  2201              MOVS     r2,#1
000056  21ff              MOVS     r1,#0xff
000058  4610              MOV      r0,r2
00005a  f7fffffe          BL       status_equip_msg
                  |L1.94|
;;;37     		   	}
;;;38     		dropmsg->value=con;
00005e  606e              STR      r6,[r5,#4]
;;;39     		if(send_fsm_msg(dropmsg)!=TRUE)
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       send_fsm_msg
000066  2801              CMP      r0,#1
000068  d002              BEQ      |L1.112|
;;;40     			release_fsm_msg(dropmsg);
00006a  4628              MOV      r0,r5
00006c  f7fffffe          BL       release_fsm_msg
                  |L1.112|
;;;41     }
000070  e8bd81f0          POP      {r4-r8,pc}
;;;42     
                          ENDP

                  dropinductor_CHECK PROC
;;;43     void dropinductor_CHECK(uint8_t num)
000074  4770              BX       lr
;;;44     {
;;;45     	
;;;46     }
;;;47     
                          ENDP

                  dropinductor_work_start PROC
;;;48     void dropinductor_work_start(uint8_t num)
000076  4770              BX       lr
;;;49     {
;;;50     	
;;;51     
;;;52     }
;;;53     void dropinductor_work_requ(uint8_t num)
                          ENDP

                  dropinductor_work_requ PROC
000078  4770              BX       lr
;;;54     {
;;;55     	
;;;56     }
;;;57     
                          ENDP

                  dropinductor_work_end PROC
;;;58     void dropinductor_work_end(uint8_t num)
00007a  4770              BX       lr
;;;59     {
;;;60     	
;;;61     }
;;;62     
                          ENDP

                  TASK_DROP_RUN PROC
;;;63     void TASK_DROP_RUN(void)
00007c  4770              BX       lr
;;;64     {
;;;65     	
;;;66     }
;;;67     
                          ENDP

                  API_DROP_CHECK PROC
;;;68     void API_DROP_CHECK(uint8_t num)
00007e  b570              PUSH     {r4-r6,lr}
;;;69     {
000080  4605              MOV      r5,r0
;;;70     	FSMMSG* cmsg;
;;;71     	cmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
000082  2000              MOVS     r0,#0
000084  f7fffffe          BL       apply_fsm_msg
000088  4604              MOV      r4,r0
;;;72     	assert_param(cmsg);
;;;73     	cmsg->type=num;
00008a  7025              STRB     r5,[r4,#0]
;;;74     	cmsg->stype=DROP_STATE;
00008c  20f1              MOVS     r0,#0xf1
00008e  7060              STRB     r0,[r4,#1]
;;;75     	if(OSQPost(dropqueue,cmsg)!=OS_NO_ERR)
000090  4621              MOV      r1,r4
000092  4821              LDR      r0,|L1.280|
000094  6800              LDR      r0,[r0,#0]  ; dropqueue
000096  f7fffffe          BL       OSQPost
00009a  b110              CBZ      r0,|L1.162|
;;;76     		release_fsm_msg(cmsg);
00009c  4620              MOV      r0,r4
00009e  f7fffffe          BL       release_fsm_msg
                  |L1.162|
;;;77     }
0000a2  bd70              POP      {r4-r6,pc}
;;;78     
                          ENDP

                  API_DROP_WORKSTART PROC
;;;79     void API_DROP_WORKSTART(uint8_t num)
0000a4  b570              PUSH     {r4-r6,lr}
;;;80     {
0000a6  4605              MOV      r5,r0
;;;81     	FSMMSG* cmsg;
;;;82     	cmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
0000a8  2000              MOVS     r0,#0
0000aa  f7fffffe          BL       apply_fsm_msg
0000ae  4604              MOV      r4,r0
;;;83     	assert_param(cmsg);
;;;84     	cmsg->type=num;
0000b0  7025              STRB     r5,[r4,#0]
;;;85     	cmsg->stype=DROP_START;
0000b2  20f2              MOVS     r0,#0xf2
0000b4  7060              STRB     r0,[r4,#1]
;;;86     	if(OSQPost(dropqueue,cmsg)!=OS_NO_ERR)
0000b6  4621              MOV      r1,r4
0000b8  4817              LDR      r0,|L1.280|
0000ba  6800              LDR      r0,[r0,#0]  ; dropqueue
0000bc  f7fffffe          BL       OSQPost
0000c0  b110              CBZ      r0,|L1.200|
;;;87     		release_fsm_msg(cmsg);
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       release_fsm_msg
                  |L1.200|
;;;88     }
0000c8  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP

                  API_DROP_WORK_REQU PROC
;;;90     void API_DROP_WORK_REQU(uint8_t num)
0000ca  b570              PUSH     {r4-r6,lr}
;;;91     {
0000cc  4605              MOV      r5,r0
;;;92     	FSMMSG* cmsg;
;;;93     	cmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
0000ce  2000              MOVS     r0,#0
0000d0  f7fffffe          BL       apply_fsm_msg
0000d4  4604              MOV      r4,r0
;;;94     	assert_param(cmsg);
;;;95     	cmsg->type=num;
0000d6  7025              STRB     r5,[r4,#0]
;;;96     	cmsg->stype=DROP_REQU;
0000d8  20f4              MOVS     r0,#0xf4
0000da  7060              STRB     r0,[r4,#1]
;;;97     	if(OSQPost(dropqueue,cmsg)!=OS_NO_ERR)
0000dc  4621              MOV      r1,r4
0000de  480e              LDR      r0,|L1.280|
0000e0  6800              LDR      r0,[r0,#0]  ; dropqueue
0000e2  f7fffffe          BL       OSQPost
0000e6  b110              CBZ      r0,|L1.238|
;;;98     		release_fsm_msg(cmsg);
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       release_fsm_msg
                  |L1.238|
;;;99     }
0000ee  bd70              POP      {r4-r6,pc}
;;;100    
                          ENDP

                  API_DROP_WORK_END PROC
;;;101    void API_DROP_WORK_END(uint8_t num)
0000f0  b570              PUSH     {r4-r6,lr}
;;;102    {
0000f2  4605              MOV      r5,r0
;;;103    	FSMMSG* cmsg;
;;;104    	cmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
0000f4  2000              MOVS     r0,#0
0000f6  f7fffffe          BL       apply_fsm_msg
0000fa  4604              MOV      r4,r0
;;;105    	assert_param(cmsg);
;;;106    	cmsg->type=num;
0000fc  7025              STRB     r5,[r4,#0]
;;;107    	cmsg->stype=DROP_END;
0000fe  20f3              MOVS     r0,#0xf3
000100  7060              STRB     r0,[r4,#1]
;;;108    	if(OSQPost(dropqueue,cmsg)!=OS_NO_ERR)
000102  4621              MOV      r1,r4
000104  4804              LDR      r0,|L1.280|
000106  6800              LDR      r0,[r0,#0]  ; dropqueue
000108  f7fffffe          BL       OSQPost
00010c  b110              CBZ      r0,|L1.276|
;;;109    		release_fsm_msg(cmsg);
00010e  4620              MOV      r0,r4
000110  f7fffffe          BL       release_fsm_msg
                  |L1.276|
;;;110    }
000114  bd70              POP      {r4-r6,pc}
                          ENDP

000116  0000              DCW      0x0000
                  |L1.280|
                          DCD      dropqueue

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  fdropmsg
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  dropqueue
                          DCD      0x00000000
                  fdmsg
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\USR\\Drop\\drop_check.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_drop_check_c_DropInit____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_drop_check_c_DropInit____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_drop_check_c_DropInit____REVSH|
#line 144
|__asm___12_drop_check_c_DropInit____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\bill.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\bill.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\bill.crf ..\USR\Mdb\bill.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  readbillset PROC
;;;58     
;;;59     uint8_t readbillset(){//读禁使能状态位
000000  4770              BX       lr
;;;60     	uint8_t tmp;
;;;61     	//I2C_ReadNByte(CAT24WC256,TWO_BYTE_SUBA,BA10+BA11,&tmp,BA11_LENTH);
;;;62     	return tmp;
;;;63     }
;;;64     
                          ENDP

                  setbillCE PROC
;;;65     void setbillCE(uint8_t num){//写禁使能状态位
000002  4770              BX       lr
;;;66     	//I2C_WriteNByte(CAT24WC256,TWO_BYTE_SUBA,BA10+BA11,&num,BA11_LENTH);
;;;67     }
;;;68     
                          ENDP

                  set_bill_status PROC
;;;166    
;;;167    void set_bill_status(uint8_t num)//保存纸币器状态
000004  b570              PUSH     {r4-r6,lr}
;;;168    {
000006  4605              MOV      r5,r0
;;;169      if(num!=billequip.eqiu_status){//当前状态改变
000008  48fa              LDR      r0,|L1.1012|
00000a  7900              LDRB     r0,[r0,#4]  ; billequip
00000c  42a8              CMP      r0,r5
00000e  d023              BEQ      |L1.88|
;;;170       	FSMMSG * billmsg;
;;;171       	
;;;172    //   	if(day!=DOM){//如果日期发生变化
;;;173    //   	
;;;174    //	   	day=DOM;
;;;175    //	   	billchangenum=0;
;;;176    //   	}
;;;177    	if(billchangenum<50){//翻转计数限制
000010  48f9              LDR      r0,|L1.1016|
000012  7800              LDRB     r0,[r0,#0]  ; billchangenum
000014  2832              CMP      r0,#0x32
000016  da04              BGE      |L1.34|
;;;178    	    
;;;179    		billchangenum++;
000018  48f7              LDR      r0,|L1.1016|
00001a  7800              LDRB     r0,[r0,#0]  ; billchangenum
00001c  1c40              ADDS     r0,r0,#1
00001e  49f6              LDR      r1,|L1.1016|
000020  7008              STRB     r0,[r1,#0]
                  |L1.34|
;;;180    //		if(num>1)
;;;181    //			status_equip_msg(DATA_BA,0xFF,num);
;;;182    //		else
;;;183    //		if(num==1 && billequip.eqiu_status>1)
;;;184    //			status_equip_msg(DATA_BA,0xFF,2);
;;;185    //		else
;;;186    //		if(num==0 && billequip.eqiu_status>1)
;;;187    //			status_equip_msg(DATA_BA,0xFF,2);
;;;188    //		else
;;;189    //			billchangenum--;
;;;190    	}
;;;191    	billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       apply_fsm_msg
000028  4604              MOV      r4,r0
;;;192    	assert_param(billmsg);
;;;193    	billmsg->type=MsgBILL;
00002a  2003              MOVS     r0,#3
00002c  7020              STRB     r0,[r4,#0]
;;;194    	if(billequip.eqiu_status==0xFE)
00002e  48f1              LDR      r0,|L1.1012|
000030  7900              LDRB     r0,[r0,#4]  ; billequip
000032  28fe              CMP      r0,#0xfe
000034  d102              BNE      |L1.60|
;;;195    		billmsg->stype=M_BS_INIT;
000036  2007              MOVS     r0,#7
000038  7060              STRB     r0,[r4,#1]
00003a  e001              B        |L1.64|
                  |L1.60|
;;;196    	else
;;;197    		billmsg->stype=M_BS_STATUS;
00003c  2006              MOVS     r0,#6
00003e  7060              STRB     r0,[r4,#1]
                  |L1.64|
;;;198    	billmsg->value=num;
000040  6065              STR      r5,[r4,#4]
;;;199    	billequip.eqiu_status=num;
000042  48ec              LDR      r0,|L1.1012|
000044  7105              STRB     r5,[r0,#4]
;;;200    	if(send_fsm_msg(billmsg)!=TRUE)
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       send_fsm_msg
00004c  2801              CMP      r0,#1
00004e  d002              BEQ      |L1.86|
;;;201    		release_fsm_msg(billmsg);
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       release_fsm_msg
                  |L1.86|
;;;202       }
000056  bf00              NOP      
                  |L1.88|
;;;203    }
000058  bd70              POP      {r4-r6,pc}
;;;204    
                          ENDP

                  Bill_Payout_Status PROC
;;;773    }
;;;774    void Bill_Payout_Status(void){//查询找币结果
00005a  e92d43f0          PUSH     {r4-r9,lr}
00005e  b087              SUB      sp,sp,#0x1c
;;;775    	uint8_t err,i;
;;;776    	uint16_t payoutnum, type;
;;;777    	uint16_t *rx, rx_len;
;;;778    	
;;;779    	FSMMSG *billmsg;
;;;780    	bill_cmd[0]=BILL_EXP;
000060  2037              MOVS     r0,#0x37
000062  49e6              LDR      r1,|L1.1020|
000064  7008              STRB     r0,[r1,#0]
;;;781    	bill_cmd[1]=0x08;
000066  2008              MOVS     r0,#8
000068  7048              STRB     r0,[r1,#1]
;;;782    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE, &err, &rx_len); 
00006a  a805              ADD      r0,sp,#0x14
00006c  a906              ADD      r1,sp,#0x18
00006e  230a              MOVS     r3,#0xa
000070  2201              MOVS     r2,#1
000072  e9cd1000          STRD     r1,r0,[sp,#0]
000076  2102              MOVS     r1,#2
000078  48e0              LDR      r0,|L1.1020|
00007a  f7fffffe          BL       mdb_send_cmd
00007e  4680              MOV      r8,r0
;;;783    	if(err!=MDB_RECEIVE_DATA && err!=MDB_RECEIVE_ACK){
000080  f89d0018          LDRB     r0,[sp,#0x18]
000084  2879              CMP      r0,#0x79
000086  d015              BEQ      |L1.180|
000088  f89d0018          LDRB     r0,[sp,#0x18]
00008c  2878              CMP      r0,#0x78
00008e  d011              BEQ      |L1.180|
;;;784    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){//超时未有效回复
000090  f7fffffe          BL       OSTimeGet
000094  49da              LDR      r1,|L1.1024|
000096  6809              LDR      r1,[r1,#0]  ; bill_timeout
000098  1a40              SUBS     r0,r0,r1
00009a  f2417170          MOV      r1,#0x1770
00009e  4288              CMP      r0,r1
0000a0  d905              BLS      |L1.174|
;;;785    			set_bill_status(0xFF);
0000a2  20ff              MOVS     r0,#0xff
0000a4  f7fffffe          BL       set_bill_status
;;;786    			billequip.EQIU_FUNC=BillValtdator_Reset;
0000a8  48d6              LDR      r0,|L1.1028|
0000aa  49d2              LDR      r1,|L1.1012|
0000ac  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.174|
;;;787    		}
;;;788    		return;
;;;789    	}
;;;790    	else
;;;791    	if(err==MDB_RECEIVE_ACK){//纸币器忙(继续询问)
;;;792    		//DisplayLT("KKKKKKKKKK",6,0,0);
;;;793    	}
;;;794    	else{//查到找零结果
;;;795    		billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;796    		assert_param(billmsg);
;;;797    		billmsg->type=MsgBILL;
;;;798    		billmsg->stype=M_BS_PAYRESULT;
;;;799    		
;;;800    		if(rx_len==2)//只返回了0与校验
;;;801    			billmsg->value=0;
;;;802    		else{
;;;803    			for(i=0;i<32;i+=2){
;;;804    				type=(billvaltdator.recypath>>(i/2))&0x01;//找零种类
;;;805    				payoutnum=rx[i+1]|(rx[i]<<8);//找零数量
;;;806    				if(payoutnum!=0 && type!=0){
;;;807    					billmsg->value=(billvaltdator.par_value[i/2]*billfactor*payoutnum);
;;;808    					//可扩展终端存储纸币找零
;;;809    					break;			
;;;810    				}
;;;811    			}
;;;812    		}
;;;813    		if(send_fsm_msg(billmsg)!=TRUE)
;;;814    			release_fsm_msg(billmsg);
;;;815    		if(credit_get() >= billmsg->value)
;;;816    			credit_set(credit_get() - billmsg->value);
;;;817    		else
;;;818    		{
;;;819    			lcd_show_string("pppppp",6,0, RED, WHITE, font48);
;;;820    		}
;;;821    
;;;822    		billvaltdator.alldisvalue=0;//这里保证状态机查询可找时快与MDB总线速度
;;;823    		billequip.cmd_status=cmd_status_complete;
;;;824    		billequip.cmd_type=M_BS_POLL;
;;;825    		billequip.EQIU_FUNC=BILL_Dispen_Status;//查询找零箱金额
;;;826    	}
;;;827    	bill_timeout[0]=OSTimeGet();
;;;828    }
0000ae  b007              ADD      sp,sp,#0x1c
0000b0  e8bd83f0          POP      {r4-r9,pc}
                  |L1.180|
0000b4  f89d0018          LDRB     r0,[sp,#0x18]         ;791
0000b8  2878              CMP      r0,#0x78              ;791
0000ba  d064              BEQ      |L1.390|
0000bc  2000              MOVS     r0,#0                 ;795
0000be  f7fffffe          BL       apply_fsm_msg
0000c2  4605              MOV      r5,r0                 ;795
0000c4  2003              MOVS     r0,#3                 ;797
0000c6  7028              STRB     r0,[r5,#0]            ;797
0000c8  200d              MOVS     r0,#0xd               ;798
0000ca  7068              STRB     r0,[r5,#1]            ;798
0000cc  f8bd0014          LDRH     r0,[sp,#0x14]         ;800
0000d0  2802              CMP      r0,#2                 ;800
0000d2  d102              BNE      |L1.218|
0000d4  2000              MOVS     r0,#0                 ;801
0000d6  6068              STR      r0,[r5,#4]            ;801
0000d8  e027              B        |L1.298|
                  |L1.218|
0000da  2400              MOVS     r4,#0                 ;803
0000dc  e022              B        |L1.292|
                  |L1.222|
0000de  4620              MOV      r0,r4                 ;804
0000e0  eb0471d0          ADD      r1,r4,r0,LSR #31      ;804
0000e4  104a              ASRS     r2,r1,#1              ;804
0000e6  49c8              LDR      r1,|L1.1032|
0000e8  f8b11072          LDRH     r1,[r1,#0x72]         ;804  ; billvaltdator
0000ec  4111              ASRS     r1,r1,r2              ;804
0000ee  f0010701          AND      r7,r1,#1              ;804
0000f2  1c60              ADDS     r0,r4,#1              ;805
0000f4  f8380010          LDRH     r0,[r8,r0,LSL #1]     ;805
0000f8  f8181014          LDRB     r1,[r8,r4,LSL #1]     ;805
0000fc  ea402001          ORR      r0,r0,r1,LSL #8       ;805
000100  b286              UXTH     r6,r0                 ;805
000102  b16e              CBZ      r6,|L1.288|
000104  b167              CBZ      r7,|L1.288|
000106  4620              MOV      r0,r4                 ;807
000108  eb0471d0          ADD      r1,r4,r0,LSR #31      ;807
00010c  104a              ASRS     r2,r1,#1              ;807
00010e  49be              LDR      r1,|L1.1032|
000110  310d              ADDS     r1,r1,#0xd            ;807
000112  5c89              LDRB     r1,[r1,r2]            ;807
000114  4abd              LDR      r2,|L1.1036|
000116  6812              LDR      r2,[r2,#0]            ;807  ; billfactor
000118  4351              MULS     r1,r2,r1              ;807
00011a  4371              MULS     r1,r6,r1              ;807
00011c  6069              STR      r1,[r5,#4]            ;807
00011e  e003              B        |L1.296|
                  |L1.288|
000120  1ca0              ADDS     r0,r4,#2              ;803
000122  b2c4              UXTB     r4,r0                 ;803
                  |L1.292|
000124  2c20              CMP      r4,#0x20              ;803
000126  dbda              BLT      |L1.222|
                  |L1.296|
000128  bf00              NOP                            ;809
                  |L1.298|
00012a  4628              MOV      r0,r5                 ;813
00012c  f7fffffe          BL       send_fsm_msg
000130  2801              CMP      r0,#1                 ;813
000132  d002              BEQ      |L1.314|
000134  4628              MOV      r0,r5                 ;814
000136  f7fffffe          BL       release_fsm_msg
                  |L1.314|
00013a  f7fffffe          BL       credit_get
00013e  6869              LDR      r1,[r5,#4]            ;815
000140  4288              CMP      r0,r1                 ;815
000142  d308              BCC      |L1.342|
000144  f7fffffe          BL       credit_get
000148  6869              LDR      r1,[r5,#4]            ;816
00014a  eba00901          SUB      r9,r0,r1              ;816
00014e  4648              MOV      r0,r9                 ;816
000150  f7fffffe          BL       credit_set
000154  e00d              B        |L1.370|
                  |L1.342|
000156  4aae              LDR      r2,|L1.1040|
000158  ca07              LDM      r2,{r0-r2}            ;819
00015a  ab01              ADD      r3,sp,#4              ;819
00015c  c307              STM      r3!,{r0-r2}           ;819
00015e  f64f70ff          MOV      r0,#0xffff            ;819
000162  f44f4378          MOV      r3,#0xf800            ;819
000166  2200              MOVS     r2,#0                 ;819
000168  2106              MOVS     r1,#6                 ;819
00016a  9000              STR      r0,[sp,#0]            ;819
00016c  a0a9              ADR      r0,|L1.1044|
00016e  f7fffffe          BL       lcd_show_string
                  |L1.370|
000172  2000              MOVS     r0,#0                 ;822
000174  49a4              LDR      r1,|L1.1032|
000176  63c8              STR      r0,[r1,#0x3c]         ;822  ; billvaltdator
000178  2003              MOVS     r0,#3                 ;823
00017a  499e              LDR      r1,|L1.1012|
00017c  7148              STRB     r0,[r1,#5]            ;823
00017e  2004              MOVS     r0,#4                 ;824
000180  7188              STRB     r0,[r1,#6]            ;824
000182  48a6              LDR      r0,|L1.1052|
000184  6008              STR      r0,[r1,#0]            ;825  ; billequip
                  |L1.390|
000186  f7fffffe          BL       OSTimeGet
00018a  499d              LDR      r1,|L1.1024|
00018c  6008              STR      r0,[r1,#0]            ;827  ; bill_timeout
00018e  bf00              NOP      
000190  e78d              B        |L1.174|
;;;829    
                          ENDP

                  Payout_Value_Poll PROC
;;;748    }
;;;749    void Payout_Value_Poll(void){//查询找币过程结果
000192  b51f              PUSH     {r0-r4,lr}
;;;750    	uint8_t err;
;;;751    	uint16_t *rx, rx_len;
;;;752    	
;;;753    	bill_cmd[0]=BILL_EXP;
000194  2037              MOVS     r0,#0x37
000196  4999              LDR      r1,|L1.1020|
000198  7008              STRB     r0,[r1,#0]
;;;754    	bill_cmd[1]=0x09;
00019a  2009              MOVS     r0,#9
00019c  7048              STRB     r0,[r1,#1]
;;;755    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE, &err, &rx_len); 
00019e  a802              ADD      r0,sp,#8
0001a0  a903              ADD      r1,sp,#0xc
0001a2  230a              MOVS     r3,#0xa
0001a4  2201              MOVS     r2,#1
0001a6  e9cd1000          STRD     r1,r0,[sp,#0]
0001aa  2102              MOVS     r1,#2
0001ac  4893              LDR      r0,|L1.1020|
0001ae  f7fffffe          BL       mdb_send_cmd
0001b2  4604              MOV      r4,r0
;;;756    	if(err!=MDB_RECEIVE_DATA && err!=MDB_RECEIVE_ACK){
0001b4  f89d000c          LDRB     r0,[sp,#0xc]
0001b8  2879              CMP      r0,#0x79
0001ba  d013              BEQ      |L1.484|
0001bc  f89d000c          LDRB     r0,[sp,#0xc]
0001c0  2878              CMP      r0,#0x78
0001c2  d00f              BEQ      |L1.484|
;;;757    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){//超时未有效回复
0001c4  f7fffffe          BL       OSTimeGet
0001c8  498d              LDR      r1,|L1.1024|
0001ca  6809              LDR      r1,[r1,#0]  ; bill_timeout
0001cc  1a40              SUBS     r0,r0,r1
0001ce  f2417170          MOV      r1,#0x1770
0001d2  4288              CMP      r0,r1
0001d4  d905              BLS      |L1.482|
;;;758    			set_bill_status(0xFF);
0001d6  20ff              MOVS     r0,#0xff
0001d8  f7fffffe          BL       set_bill_status
;;;759    			billequip.EQIU_FUNC=BillValtdator_Reset;
0001dc  4889              LDR      r0,|L1.1028|
0001de  4985              LDR      r1,|L1.1012|
0001e0  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.482|
;;;760    		}
;;;761    		return;
;;;762    	}
;;;763    	else
;;;764    	if(err==MDB_RECEIVE_DATA){
;;;765    		if(rx[0]==0x00){//未找币(目前来看协议中返回只有0)
;;;766    			billequip.EQIU_FUNC=Bill_Poll_Recy;
;;;767    		}
;;;768    	}	
;;;769    	else{//找币成功(返回ack)
;;;770    		billequip.EQIU_FUNC=Bill_Payout_Status;
;;;771    	}
;;;772    	bill_timeout[0]=OSTimeGet();
;;;773    }
0001e2  bd1f              POP      {r0-r4,pc}
                  |L1.484|
0001e4  f89d000c          LDRB     r0,[sp,#0xc]          ;764
0001e8  2879              CMP      r0,#0x79              ;764
0001ea  d105              BNE      |L1.504|
0001ec  8820              LDRH     r0,[r4,#0]            ;765
0001ee  b938              CBNZ     r0,|L1.512|
0001f0  488b              LDR      r0,|L1.1056|
0001f2  4980              LDR      r1,|L1.1012|
0001f4  6008              STR      r0,[r1,#0]            ;766  ; billequip
0001f6  e003              B        |L1.512|
                  |L1.504|
0001f8  f2af10a1          ADR      r0,Bill_Payout_Status + 1
0001fc  497d              LDR      r1,|L1.1012|
0001fe  6008              STR      r0,[r1,#0]            ;770  ; billequip
                  |L1.512|
000200  f7fffffe          BL       OSTimeGet
000204  497e              LDR      r1,|L1.1024|
000206  6008              STR      r0,[r1,#0]            ;772  ; bill_timeout
000208  bf00              NOP      
00020a  e7ea              B        |L1.482|
;;;774    void Bill_Payout_Status(void){//查询找币结果
                          ENDP

                  Bill_Poll_Recy PROC
;;;832    */
;;;833    void Bill_Poll_Recy(void)
00020c  e92d41ff          PUSH     {r0-r8,lr}
;;;834    {
;;;835    	uint8_t err,i,rt;
;;;836    	uint16_t *rx, rx_len;
;;;837    	
;;;838    	FSMMSG *billmsg;
;;;839    	bill_cmd[0]=BILL_POLL;
000210  2033              MOVS     r0,#0x33
000212  497a              LDR      r1,|L1.1020|
000214  7008              STRB     r0,[r1,#0]
;;;840    	rx = mdb_send_cmd(bill_cmd,1,1,BILL_NO_RESPENSE, &err, &rx_len);
000216  a802              ADD      r0,sp,#8
000218  a903              ADD      r1,sp,#0xc
00021a  230a              MOVS     r3,#0xa
00021c  2201              MOVS     r2,#1
00021e  e9cd1000          STRD     r1,r0,[sp,#0]
000222  4611              MOV      r1,r2
000224  4875              LDR      r0,|L1.1020|
000226  f7fffffe          BL       mdb_send_cmd
00022a  4607              MOV      r7,r0
;;;841    	if(err!=MDB_RECEIVE_DATA && err!=MDB_RECEIVE_ACK){
00022c  f89d000c          LDRB     r0,[sp,#0xc]
000230  2879              CMP      r0,#0x79
000232  d014              BEQ      |L1.606|
000234  f89d000c          LDRB     r0,[sp,#0xc]
000238  2878              CMP      r0,#0x78
00023a  d010              BEQ      |L1.606|
;;;842    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){//超时未有效回复
00023c  f7fffffe          BL       OSTimeGet
000240  496f              LDR      r1,|L1.1024|
000242  6809              LDR      r1,[r1,#0]  ; bill_timeout
000244  1a40              SUBS     r0,r0,r1
000246  f2417170          MOV      r1,#0x1770
00024a  4288              CMP      r0,r1
00024c  d905              BLS      |L1.602|
;;;843    			set_bill_status(0xFF);
00024e  20ff              MOVS     r0,#0xff
000250  f7fffffe          BL       set_bill_status
;;;844    			billequip.EQIU_FUNC=BillValtdator_Reset;
000254  486b              LDR      r0,|L1.1028|
000256  4967              LDR      r1,|L1.1012|
000258  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.602|
;;;845    		}
;;;846    		return;
;;;847    	}
;;;848    	else
;;;849    	{
;;;850    		billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;851    		assert_param(billmsg);
;;;852    		billmsg->type=MsgBILL;
;;;853    		billmsg->stype=M_BS_RECYINFO;
;;;854    		billmsg->value=0;//初始化值
;;;855    		if(err==MDB_RECEIVE_ACK){//返回ack,说明无异常
;;;856    			billequip.EQIU_FUNC=Payout_Value_Poll;
;;;857    			billmsg->value=ACK;
;;;858    		}
;;;859    		else
;;;860    		if(err==MDB_RECEIVE_DATA){
;;;861    			for(i=0;i<rx_len;i++){
;;;862    				rt=rx[i]&0x80;
;;;863    				if(rt==0){//非收币信息
;;;864    					billmsg->value=rx[i];//收到了找零箱异常信息..............
;;;865    					switch(billmsg->value){
;;;866    						case 0x21://压钞请求
;;;867    							
;;;868    						break;
;;;869    						case 0x22://找零忙
;;;870    							
;;;871    						break;
;;;872    						case 0x23://找零器忙,无法回复详细信息
;;;873    							
;;;874    						break;
;;;875    						case 0x24://找零器某个传感器异常
;;;876    							
;;;877    						break;
;;;878    						case 0x25://暂留
;;;879    						break;
;;;880    						case 0x26://找零器电机故障
;;;881    							
;;;882    						break;
;;;883    						case 0x27://找零器卡币
;;;884    						
;;;885    						break;
;;;886    						case 0x28://ROM错误
;;;887    						
;;;888    						break;
;;;889    						case 0x29://找零禁止,可能因为损坏纸币或找零口有异物
;;;890    						
;;;891    						break;
;;;892    						case 0x2A://纸币在出口等待取走
;;;893    						
;;;894    						break;
;;;895    						case 0x2B://暂留
;;;896    						break;
;;;897    						case 0x2C://暂留
;;;898    						break;
;;;899    						case 0x2D://暂留
;;;900    						break;
;;;901    						case 0x2E://暂留
;;;902    						break;
;;;903    						case 0x2F://按下了什么补币键,需要重新查询找零箱
;;;904    							billequip.EQIU_FUNC=BILL_Dispen_Status;
;;;905    						break;
;;;906    						default:
;;;907    						break;
;;;908    					}
;;;909    					if(billmsg->value!=0x2F)
;;;910    						billequip.EQIU_FUNC=Payout_Value_Poll;
;;;911    				}
;;;912    			}
;;;913    		}
;;;914    	}
;;;915    	if(send_fsm_msg(billmsg)!=TRUE)
;;;916    		release_fsm_msg(billmsg);
;;;917    	bill_timeout[0]=OSTimeGet();
;;;918    }
00025a  e8bd81ff          POP      {r0-r8,pc}
                  |L1.606|
00025e  2000              MOVS     r0,#0                 ;850
000260  f7fffffe          BL       apply_fsm_msg
000264  4604              MOV      r4,r0                 ;850
000266  2003              MOVS     r0,#3                 ;852
000268  7020              STRB     r0,[r4,#0]            ;852
00026a  200f              MOVS     r0,#0xf               ;853
00026c  7060              STRB     r0,[r4,#1]            ;853
00026e  2000              MOVS     r0,#0                 ;854
000270  6060              STR      r0,[r4,#4]            ;854
000272  f89d000c          LDRB     r0,[sp,#0xc]          ;855
000276  2878              CMP      r0,#0x78              ;855
000278  d106              BNE      |L1.648|
00027a  f2af00e9          ADR      r0,Payout_Value_Poll + 1
00027e  495d              LDR      r1,|L1.1012|
000280  6008              STR      r0,[r1,#0]            ;856  ; billequip
000282  2000              MOVS     r0,#0                 ;857
000284  6060              STR      r0,[r4,#4]            ;857
000286  e03c              B        |L1.770|
                  |L1.648|
000288  f89d000c          LDRB     r0,[sp,#0xc]          ;860
00028c  2879              CMP      r0,#0x79              ;860
00028e  d138              BNE      |L1.770|
000290  2500              MOVS     r5,#0                 ;861
000292  e032              B        |L1.762|
                  |L1.660|
000294  f8170015          LDRB     r0,[r7,r5,LSL #1]     ;862
000298  f0000680          AND      r6,r0,#0x80           ;862
00029c  bb5e              CBNZ     r6,|L1.758|
00029e  f8370015          LDRH     r0,[r7,r5,LSL #1]     ;864
0002a2  6060              STR      r0,[r4,#4]            ;864
0002a4  6860              LDR      r0,[r4,#4]            ;865
0002a6  3821              SUBS     r0,r0,#0x21           ;865
0002a8  280f              CMP      r0,#0xf               ;865
0002aa  d21b              BCS      |L1.740|
0002ac  e8dff000          TBB      [pc,r0]               ;865
0002b0  08090a0b          DCB      0x08,0x09,0x0a,0x0b
0002b4  0c0d0e0f          DCB      0x0c,0x0d,0x0e,0x0f
0002b8  10111213          DCB      0x10,0x11,0x12,0x13
0002bc  14151600          DCB      0x14,0x15,0x16,0x00
0002c0  e011              B        |L1.742|
0002c2  e010              B        |L1.742|
0002c4  e00f              B        |L1.742|
0002c6  e00e              B        |L1.742|
0002c8  e00d              B        |L1.742|
0002ca  e00c              B        |L1.742|
0002cc  e00b              B        |L1.742|
0002ce  e00a              B        |L1.742|
0002d0  e009              B        |L1.742|
0002d2  e008              B        |L1.742|
0002d4  e007              B        |L1.742|
0002d6  e006              B        |L1.742|
0002d8  e005              B        |L1.742|
0002da  e004              B        |L1.742|
0002dc  484f              LDR      r0,|L1.1052|
0002de  4945              LDR      r1,|L1.1012|
0002e0  6008              STR      r0,[r1,#0]            ;904  ; billequip
0002e2  e000              B        |L1.742|
                  |L1.740|
0002e4  bf00              NOP                            ;907
                  |L1.742|
0002e6  bf00              NOP                            ;868
0002e8  6860              LDR      r0,[r4,#4]            ;909
0002ea  282f              CMP      r0,#0x2f              ;909
0002ec  d003              BEQ      |L1.758|
0002ee  f2af105d          ADR      r0,Payout_Value_Poll + 1
0002f2  4940              LDR      r1,|L1.1012|
0002f4  6008              STR      r0,[r1,#0]            ;910  ; billequip
                  |L1.758|
0002f6  1c68              ADDS     r0,r5,#1              ;861
0002f8  b2c5              UXTB     r5,r0                 ;861
                  |L1.762|
0002fa  f8bd0008          LDRH     r0,[sp,#8]            ;861
0002fe  4285              CMP      r5,r0                 ;861
000300  dbc8              BLT      |L1.660|
                  |L1.770|
000302  4620              MOV      r0,r4                 ;915
000304  f7fffffe          BL       send_fsm_msg
000308  2801              CMP      r0,#1                 ;915
00030a  d002              BEQ      |L1.786|
00030c  4620              MOV      r0,r4                 ;916
00030e  f7fffffe          BL       release_fsm_msg
                  |L1.786|
000312  f7fffffe          BL       OSTimeGet
000316  493a              LDR      r1,|L1.1024|
000318  6008              STR      r0,[r1,#0]            ;917  ; bill_timeout
00031a  bf00              NOP      
00031c  e79d              B        |L1.602|
;;;919    uint8_t Dispen_Bill(uint32_t money){//判断是否有零钱可找
                          ENDP

                  Dispense_Bill PROC
;;;729    }
;;;730    void Dispense_Bill(void){//找零
00031e  b51f              PUSH     {r0-r4,lr}
;;;731    	uint8_t err;
;;;732    	uint16_t *rx, rx_len;
;;;733    	rx = rx;//防止编译器报错
000320  bf00              NOP      
;;;734    	
;;;735    	rx = mdb_send_cmd(bill_cmd3,5,1,BILL_NO_RESPENSE, &err, &rx_len);
000322  a802              ADD      r0,sp,#8
000324  a903              ADD      r1,sp,#0xc
000326  230a              MOVS     r3,#0xa
000328  2201              MOVS     r2,#1
00032a  e9cd1000          STRD     r1,r0,[sp,#0]
00032e  2105              MOVS     r1,#5
000330  483c              LDR      r0,|L1.1060|
000332  f7fffffe          BL       mdb_send_cmd
000336  4604              MOV      r4,r0
;;;736    	if(err!=MDB_RECEIVE_ACK){
000338  f89d000c          LDRB     r0,[sp,#0xc]
00033c  2878              CMP      r0,#0x78
00033e  d00f              BEQ      |L1.864|
;;;737    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){//超时未有效回复
000340  f7fffffe          BL       OSTimeGet
000344  492e              LDR      r1,|L1.1024|
000346  6809              LDR      r1,[r1,#0]  ; bill_timeout
000348  1a40              SUBS     r0,r0,r1
00034a  f2417170          MOV      r1,#0x1770
00034e  4288              CMP      r0,r1
000350  d905              BLS      |L1.862|
;;;738    			set_bill_status(0xFF);
000352  20ff              MOVS     r0,#0xff
000354  f7fffffe          BL       set_bill_status
;;;739    			billequip.EQIU_FUNC=BillValtdator_Reset;
000358  482a              LDR      r0,|L1.1028|
00035a  4926              LDR      r1,|L1.1012|
00035c  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.862|
;;;740    		}
;;;741    		return;
;;;742    	}
;;;743    	else{
;;;744    		billequip.cmd_status=cmd_status_start;//标记为开始找零
;;;745    		billequip.EQIU_FUNC=Payout_Value_Poll;
;;;746    		bill_timeout[0]=OSTimeGet();
;;;747    	}
;;;748    }
00035e  bd1f              POP      {r0-r4,pc}
                  |L1.864|
000360  2001              MOVS     r0,#1                 ;744
000362  4924              LDR      r1,|L1.1012|
000364  7148              STRB     r0,[r1,#5]            ;744
000366  f2af10d5          ADR      r0,Payout_Value_Poll + 1
00036a  6008              STR      r0,[r1,#0]            ;745  ; billequip
00036c  f7fffffe          BL       OSTimeGet
000370  4923              LDR      r1,|L1.1024|
000372  6008              STR      r0,[r1,#0]            ;746  ; bill_timeout
000374  bf00              NOP      
000376  e7f2              B        |L1.862|
;;;749    void Payout_Value_Poll(void){//查询找币过程结果
                          ENDP

                  BILL_Dispen_Status PROC
;;;691    }
;;;692    void BILL_Dispen_Status(void){//找零箱查询
000378  e92d41ff          PUSH     {r0-r8,lr}
;;;693    	uint8_t err,i;
;;;694    	uint16_t *rx, rx_len;
;;;695    	
;;;696    	bill_cmd[0]=BILL_EXP;
00037c  2037              MOVS     r0,#0x37
00037e  491f              LDR      r1,|L1.1020|
000380  7008              STRB     r0,[r1,#0]
;;;697    	bill_cmd[1]=0x05;
000382  2005              MOVS     r0,#5
000384  7048              STRB     r0,[r1,#1]
;;;698    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE, &err, &rx_len); 
000386  a802              ADD      r0,sp,#8
000388  a903              ADD      r1,sp,#0xc
00038a  230a              MOVS     r3,#0xa
00038c  2201              MOVS     r2,#1
00038e  e9cd1000          STRD     r1,r0,[sp,#0]
000392  2102              MOVS     r1,#2
000394  4819              LDR      r0,|L1.1020|
000396  f7fffffe          BL       mdb_send_cmd
00039a  4605              MOV      r5,r0
;;;699    	if(err!=MDB_RECEIVE_DATA){
00039c  f89d000c          LDRB     r0,[sp,#0xc]
0003a0  2879              CMP      r0,#0x79
0003a2  d010              BEQ      |L1.966|
;;;700    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){
0003a4  f7fffffe          BL       OSTimeGet
0003a8  4915              LDR      r1,|L1.1024|
0003aa  6809              LDR      r1,[r1,#0]  ; bill_timeout
0003ac  1a40              SUBS     r0,r0,r1
0003ae  f2417170          MOV      r1,#0x1770
0003b2  4288              CMP      r0,r1
0003b4  d905              BLS      |L1.962|
;;;701    			set_bill_status(0xFF);
0003b6  20ff              MOVS     r0,#0xff
0003b8  f7fffffe          BL       set_bill_status
;;;702    			billequip.EQIU_FUNC=BillValtdator_Reset;
0003bc  4811              LDR      r0,|L1.1028|
0003be  490d              LDR      r1,|L1.1012|
0003c0  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.962|
;;;703    		}
;;;704    		return;
;;;705    	}
;;;706    	else{
;;;707    		uint16_t recyfull;
;;;708    		billvaltdator.alldisvalue=0;//清空找零箱数值
;;;709    		recyfull=rx[0]<<8|rx[1];
;;;710    		for(i=0;i<16;i++){
;;;711    			billvaltdator.disfull[i]=recyfull&0x01;//找零箱币种已满标志
;;;712    			recyfull>>=1;
;;;713    		}
;;;714    		i=0;
;;;715    		while(billvaltdator.par_value[i]!=0 && i<32){//找零箱可找零币种数量与总金额
;;;716    			billvaltdator.disParNum[i/2]=rx[i+2]<<8 | rx[i+3];
;;;717    			billvaltdator.alldisvalue+=billvaltdator.disParNum[i/2]*billvaltdator.par_value[i/2]*billfactor;
;;;718    			i+=2;
;;;719    		}
;;;720    		if(billequip.cmd_status==cmd_status_need)//准备开始找零
;;;721    			billequip.EQIU_FUNC=Dispense_Bill;
;;;722    		else
;;;723    		if(billequip.cmd_status==cmd_status_start)//退币时poll的时候收到了0x2F
;;;724    			billequip.EQIU_FUNC=Bill_Poll_Recy;
;;;725    		else
;;;726    			billequip.EQIU_FUNC=Bill_Stacker;//查完找零箱查钞箱
;;;727    		bill_timeout[0]=OSTimeGet();
;;;728    	}
;;;729    }
0003c2  e8bd81ff          POP      {r0-r8,pc}
                  |L1.966|
0003c6  2000              MOVS     r0,#0                 ;708
0003c8  490f              LDR      r1,|L1.1032|
0003ca  63c8              STR      r0,[r1,#0x3c]         ;708  ; billvaltdator
0003cc  8868              LDRH     r0,[r5,#2]            ;709
0003ce  7829              LDRB     r1,[r5,#0]            ;709
0003d0  ea402001          ORR      r0,r0,r1,LSL #8       ;709
0003d4  b286              UXTH     r6,r0                 ;709
0003d6  2400              MOVS     r4,#0                 ;710
0003d8  e007              B        |L1.1002|
                  |L1.986|
0003da  f0060101          AND      r1,r6,#1              ;711
0003de  480a              LDR      r0,|L1.1032|
0003e0  3050              ADDS     r0,r0,#0x50           ;711
0003e2  5501              STRB     r1,[r0,r4]            ;711
0003e4  1076              ASRS     r6,r6,#1              ;712
0003e6  1c60              ADDS     r0,r4,#1              ;710
0003e8  b2c4              UXTB     r4,r0                 ;710
                  |L1.1002|
0003ea  2c10              CMP      r4,#0x10              ;710
0003ec  dbf5              BLT      |L1.986|
0003ee  2400              MOVS     r4,#0                 ;714
0003f0  e042              B        |L1.1144|
0003f2  0000              DCW      0x0000
                  |L1.1012|
                          DCD      billequip
                  |L1.1016|
                          DCD      billchangenum
                  |L1.1020|
                          DCD      bill_cmd
                  |L1.1024|
                          DCD      bill_timeout
                  |L1.1028|
                          DCD      BillValtdator_Reset
                  |L1.1032|
                          DCD      billvaltdator
                  |L1.1036|
                          DCD      billfactor
                  |L1.1040|
                          DCD      font48
                  |L1.1044|
000414  70707070          DCB      "pppppp",0
000418  707000  
00041b  00                DCB      0
                  |L1.1052|
                          DCD      BILL_Dispen_Status
                  |L1.1056|
                          DCD      Bill_Poll_Recy
                  |L1.1060|
                          DCD      bill_cmd3
                  |L1.1064|
000428  1ce1              ADDS     r1,r4,#3              ;716
00042a  f8152011          LDRB     r2,[r5,r1,LSL #1]     ;716
00042e  1ca1              ADDS     r1,r4,#2              ;716
000430  f8151011          LDRB     r1,[r5,r1,LSL #1]     ;716
000434  ea422101          ORR      r1,r2,r1,LSL #8       ;716
000438  b2ca              UXTB     r2,r1                 ;716
00043a  4620              MOV      r0,r4                 ;716
00043c  eb0471d0          ADD      r1,r4,r0,LSR #31      ;716
000440  104b              ASRS     r3,r1,#1              ;716
000442  49f7              LDR      r1,|L1.2080|
000444  54ca              STRB     r2,[r1,r3]            ;716
000446  eb0472d0          ADD      r2,r4,r0,LSR #31      ;717
00044a  1053              ASRS     r3,r2,#1              ;717
00044c  460a              MOV      r2,r1                 ;717
00044e  5cd2              LDRB     r2,[r2,r3]            ;717
000450  4621              MOV      r1,r4                 ;717
000452  eb0473d1          ADD      r3,r4,r1,LSR #31      ;717
000456  105f              ASRS     r7,r3,#1              ;717
000458  4bf1              LDR      r3,|L1.2080|
00045a  3b53              SUBS     r3,r3,#0x53           ;717
00045c  5ddb              LDRB     r3,[r3,r7]            ;717
00045e  435a              MULS     r2,r3,r2              ;717
000460  4bef              LDR      r3,|L1.2080|
000462  3b60              SUBS     r3,r3,#0x60           ;717
000464  6bdb              LDR      r3,[r3,#0x3c]         ;717  ; billvaltdator
000466  4fef              LDR      r7,|L1.2084|
000468  683f              LDR      r7,[r7,#0]            ;717  ; billfactor
00046a  fb023207          MLA      r2,r2,r7,r3           ;717
00046e  4bec              LDR      r3,|L1.2080|
000470  3b60              SUBS     r3,r3,#0x60           ;717
000472  63da              STR      r2,[r3,#0x3c]         ;717  ; billvaltdator
000474  1ca0              ADDS     r0,r4,#2              ;718
000476  b2c4              UXTB     r4,r0                 ;718
                  |L1.1144|
000478  48e9              LDR      r0,|L1.2080|
00047a  3853              SUBS     r0,r0,#0x53           ;715
00047c  5d00              LDRB     r0,[r0,r4]            ;715
00047e  b108              CBZ      r0,|L1.1156|
000480  2c20              CMP      r4,#0x20              ;715
000482  dbd1              BLT      |L1.1064|
                  |L1.1156|
000484  48e8              LDR      r0,|L1.2088|
000486  7940              LDRB     r0,[r0,#5]            ;720  ; billequip
000488  b920              CBNZ     r0,|L1.1172|
00048a  f2af106d          ADR      r0,Dispense_Bill + 1
00048e  49e6              LDR      r1,|L1.2088|
000490  6008              STR      r0,[r1,#0]            ;721  ; billequip
000492  e00b              B        |L1.1196|
                  |L1.1172|
000494  48e4              LDR      r0,|L1.2088|
000496  7940              LDRB     r0,[r0,#5]            ;723  ; billequip
000498  2801              CMP      r0,#1                 ;723
00049a  d104              BNE      |L1.1190|
00049c  f2af2093          ADR      r0,Bill_Poll_Recy + 1
0004a0  49e1              LDR      r1,|L1.2088|
0004a2  6008              STR      r0,[r1,#0]            ;724  ; billequip
0004a4  e002              B        |L1.1196|
                  |L1.1190|
0004a6  48e1              LDR      r0,|L1.2092|
0004a8  49df              LDR      r1,|L1.2088|
0004aa  6008              STR      r0,[r1,#0]            ;726  ; billequip
                  |L1.1196|
0004ac  f7fffffe          BL       OSTimeGet
0004b0  49df              LDR      r1,|L1.2096|
0004b2  6008              STR      r0,[r1,#0]            ;727  ; bill_timeout
0004b4  bf00              NOP                            ;728
0004b6  bf00              NOP      
0004b8  e783              B        |L1.962|
;;;730    void Dispense_Bill(void){//找零
                          ENDP

                  Bill_Escrow_CMD PROC
;;;1363   
;;;1364   void Bill_Escrow_CMD(void){//压钞或退钞
0004ba  b51f              PUSH     {r0-r4,lr}
;;;1365   	uint8_t err;
;;;1366   	uint16_t *rx, rx_len;
;;;1367   	rx = rx;//防止编译器报错
0004bc  bf00              NOP      
;;;1368   	
;;;1369   	rx = mdb_send_cmd(bill_cmd2,2,1,BILL_NO_RESPENSE, &err, &rx_len);
0004be  a802              ADD      r0,sp,#8
0004c0  a903              ADD      r1,sp,#0xc
0004c2  230a              MOVS     r3,#0xa
0004c4  2201              MOVS     r2,#1
0004c6  e9cd1000          STRD     r1,r0,[sp,#0]
0004ca  2102              MOVS     r1,#2
0004cc  48d9              LDR      r0,|L1.2100|
0004ce  f7fffffe          BL       mdb_send_cmd
0004d2  4604              MOV      r4,r0
;;;1370   	
;;;1371   	if(err!=MDB_RECEIVE_ACK){
0004d4  f89d000c          LDRB     r0,[sp,#0xc]
0004d8  2878              CMP      r0,#0x78
0004da  d00f              BEQ      |L1.1276|
;;;1372   		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){//超时未有效回复
0004dc  f7fffffe          BL       OSTimeGet
0004e0  49d3              LDR      r1,|L1.2096|
0004e2  6809              LDR      r1,[r1,#0]  ; bill_timeout
0004e4  1a40              SUBS     r0,r0,r1
0004e6  f2417170          MOV      r1,#0x1770
0004ea  4288              CMP      r0,r1
0004ec  d905              BLS      |L1.1274|
;;;1373   			set_bill_status(0xFF);
0004ee  20ff              MOVS     r0,#0xff
0004f0  f7fffffe          BL       set_bill_status
;;;1374   			billequip.EQIU_FUNC=BillValtdator_Reset;
0004f4  48d0              LDR      r0,|L1.2104|
0004f6  49cc              LDR      r1,|L1.2088|
0004f8  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.1274|
;;;1375   		}
;;;1376   		return;
;;;1377   	}
;;;1378   	else{
;;;1379   		billequip.cmd_status=cmd_status_start;
;;;1380   		billequip.EQIU_FUNC=Bill_Poll_CMD;
;;;1381   		bill_timeout[0]=OSTimeGet();
;;;1382   		bill_timeout[1]=OSTimeGet();
;;;1383   	}
;;;1384   }
0004fa  bd1f              POP      {r0-r4,pc}
                  |L1.1276|
0004fc  2001              MOVS     r0,#1                 ;1379
0004fe  49ca              LDR      r1,|L1.2088|
000500  7148              STRB     r0,[r1,#5]            ;1379
000502  48ce              LDR      r0,|L1.2108|
000504  6008              STR      r0,[r1,#0]            ;1380  ; billequip
000506  f7fffffe          BL       OSTimeGet
00050a  49c9              LDR      r1,|L1.2096|
00050c  6008              STR      r0,[r1,#0]            ;1381  ; bill_timeout
00050e  f7fffffe          BL       OSTimeGet
000512  49c7              LDR      r1,|L1.2096|
000514  6048              STR      r0,[r1,#4]            ;1382  ; bill_timeout
000516  bf00              NOP      
000518  e7ef              B        |L1.1274|
;;;1385   
                          ENDP

                  Bill_Poll_CMD PROC
;;;1117   
;;;1118   void Bill_Poll_CMD(void)
00051a  e92d47ff          PUSH     {r0-r10,lr}
;;;1119   {
;;;1120   	uint8_t err,i,rt,path,type;
;;;1121   	uint16_t *rx, rx_len;
;;;1122   	
;;;1123   	FSMMSG * billmsg;
;;;1124   	
;;;1125   	if(billequip.cmd_status==cmd_status_need)
00051e  48c2              LDR      r0,|L1.2088|
000520  7940              LDRB     r0,[r0,#5]  ; billequip
000522  b9d0              CBNZ     r0,|L1.1370|
;;;1126   	{
;;;1127   		if(billequip.cmd_type==M_BS_ESCROW)//压钞指令
000524  48c0              LDR      r0,|L1.2088|
000526  7980              LDRB     r0,[r0,#6]  ; billequip
000528  2802              CMP      r0,#2
00052a  d109              BNE      |L1.1344|
;;;1128   		{
;;;1129   			billequip.EQIU_FUNC=Bill_Escrow_CMD;
00052c  f2af0075          ADR      r0,Bill_Escrow_CMD + 1
000530  49bd              LDR      r1,|L1.2088|
000532  6008              STR      r0,[r1,#0]  ; billequip
;;;1130   			bill_timeout[0]=OSTimeGet();
000534  f7fffffe          BL       OSTimeGet
000538  49bd              LDR      r1,|L1.2096|
00053a  6008              STR      r0,[r1,#0]  ; bill_timeout
                  |L1.1340|
;;;1131   			return;
;;;1132   		}
;;;1133   		else
;;;1134   		if(billequip.cmd_type==M_BS_PAYOUT){//找零指令
;;;1135   			billequip.EQIU_FUNC=BILL_Dispen_Status;//*这里必须先查询找零箱,否则会出现找零结果到状态机早与找完查询找零箱*
;;;1136   			//billequip.EQIU_FUNC=Dispense_Bill;
;;;1137   			bill_timeout[0]=OSTimeGet();
;;;1138   			return;
;;;1139   		}
;;;1140   	}
;;;1141   
;;;1142   	bill_cmd[0]=BILL_POLL;
;;;1143   	rx = mdb_send_cmd(bill_cmd,1,1,BILL_NO_RESPENSE, &err, &rx_len);
;;;1144   	if(err!=MDB_RECEIVE_ACK && err!=MDB_RECEIVE_DATA)
;;;1145   	{
;;;1146   		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
;;;1147   		{
;;;1148   			set_bill_status(0xFF);
;;;1149   			billequip.EQIU_FUNC=BillValtdator_Reset;
;;;1150   		}
;;;1151   		return;
;;;1152   	}
;;;1153   	else
;;;1154   	if(err==MDB_RECEIVE_ACK)
;;;1155   	{	
;;;1156   		/*if(billequip.cmd_status==cmd_status_need)//需要执行poll以外命令
;;;1157   		{
;;;1158   			if(billequip.cmd_type==M_BS_ESCROW)//压钞指令
;;;1159   			{
;;;1160   				billequip.EQIU_FUNC=Bill_Escrow_CMD;
;;;1161   				bill_timeout[0]=OSTimeGet();
;;;1162   			}
;;;1163   		}
;;;1164   		else*/
;;;1165   		{
;;;1166   			if(billvaltdator.recycler==1)
;;;1167   				billequip.EQIU_FUNC=BILL_Dispen_Status;
;;;1168   			else
;;;1169   				billequip.EQIU_FUNC=Bill_Stacker;
;;;1170   			bill_timeout[0]=OSTimeGet();
;;;1171   		}
;;;1172   	}
;;;1173   	else
;;;1174   	if(err==MDB_RECEIVE_DATA)
;;;1175   	{
;;;1176   		for(i=0;i<rx_len;i++)
;;;1177   		{
;;;1178   			rt=rx[i]&0x80;
;;;1179   			if(rt==0)//纸币器状态
;;;1180   			{
;;;1181   				/*************** 纸币器错误代码 ******************/
;;;1182   				//1:电机不在位;
;;;1183   				//2:传感器故障;
;;;1184   				//3:纸币器忙;
;;;1185   				//4:ROM错误
;;;1186   				//5:卡币;
;;;1187   				//6:复位;
;;;1188   				//7:纸币退出(暂存箱由未知原因退币);
;;;1189   				//8:钞箱不在位;
;;;1190   				//9:禁能;
;;;1191   				//10:escrow命令错误;
;;;1192   				//11:退币(无法识别);
;;;1193   				//12:貌似盗币
;;;1194   				//
;;;1195   				/**********************************************/
;;;1196   				if(rx[i]==0x01 \
;;;1197   				 ||rx[i]==0x02 \
;;;1198   				 ||rx[i]==0x04 \
;;;1199   				 ||rx[i]==0x05 \
;;;1200   				 ||rx[i]==0x08){//几种无法工作的情况
;;;1201   					set_bill_status(rx[i]+2);
;;;1202   				}
;;;1203   				else
;;;1204   				if(rx[i]==0x03){//忙
;;;1205   					//bill_timeout[0]=OSTimeGet();
;;;1206   				}
;;;1207   				else
;;;1208   				if(rx[i]==0x06){//复位
;;;1209   					//DisplayLT("PPPPPPPPPPPPPPP",0,0,0);
;;;1210   					if(resetflag==0){//
;;;1211   						billequip.eqiu_status=5;
;;;1212   						billequip.EQIU_FUNC=BillValtdator_Reset;
;;;1213   					}
;;;1214   					else
;;;1215   						resetflag=0;
;;;1216   				}
;;;1217   				else
;;;1218   				if(rx[i]==0x07 \
;;;1219   				|| rx[i]==0x0B){//纸币退出(发退钞命令不进入这里)
;;;1220   					billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;1221   					assert_param(billmsg);
;;;1222   					billmsg->type=MsgBILL;
;;;1223   					billmsg->stype=M_BS_OTHER;
;;;1224   					billmsg->value=rx[i];
;;;1225   					if(send_fsm_msg(billmsg)!=TRUE)
;;;1226   						release_fsm_msg(billmsg);
;;;1227   					if(rx[i]==0x0B){//不能识别的纸币
;;;1228   						status_equip_msg(1,0xFF,0x42);
;;;1229   					}
;;;1230   					else{
;;;1231   						status_equip_msg(1,0xFF,0x41);
;;;1232   					}
;;;1233   				}
;;;1234   				else
;;;1235   				if(rx[i]==0x09){//禁能
;;;1236   					//set_bill_status(0);
;;;1237   					billequip.EQIU_FUNC=Bill_Stacker;
;;;1238   					bill_timeout[0]=OSTimeGet();
;;;1239   				}
;;;1240   				else
;;;1241   				if(rx[i]==0x0A){//无法接受的压钞命令(可能暂存箱中无纸币)
;;;1242   					if(billequip.cmd_status==cmd_status_start){//如果有正在执行的命令
;;;1243   						billequip.cmd_type=M_BS_POLL;
;;;1244   						billequip.cmd_status=cmd_status_complete;
;;;1245   					}
;;;1246   				}
;;;1247   			}
;;;1248   			else//纸币接收情况
;;;1249   			{
;;;1250   				path=(rx[i]&0x70)>>4;
;;;1251   				type=rx[i]&0x0F;
;;;1252   				if(path<8)
;;;1253   				{
;;;1254   					billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;1255   					assert_param(billmsg);
;;;1256   					billmsg->type=MsgBILL;
;;;1257   					billmsg->value=billvaltdator.par_value[type]*billfactor;
;;;1258   					/*************** 对币值的强制判定 ***************/
;;;1259   					/*
;;;1260   					if(!(billmsg->value==100 
;;;1261   					   ||billmsg->value==500
;;;1262   					   ||billmsg->value==1000
;;;1263   					   ||billmsg->value==2000
;;;1264   					   ||billmsg->value==5000
;;;1265   					   ||billmsg->value==10000)
;;;1266   					   || (billvaltdator.par_value[type]+typevalue[type])!=0xFF)//增加对这个值得判断
;;;1267   
;;;1268   					{
;;;1269   						release_fsm_msg(billmsg);
;;;1270   						chkvalue[0]=path;
;;;1271   						chkvalue[1]=type;
;;;1272   						setupCount=0;
;;;1273   						billequip.EQIU_FUNC=Bill_Setup2;
;;;1274   						bill_timeout[0]=OSTimeGet();
;;;1275   						return;
;;;1276   					}*/
;;;1277   					/*********************************************/
;;;1278   					if(path==0){//钞箱
;;;1279   						if(billequip.cmd_status==cmd_status_start){//如果有命令正在执行
;;;1280   							billequip.cmd_status=cmd_status_complete;
;;;1281   							billequip.cmd_type=M_BS_POLL;
;;;1282   						}
;;;1283   						credit_set(credit_get() + billmsg->value);
;;;1284   						billmsg->stype=M_BS_ABOX;
;;;1285   						billvaltdator.escvalue=0;
;;;1286   					}
;;;1287   					else
;;;1288   					if(path==1){//暂存箱
;;;1289   						billmsg->stype=M_BS_AESC;
;;;1290   						billvaltdator.escvalue=billmsg->value;
;;;1291   					}
;;;1292   					else
;;;1293   					if(path==2){//纸币退出
;;;1294   						if(billequip.cmd_status==cmd_status_start){//有命令正在执行
;;;1295   							billequip.cmd_status=cmd_status_complete;
;;;1296   							billequip.cmd_type=M_BS_POLL;
;;;1297   						}
;;;1298   						billmsg->stype=M_BS_AOUT;
;;;1299   						billvaltdator.escvalue=0;
;;;1300   					}
;;;1301   					else
;;;1302   					if(path==3){//找零箱
;;;1303   						if(billequip.cmd_status==cmd_status_start)
;;;1304   						{
;;;1305   							billmsg->stype=M_BS_RECY;
;;;1306   							credit_set(credit_get() + billmsg->value);
;;;1307   							billvaltdator.escvalue=0;
;;;1308   							billequip.cmd_type=M_BS_POLL;
;;;1309   							billequip.cmd_status=cmd_status_complete;
;;;1310   						}
;;;1311   					}
;;;1312   					else
;;;1313   					if(path==4){//不允许接收的纸币类型(可能是禁能了)
;;;1314   						billmsg->stype=M_BS_DISTYPE;
;;;1315   						//billmsg->value=0x40;
;;;1316   						billvaltdator.escvalue=0;
;;;1317   						status_equip_msg(1,0xFF,0x40);
;;;1318   					}
;;;1319   					else
;;;1320   					if(path==5){//人工放入找零箱
;;;1321   					
;;;1322   					}
;;;1323   					else
;;;1324   					if(path==6){//人工找零
;;;1325   					
;;;1326   					}
;;;1327   					else
;;;1328   					if(path==7){//从找零箱到钞箱
;;;1329   						billmsg->stype=M_BS_ABOX;
;;;1330   					credit_set(credit_get() + billmsg->value);
;;;1331   						billvaltdator.escvalue=0;
;;;1332   					}	
;;;1333   					if(send_fsm_msg(billmsg)!=TRUE)
;;;1334   						release_fsm_msg(billmsg);
;;;1335   				}
;;;1336   				else
;;;1337   					billvaltdator.escvalue=0;
;;;1338   			}
;;;1339   		}
;;;1340   		bill_timeout[0]=OSTimeGet();
;;;1341   	}
;;;1342   	/*
;;;1343   	if(billequip.cmd_status==cmd_status_start)
;;;1344   	{
;;;1345   		if(OSTimeGet()-bill_timeout[1]>OS_TICKS_PER_SEC*30)//发送压钞或者退币命令超过30秒无协议规定的回复
;;;1346   		{
;;;1347   			//发送吞币???
;;;1348   			//send_moneydelete_msg(DATA_CC,0);
;;;1349   			billequip.cmd_type=M_BS_POLL;
;;;1350   			//DisplayLT("COIN DIS ERR 1",6,0,0);
;;;1351   		}
;;;1352   	}
;;;1353   	*/
;;;1354   }
00053c  e8bd87ff          POP      {r0-r10,pc}
                  |L1.1344|
000540  48b9              LDR      r0,|L1.2088|
000542  7980              LDRB     r0,[r0,#6]            ;1134  ; billequip
000544  280c              CMP      r0,#0xc               ;1134
000546  d108              BNE      |L1.1370|
000548  f2af10d3          ADR      r0,BILL_Dispen_Status + 1
00054c  49b6              LDR      r1,|L1.2088|
00054e  6008              STR      r0,[r1,#0]            ;1135  ; billequip
000550  f7fffffe          BL       OSTimeGet
000554  49b6              LDR      r1,|L1.2096|
000556  6008              STR      r0,[r1,#0]            ;1137  ; bill_timeout
000558  e7f0              B        |L1.1340|
                  |L1.1370|
00055a  2033              MOVS     r0,#0x33              ;1142
00055c  49b8              LDR      r1,|L1.2112|
00055e  7008              STRB     r0,[r1,#0]            ;1142
000560  a802              ADD      r0,sp,#8              ;1143
000562  a903              ADD      r1,sp,#0xc            ;1143
000564  230a              MOVS     r3,#0xa               ;1143
000566  2201              MOVS     r2,#1                 ;1143
000568  e9cd1000          STRD     r1,r0,[sp,#0]         ;1143
00056c  4611              MOV      r1,r2                 ;1143
00056e  48b4              LDR      r0,|L1.2112|
000570  f7fffffe          BL       mdb_send_cmd
000574  4605              MOV      r5,r0                 ;1143
000576  f89d000c          LDRB     r0,[sp,#0xc]          ;1144
00057a  2878              CMP      r0,#0x78              ;1144
00057c  d013              BEQ      |L1.1446|
00057e  f89d000c          LDRB     r0,[sp,#0xc]          ;1144
000582  2879              CMP      r0,#0x79              ;1144
000584  d00f              BEQ      |L1.1446|
000586  f7fffffe          BL       OSTimeGet
00058a  49a9              LDR      r1,|L1.2096|
00058c  6809              LDR      r1,[r1,#0]            ;1146  ; bill_timeout
00058e  1a40              SUBS     r0,r0,r1              ;1146
000590  f2417170          MOV      r1,#0x1770            ;1146
000594  4288              CMP      r0,r1                 ;1146
000596  d905              BLS      |L1.1444|
000598  20ff              MOVS     r0,#0xff              ;1148
00059a  f7fffffe          BL       set_bill_status
00059e  48a6              LDR      r0,|L1.2104|
0005a0  49a1              LDR      r1,|L1.2088|
0005a2  6008              STR      r0,[r1,#0]            ;1149  ; billequip
                  |L1.1444|
0005a4  e7ca              B        |L1.1340|
                  |L1.1446|
0005a6  f89d000c          LDRB     r0,[sp,#0xc]          ;1154
0005aa  2878              CMP      r0,#0x78              ;1154
0005ac  d112              BNE      |L1.1492|
0005ae  489c              LDR      r0,|L1.2080|
0005b0  3860              SUBS     r0,r0,#0x60           ;1166
0005b2  f8900038          LDRB     r0,[r0,#0x38]         ;1166  ; billvaltdator
0005b6  2801              CMP      r0,#1                 ;1166
0005b8  d104              BNE      |L1.1476|
0005ba  f2af2043          ADR      r0,BILL_Dispen_Status + 1
0005be  499a              LDR      r1,|L1.2088|
0005c0  6008              STR      r0,[r1,#0]            ;1167  ; billequip
0005c2  e002              B        |L1.1482|
                  |L1.1476|
0005c4  4899              LDR      r0,|L1.2092|
0005c6  4998              LDR      r1,|L1.2088|
0005c8  6008              STR      r0,[r1,#0]            ;1169  ; billequip
                  |L1.1482|
0005ca  f7fffffe          BL       OSTimeGet
0005ce  4998              LDR      r1,|L1.2096|
0005d0  6008              STR      r0,[r1,#0]            ;1170  ; bill_timeout
                  |L1.1490|
0005d2  e122              B        |L1.2074|
                  |L1.1492|
0005d4  f89d000c          LDRB     r0,[sp,#0xc]          ;1174
0005d8  2879              CMP      r0,#0x79              ;1174
0005da  d1fa              BNE      |L1.1490|
0005dc  2400              MOVS     r4,#0                 ;1176
0005de  e113              B        |L1.2056|
                  |L1.1504|
0005e0  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;1178
0005e4  f0000880          AND      r8,r0,#0x80           ;1178
0005e8  f1b80f00          CMP      r8,#0                 ;1179
0005ec  d174              BNE      |L1.1752|
0005ee  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1196
0005f2  2801              CMP      r0,#1                 ;1196
0005f4  d00f              BEQ      |L1.1558|
0005f6  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1197
0005fa  2802              CMP      r0,#2                 ;1197
0005fc  d00b              BEQ      |L1.1558|
0005fe  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1198
000602  2804              CMP      r0,#4                 ;1198
000604  d007              BEQ      |L1.1558|
000606  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1199
00060a  2805              CMP      r0,#5                 ;1199
00060c  d003              BEQ      |L1.1558|
00060e  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1200
000612  2808              CMP      r0,#8                 ;1200
000614  d106              BNE      |L1.1572|
                  |L1.1558|
000616  f8151014          LDRB     r1,[r5,r4,LSL #1]     ;1201
00061a  1c89              ADDS     r1,r1,#2              ;1201
00061c  b2c8              UXTB     r0,r1                 ;1201
00061e  f7fffffe          BL       set_bill_status
                  |L1.1570|
000622  e0ef              B        |L1.2052|
                  |L1.1572|
000624  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1204
000628  2803              CMP      r0,#3                 ;1204
00062a  d0fa              BEQ      |L1.1570|
00062c  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1208
000630  2806              CMP      r0,#6                 ;1208
000632  d10c              BNE      |L1.1614|
000634  4883              LDR      r0,|L1.2116|
000636  7800              LDRB     r0,[r0,#0]            ;1210  ; resetflag
000638  b928              CBNZ     r0,|L1.1606|
00063a  2005              MOVS     r0,#5                 ;1211
00063c  497a              LDR      r1,|L1.2088|
00063e  7108              STRB     r0,[r1,#4]            ;1211
000640  487d              LDR      r0,|L1.2104|
000642  6008              STR      r0,[r1,#0]            ;1212  ; billequip
000644  e0de              B        |L1.2052|
                  |L1.1606|
000646  2000              MOVS     r0,#0                 ;1215
000648  497e              LDR      r1,|L1.2116|
00064a  7008              STRB     r0,[r1,#0]            ;1215
00064c  e0da              B        |L1.2052|
                  |L1.1614|
00064e  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1218
000652  2807              CMP      r0,#7                 ;1218
000654  d003              BEQ      |L1.1630|
000656  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1219
00065a  280b              CMP      r0,#0xb               ;1219
00065c  d121              BNE      |L1.1698|
                  |L1.1630|
00065e  2000              MOVS     r0,#0                 ;1220
000660  f7fffffe          BL       apply_fsm_msg
000664  4606              MOV      r6,r0                 ;1220
000666  2003              MOVS     r0,#3                 ;1222
000668  7030              STRB     r0,[r6,#0]            ;1222
00066a  7070              STRB     r0,[r6,#1]            ;1223
00066c  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1224
000670  6070              STR      r0,[r6,#4]            ;1224
000672  4630              MOV      r0,r6                 ;1225
000674  f7fffffe          BL       send_fsm_msg
000678  2801              CMP      r0,#1                 ;1225
00067a  d002              BEQ      |L1.1666|
00067c  4630              MOV      r0,r6                 ;1226
00067e  f7fffffe          BL       release_fsm_msg
                  |L1.1666|
000682  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1227
000686  280b              CMP      r0,#0xb               ;1227
000688  d105              BNE      |L1.1686|
00068a  2242              MOVS     r2,#0x42              ;1228
00068c  21ff              MOVS     r1,#0xff              ;1228
00068e  2001              MOVS     r0,#1                 ;1228
000690  f7fffffe          BL       status_equip_msg
000694  e0b6              B        |L1.2052|
                  |L1.1686|
000696  2241              MOVS     r2,#0x41              ;1231
000698  21ff              MOVS     r1,#0xff              ;1231
00069a  2001              MOVS     r0,#1                 ;1231
00069c  f7fffffe          BL       status_equip_msg
0006a0  e0b0              B        |L1.2052|
                  |L1.1698|
0006a2  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1235
0006a6  2809              CMP      r0,#9                 ;1235
0006a8  d107              BNE      |L1.1722|
0006aa  4860              LDR      r0,|L1.2092|
0006ac  495e              LDR      r1,|L1.2088|
0006ae  6008              STR      r0,[r1,#0]            ;1237  ; billequip
0006b0  f7fffffe          BL       OSTimeGet
0006b4  495e              LDR      r1,|L1.2096|
0006b6  6008              STR      r0,[r1,#0]            ;1238  ; bill_timeout
0006b8  e0a4              B        |L1.2052|
                  |L1.1722|
0006ba  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;1241
0006be  280a              CMP      r0,#0xa               ;1241
0006c0  d1af              BNE      |L1.1570|
0006c2  4859              LDR      r0,|L1.2088|
0006c4  7940              LDRB     r0,[r0,#5]            ;1242  ; billequip
0006c6  2801              CMP      r0,#1                 ;1242
0006c8  d1ab              BNE      |L1.1570|
0006ca  2004              MOVS     r0,#4                 ;1243
0006cc  4956              LDR      r1,|L1.2088|
0006ce  7188              STRB     r0,[r1,#6]            ;1243
0006d0  2003              MOVS     r0,#3                 ;1244
0006d2  7148              STRB     r0,[r1,#5]            ;1244
0006d4  e096              B        |L1.2052|
0006d6  e7ff              B        |L1.1752|
                  |L1.1752|
0006d8  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;1250
0006dc  f3c01702          UBFX     r7,r0,#4,#3           ;1250
0006e0  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;1251
0006e4  f000090f          AND      r9,r0,#0xf            ;1251
0006e8  2f08              CMP      r7,#8                 ;1252
0006ea  da7d              BGE      |L1.2024|
0006ec  2000              MOVS     r0,#0                 ;1254
0006ee  f7fffffe          BL       apply_fsm_msg
0006f2  4606              MOV      r6,r0                 ;1254
0006f4  2003              MOVS     r0,#3                 ;1256
0006f6  7030              STRB     r0,[r6,#0]            ;1256
0006f8  4849              LDR      r0,|L1.2080|
0006fa  3853              SUBS     r0,r0,#0x53           ;1257
0006fc  f8100009          LDRB     r0,[r0,r9]            ;1257
000700  4948              LDR      r1,|L1.2084|
000702  6809              LDR      r1,[r1,#0]            ;1257  ; billfactor
000704  4348              MULS     r0,r1,r0              ;1257
000706  6070              STR      r0,[r6,#4]            ;1257
000708  b9b7              CBNZ     r7,|L1.1848|
00070a  4847              LDR      r0,|L1.2088|
00070c  7940              LDRB     r0,[r0,#5]            ;1279  ; billequip
00070e  2801              CMP      r0,#1                 ;1279
000710  d104              BNE      |L1.1820|
000712  2003              MOVS     r0,#3                 ;1280
000714  4944              LDR      r1,|L1.2088|
000716  7148              STRB     r0,[r1,#5]            ;1280
000718  2004              MOVS     r0,#4                 ;1281
00071a  7188              STRB     r0,[r1,#6]            ;1281
                  |L1.1820|
00071c  f7fffffe          BL       credit_get
000720  6871              LDR      r1,[r6,#4]            ;1283
000722  eb000a01          ADD      r10,r0,r1             ;1283
000726  4650              MOV      r0,r10                ;1283
000728  f7fffffe          BL       credit_set
00072c  2000              MOVS     r0,#0                 ;1284
00072e  7070              STRB     r0,[r6,#1]            ;1284
000730  493b              LDR      r1,|L1.2080|
000732  3960              SUBS     r1,r1,#0x60           ;1285
000734  8408              STRH     r0,[r1,#0x20]         ;1285
000736  e056              B        |L1.2022|
                  |L1.1848|
000738  2f01              CMP      r7,#1                 ;1288
00073a  d106              BNE      |L1.1866|
00073c  2001              MOVS     r0,#1                 ;1289
00073e  7070              STRB     r0,[r6,#1]            ;1289
000740  88b0              LDRH     r0,[r6,#4]            ;1290
000742  4937              LDR      r1,|L1.2080|
000744  3960              SUBS     r1,r1,#0x60           ;1290
000746  8408              STRH     r0,[r1,#0x20]         ;1290
000748  e04d              B        |L1.2022|
                  |L1.1866|
00074a  2f02              CMP      r7,#2                 ;1293
00074c  d10f              BNE      |L1.1902|
00074e  4836              LDR      r0,|L1.2088|
000750  7940              LDRB     r0,[r0,#5]            ;1294  ; billequip
000752  2801              CMP      r0,#1                 ;1294
000754  d104              BNE      |L1.1888|
000756  2003              MOVS     r0,#3                 ;1295
000758  4933              LDR      r1,|L1.2088|
00075a  7148              STRB     r0,[r1,#5]            ;1295
00075c  2004              MOVS     r0,#4                 ;1296
00075e  7188              STRB     r0,[r1,#6]            ;1296
                  |L1.1888|
000760  2008              MOVS     r0,#8                 ;1298
000762  7070              STRB     r0,[r6,#1]            ;1298
000764  2000              MOVS     r0,#0                 ;1299
000766  492e              LDR      r1,|L1.2080|
000768  3960              SUBS     r1,r1,#0x60           ;1299
00076a  8408              STRH     r0,[r1,#0x20]         ;1299
00076c  e03b              B        |L1.2022|
                  |L1.1902|
00076e  2f03              CMP      r7,#3                 ;1302
000770  d117              BNE      |L1.1954|
000772  482d              LDR      r0,|L1.2088|
000774  7940              LDRB     r0,[r0,#5]            ;1303  ; billequip
000776  2801              CMP      r0,#1                 ;1303
000778  d135              BNE      |L1.2022|
00077a  2009              MOVS     r0,#9                 ;1305
00077c  7070              STRB     r0,[r6,#1]            ;1305
00077e  f7fffffe          BL       credit_get
000782  6871              LDR      r1,[r6,#4]            ;1306
000784  eb000a01          ADD      r10,r0,r1             ;1306
000788  4650              MOV      r0,r10                ;1306
00078a  f7fffffe          BL       credit_set
00078e  2000              MOVS     r0,#0                 ;1307
000790  4923              LDR      r1,|L1.2080|
000792  3960              SUBS     r1,r1,#0x60           ;1307
000794  8408              STRH     r0,[r1,#0x20]         ;1307
000796  2004              MOVS     r0,#4                 ;1308
000798  4923              LDR      r1,|L1.2088|
00079a  7188              STRB     r0,[r1,#6]            ;1308
00079c  2003              MOVS     r0,#3                 ;1309
00079e  7148              STRB     r0,[r1,#5]            ;1309
0007a0  e021              B        |L1.2022|
                  |L1.1954|
0007a2  2f04              CMP      r7,#4                 ;1313
0007a4  d10b              BNE      |L1.1982|
0007a6  200a              MOVS     r0,#0xa               ;1314
0007a8  7070              STRB     r0,[r6,#1]            ;1314
0007aa  2000              MOVS     r0,#0                 ;1316
0007ac  491c              LDR      r1,|L1.2080|
0007ae  3960              SUBS     r1,r1,#0x60           ;1316
0007b0  8408              STRH     r0,[r1,#0x20]         ;1316
0007b2  2240              MOVS     r2,#0x40              ;1317
0007b4  21ff              MOVS     r1,#0xff              ;1317
0007b6  2001              MOVS     r0,#1                 ;1317
0007b8  f7fffffe          BL       status_equip_msg
0007bc  e013              B        |L1.2022|
                  |L1.1982|
0007be  2f05              CMP      r7,#5                 ;1320
0007c0  d011              BEQ      |L1.2022|
0007c2  2f06              CMP      r7,#6                 ;1324
0007c4  d00f              BEQ      |L1.2022|
0007c6  2f07              CMP      r7,#7                 ;1328
0007c8  d10d              BNE      |L1.2022|
0007ca  2000              MOVS     r0,#0                 ;1329
0007cc  7070              STRB     r0,[r6,#1]            ;1329
0007ce  f7fffffe          BL       credit_get
0007d2  6871              LDR      r1,[r6,#4]            ;1330
0007d4  eb000a01          ADD      r10,r0,r1             ;1330
0007d8  4650              MOV      r0,r10                ;1330
0007da  f7fffffe          BL       credit_set
0007de  2000              MOVS     r0,#0                 ;1331
0007e0  490f              LDR      r1,|L1.2080|
0007e2  3960              SUBS     r1,r1,#0x60           ;1331
0007e4  8408              STRH     r0,[r1,#0x20]         ;1331
                  |L1.2022|
0007e6  e000              B        |L1.2026|
                  |L1.2024|
0007e8  e008              B        |L1.2044|
                  |L1.2026|
0007ea  4630              MOV      r0,r6                 ;1333
0007ec  f7fffffe          BL       send_fsm_msg
0007f0  2801              CMP      r0,#1                 ;1333
0007f2  d007              BEQ      |L1.2052|
0007f4  4630              MOV      r0,r6                 ;1334
0007f6  f7fffffe          BL       release_fsm_msg
0007fa  e003              B        |L1.2052|
                  |L1.2044|
0007fc  2000              MOVS     r0,#0                 ;1337
0007fe  4908              LDR      r1,|L1.2080|
000800  3960              SUBS     r1,r1,#0x60           ;1337
000802  8408              STRH     r0,[r1,#0x20]         ;1337
                  |L1.2052|
000804  1c60              ADDS     r0,r4,#1              ;1176
000806  b2c4              UXTB     r4,r0                 ;1176
                  |L1.2056|
000808  f8bd0008          LDRH     r0,[sp,#8]            ;1176
00080c  4284              CMP      r4,r0                 ;1176
00080e  f6ffaee7          BLT      |L1.1504|
000812  f7fffffe          BL       OSTimeGet
000816  4906              LDR      r1,|L1.2096|
000818  6008              STR      r0,[r1,#0]            ;1340  ; bill_timeout
                  |L1.2074|
00081a  bf00              NOP      
00081c  e68e              B        |L1.1340|
00081e  0000              DCW      0x0000
                  |L1.2080|
                          DCD      billvaltdator+0x60
                  |L1.2084|
                          DCD      billfactor
                  |L1.2088|
                          DCD      billequip
                  |L1.2092|
                          DCD      Bill_Stacker
                  |L1.2096|
                          DCD      bill_timeout
                  |L1.2100|
                          DCD      bill_cmd2
                  |L1.2104|
                          DCD      BillValtdator_Reset
                  |L1.2108|
                          DCD      Bill_Poll_CMD
                  |L1.2112|
                          DCD      bill_cmd
                  |L1.2116|
                          DCD      resetflag
                          ENDP

                  Bill_TYPE PROC
;;;1056   
;;;1057   void Bill_TYPE(void)
000848  b51f              PUSH     {r0-r4,lr}
;;;1058   {
;;;1059   	uint8_t err;	
;;;1060   	uint16_t *rx, rx_len;
;;;1061   	rx = rx;//防止编译器报错
00084a  bf00              NOP      
;;;1062   	
;;;1063   	bill_cmd[0]=BILL_TYPE;
00084c  2034              MOVS     r0,#0x34
00084e  49f8              LDR      r1,|L1.3120|
000850  7008              STRB     r0,[r1,#0]
;;;1064   	if(billset==1)
000852  48f8              LDR      r0,|L1.3124|
000854  7800              LDRB     r0,[r0,#0]  ; billset
000856  2801              CMP      r0,#1
000858  d103              BNE      |L1.2146|
;;;1065   	{
;;;1066   		//使能接收纸币种类
;;;1067   		bill_cmd[1]=0xFF;
00085a  20ff              MOVS     r0,#0xff
00085c  7048              STRB     r0,[r1,#1]
;;;1068   		bill_cmd[2]=0xFF;
00085e  7088              STRB     r0,[r1,#2]
000860  e003              B        |L1.2154|
                  |L1.2146|
;;;1069   //		bill_cmd[1]=billvaltdator.par_enable>>8;
;;;1070   //		bill_cmd[2]=billvaltdator.par_enable;
;;;1071   	}
;;;1072   	else
;;;1073   	{
;;;1074   		bill_cmd[1]=0x00;
000862  2000              MOVS     r0,#0
000864  49f2              LDR      r1,|L1.3120|
000866  7048              STRB     r0,[r1,#1]
;;;1075   		bill_cmd[2]=0x00;
000868  7088              STRB     r0,[r1,#2]
                  |L1.2154|
;;;1076   	}
;;;1077   	if(billvaltdator.escrow==0xFF)
00086a  48f3              LDR      r0,|L1.3128|
00086c  7b00              LDRB     r0,[r0,#0xc]  ; billvaltdator
00086e  28ff              CMP      r0,#0xff
000870  d103              BNE      |L1.2170|
;;;1078   	{
;;;1079   		//使能暂存纸币种类
;;;1080   		bill_cmd[3]=0xFF;
000872  49ef              LDR      r1,|L1.3120|
000874  70c8              STRB     r0,[r1,#3]
;;;1081   		bill_cmd[4]=0xFF;
000876  7108              STRB     r0,[r1,#4]
000878  e003              B        |L1.2178|
                  |L1.2170|
;;;1082   //		bill_cmd[3]=billvaltdator.par_enable>>8;
;;;1083   //		bill_cmd[4]=billvaltdator.par_enable;
;;;1084   	}
;;;1085   	else
;;;1086   	{
;;;1087   		bill_cmd[3]=0x00;
00087a  2000              MOVS     r0,#0
00087c  49ec              LDR      r1,|L1.3120|
00087e  70c8              STRB     r0,[r1,#3]
;;;1088   		bill_cmd[4]=0x00;
000880  7108              STRB     r0,[r1,#4]
                  |L1.2178|
;;;1089   	}
;;;1090   	rx = mdb_send_cmd(bill_cmd,5,1,BILL_NO_RESPENSE, &err, &rx_len);
000882  a802              ADD      r0,sp,#8
000884  a903              ADD      r1,sp,#0xc
000886  230a              MOVS     r3,#0xa
000888  2201              MOVS     r2,#1
00088a  e9cd1000          STRD     r1,r0,[sp,#0]
00088e  2105              MOVS     r1,#5
000890  48e7              LDR      r0,|L1.3120|
000892  f7fffffe          BL       mdb_send_cmd
000896  4604              MOV      r4,r0
;;;1091   	if(err!=MDB_RECEIVE_ACK)
000898  f89d000c          LDRB     r0,[sp,#0xc]
00089c  2878              CMP      r0,#0x78
00089e  d00f              BEQ      |L1.2240|
;;;1092   	{
;;;1093   		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
0008a0  f7fffffe          BL       OSTimeGet
0008a4  49e5              LDR      r1,|L1.3132|
0008a6  6809              LDR      r1,[r1,#0]  ; bill_timeout
0008a8  1a40              SUBS     r0,r0,r1
0008aa  f2417170          MOV      r1,#0x1770
0008ae  4288              CMP      r0,r1
0008b0  d905              BLS      |L1.2238|
;;;1094   		{
;;;1095   			set_bill_status(0xFF);
0008b2  20ff              MOVS     r0,#0xff
0008b4  f7fffffe          BL       set_bill_status
;;;1096   			billequip.EQIU_FUNC=BillValtdator_Reset;
0008b8  48e1              LDR      r0,|L1.3136|
0008ba  49e2              LDR      r1,|L1.3140|
0008bc  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2238|
;;;1097   		}
;;;1098   		return;
;;;1099   	}
;;;1100   	if(billset==1)
;;;1101   		set_bill_status(1);
;;;1102   	else
;;;1103   	if(billset==0)
;;;1104   		set_bill_status(0);
;;;1105   	else
;;;1106   		set_bill_status(billset);
;;;1107   	if(OSTimeGet()-bill_timeout[1]>OS_TICKS_PER_SEC*5)
;;;1108   	{
;;;1109   		bill_timeout[1]=OSTimeGet();
;;;1110   		//billequip.EQIU_FUNC=Bill_Setup;
;;;1111   		billequip.EQIU_FUNC=Bill_Security;
;;;1112   	}
;;;1113   	else
;;;1114   		billequip.EQIU_FUNC=Bill_Poll_CMD;
;;;1115   	bill_timeout[0]=OSTimeGet();
;;;1116   }
0008be  bd1f              POP      {r0-r4,pc}
                  |L1.2240|
0008c0  48dc              LDR      r0,|L1.3124|
0008c2  7800              LDRB     r0,[r0,#0]            ;1100  ; billset
0008c4  2801              CMP      r0,#1                 ;1100
0008c6  d102              BNE      |L1.2254|
0008c8  f7fffffe          BL       set_bill_status
0008cc  e00a              B        |L1.2276|
                  |L1.2254|
0008ce  48d9              LDR      r0,|L1.3124|
0008d0  7800              LDRB     r0,[r0,#0]            ;1103  ; billset
0008d2  b918              CBNZ     r0,|L1.2268|
0008d4  2000              MOVS     r0,#0                 ;1104
0008d6  f7fffffe          BL       set_bill_status
0008da  e003              B        |L1.2276|
                  |L1.2268|
0008dc  48d5              LDR      r0,|L1.3124|
0008de  7800              LDRB     r0,[r0,#0]            ;1106  ; billset
0008e0  f7fffffe          BL       set_bill_status
                  |L1.2276|
0008e4  f7fffffe          BL       OSTimeGet
0008e8  49d4              LDR      r1,|L1.3132|
0008ea  6849              LDR      r1,[r1,#4]            ;1107  ; bill_timeout
0008ec  1a40              SUBS     r0,r0,r1              ;1107
0008ee  f2413188          MOV      r1,#0x1388            ;1107
0008f2  4288              CMP      r0,r1                 ;1107
0008f4  d907              BLS      |L1.2310|
0008f6  f7fffffe          BL       OSTimeGet
0008fa  49d0              LDR      r1,|L1.3132|
0008fc  6048              STR      r0,[r1,#4]            ;1109  ; bill_timeout
0008fe  48d2              LDR      r0,|L1.3144|
000900  49d0              LDR      r1,|L1.3140|
000902  6008              STR      r0,[r1,#0]            ;1111  ; billequip
000904  e003              B        |L1.2318|
                  |L1.2310|
000906  f2af30ed          ADR      r0,Bill_Poll_CMD + 1
00090a  49ce              LDR      r1,|L1.3140|
00090c  6008              STR      r0,[r1,#0]            ;1114  ; billequip
                  |L1.2318|
00090e  f7fffffe          BL       OSTimeGet
000912  49ca              LDR      r1,|L1.3132|
000914  6008              STR      r0,[r1,#0]            ;1115  ; bill_timeout
000916  bf00              NOP      
000918  e7d1              B        |L1.2238|
;;;1117   
                          ENDP

                  Bill_Stacker PROC
;;;1032   
;;;1033   void Bill_Stacker(void)
00091a  b51f              PUSH     {r0-r4,lr}
;;;1034   {
;;;1035   	uint8_t err;
;;;1036   	uint16_t *rx, rx_len;
;;;1037   	
;;;1038   	bill_cmd[0]=BILL_STACKER;
00091c  2036              MOVS     r0,#0x36
00091e  49c4              LDR      r1,|L1.3120|
000920  7008              STRB     r0,[r1,#0]
;;;1039   	rx = mdb_send_cmd(bill_cmd,1,1,BILL_NO_RESPENSE*2, &err, &rx_len);
000922  a802              ADD      r0,sp,#8
000924  a903              ADD      r1,sp,#0xc
000926  2314              MOVS     r3,#0x14
000928  2201              MOVS     r2,#1
00092a  e9cd1000          STRD     r1,r0,[sp,#0]
00092e  4611              MOV      r1,r2
000930  48bf              LDR      r0,|L1.3120|
000932  f7fffffe          BL       mdb_send_cmd
000936  4604              MOV      r4,r0
;;;1040   	if(err!=MDB_RECEIVE_DATA)
000938  f89d000c          LDRB     r0,[sp,#0xc]
00093c  2879              CMP      r0,#0x79
00093e  d00f              BEQ      |L1.2400|
;;;1041   	{
;;;1042   		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000940  f7fffffe          BL       OSTimeGet
000944  49bd              LDR      r1,|L1.3132|
000946  6809              LDR      r1,[r1,#0]  ; bill_timeout
000948  1a40              SUBS     r0,r0,r1
00094a  f2417170          MOV      r1,#0x1770
00094e  4288              CMP      r0,r1
000950  d905              BLS      |L1.2398|
;;;1043   		{
;;;1044   			set_bill_status(0xFF);
000952  20ff              MOVS     r0,#0xff
000954  f7fffffe          BL       set_bill_status
;;;1045   			billequip.EQIU_FUNC=BillValtdator_Reset;
000958  48b9              LDR      r0,|L1.3136|
00095a  49ba              LDR      r1,|L1.3140|
00095c  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2398|
;;;1046   		}
;;;1047   		return;
;;;1048   	}
;;;1049   	//此对 STACKER 命令返回的结果的处理代码
;;;1050   	billvaltdator.full=(rx[0]&0x80>>7);
;;;1051   	billvaltdator.stock=((rx[0]<<8|rx[1])&0x7FFFF);
;;;1052   	
;;;1053   	billequip.EQIU_FUNC=Bill_TYPE;
;;;1054   	bill_timeout[0]=OSTimeGet();
;;;1055   }
00095e  bd1f              POP      {r0-r4,pc}
                  |L1.2400|
000960  7820              LDRB     r0,[r4,#0]            ;1050
000962  f0000001          AND      r0,r0,#1              ;1050
000966  49b4              LDR      r1,|L1.3128|
000968  7748              STRB     r0,[r1,#0x1d]         ;1050
00096a  8860              LDRH     r0,[r4,#2]            ;1051
00096c  7821              LDRB     r1,[r4,#0]            ;1051
00096e  ea402001          ORR      r0,r0,r1,LSL #8       ;1051
000972  49b1              LDR      r1,|L1.3128|
000974  83c8              STRH     r0,[r1,#0x1e]         ;1051
000976  f2af102f          ADR      r0,Bill_TYPE + 1
00097a  49b2              LDR      r1,|L1.3140|
00097c  6008              STR      r0,[r1,#0]            ;1053  ; billequip
00097e  f7fffffe          BL       OSTimeGet
000982  49ae              LDR      r1,|L1.3132|
000984  6008              STR      r0,[r1,#0]            ;1054  ; bill_timeout
000986  bf00              NOP      
000988  e7e9              B        |L1.2398|
;;;1056   
                          ENDP

                  Recycler_Enable PROC
;;;665    }
;;;666    void Recycler_Enable(void){//使能找零面值与进找零钞箱灵敏度
00098a  b57f              PUSH     {r0-r6,lr}
;;;667    	uint8_t err,i;	
;;;668    	uint16_t *rx, rx_len;
;;;669    	rx = rx;//防止编译器报错
00098c  bf00              NOP      
;;;670    	
;;;671    	bill_cmd[0]=BILL_EXP;
00098e  2037              MOVS     r0,#0x37
000990  49a7              LDR      r1,|L1.3120|
000992  7008              STRB     r0,[r1,#0]
;;;672    	bill_cmd[1]=0x04;
000994  2004              MOVS     r0,#4
000996  7048              STRB     r0,[r1,#1]
;;;673    	//这里可根据收到找零箱的纸币数判定是否需要关闭某种币种的收入
;;;674    	//billvaltdator.disParNum[i]纸币数量
;;;675    	bill_cmd[2]=0xFF;//使能全部支持币种进入找零箱
000998  20ff              MOVS     r0,#0xff
00099a  7088              STRB     r0,[r1,#2]
;;;676    	bill_cmd[3]=0xFF;//使能全部支持币种进入找零箱
00099c  70c8              STRB     r0,[r1,#3]
;;;677    	for(i=0;i<16;i++)
00099e  2400              MOVS     r4,#0
0009a0  e005              B        |L1.2478|
                  |L1.2466|
;;;678    		bill_cmd[i+4]=0x03;//最低安全级进找零钞箱
0009a2  2103              MOVS     r1,#3
0009a4  4aa2              LDR      r2,|L1.3120|
0009a6  1d20              ADDS     r0,r4,#4
0009a8  5411              STRB     r1,[r2,r0]
0009aa  1c60              ADDS     r0,r4,#1              ;677
0009ac  b2c4              UXTB     r4,r0                 ;677
                  |L1.2478|
0009ae  2c10              CMP      r4,#0x10              ;677
0009b0  dbf7              BLT      |L1.2466|
;;;679    	rx = mdb_send_cmd(bill_cmd,20,1,BILL_NO_RESPENSE, &err, &rx_len);
0009b2  a802              ADD      r0,sp,#8
0009b4  a903              ADD      r1,sp,#0xc
0009b6  230a              MOVS     r3,#0xa
0009b8  2201              MOVS     r2,#1
0009ba  e9cd1000          STRD     r1,r0,[sp,#0]
0009be  2114              MOVS     r1,#0x14
0009c0  489b              LDR      r0,|L1.3120|
0009c2  f7fffffe          BL       mdb_send_cmd
0009c6  4605              MOV      r5,r0
;;;680    	if(err!=MDB_RECEIVE_ACK){
0009c8  f89d000c          LDRB     r0,[sp,#0xc]
0009cc  2878              CMP      r0,#0x78
0009ce  d00f              BEQ      |L1.2544|
;;;681    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){
0009d0  f7fffffe          BL       OSTimeGet
0009d4  4999              LDR      r1,|L1.3132|
0009d6  6809              LDR      r1,[r1,#0]  ; bill_timeout
0009d8  1a40              SUBS     r0,r0,r1
0009da  f2417170          MOV      r1,#0x1770
0009de  4288              CMP      r0,r1
0009e0  d905              BLS      |L1.2542|
;;;682    			set_bill_status(0xFF);
0009e2  20ff              MOVS     r0,#0xff
0009e4  f7fffffe          BL       set_bill_status
;;;683    			billequip.EQIU_FUNC=BillValtdator_Reset;
0009e8  4895              LDR      r0,|L1.3136|
0009ea  4996              LDR      r1,|L1.3140|
0009ec  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2542|
;;;684    		}
;;;685    		return;
;;;686    	}
;;;687    	else{
;;;688    		billequip.EQIU_FUNC=BILL_Dispen_Status;
;;;689    		bill_timeout[0]=OSTimeGet();
;;;690    	}
;;;691    }
0009ee  bd7f              POP      {r0-r6,pc}
                  |L1.2544|
0009f0  f2af607b          ADR      r0,BILL_Dispen_Status + 1
0009f4  4993              LDR      r1,|L1.3140|
0009f6  6008              STR      r0,[r1,#0]            ;688  ; billequip
0009f8  f7fffffe          BL       OSTimeGet
0009fc  498f              LDR      r1,|L1.3132|
0009fe  6008              STR      r0,[r1,#0]            ;689  ; bill_timeout
000a00  bf00              NOP      
000a02  e7f4              B        |L1.2542|
;;;692    void BILL_Dispen_Status(void){//找零箱查询
                          ENDP

                  Recycler_Setup PROC
;;;635    	
;;;636    void Recycler_Setup(void){//查找哪些纸币可以进入找零箱
000a04  b57f              PUSH     {r0-r6,lr}
;;;637    	uint8_t err,i;
;;;638    	uint16_t *rx, rx_len;
;;;639    	
;;;640    	bill_cmd[0]=BILL_EXP;
000a06  2037              MOVS     r0,#0x37
000a08  4989              LDR      r1,|L1.3120|
000a0a  7008              STRB     r0,[r1,#0]
;;;641    	bill_cmd[1]=0x03;
000a0c  2003              MOVS     r0,#3
000a0e  7048              STRB     r0,[r1,#1]
;;;642    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE, &err, &rx_len);
000a10  a802              ADD      r0,sp,#8
000a12  a903              ADD      r1,sp,#0xc
000a14  230a              MOVS     r3,#0xa
000a16  2201              MOVS     r2,#1
000a18  e9cd1000          STRD     r1,r0,[sp,#0]
000a1c  2102              MOVS     r1,#2
000a1e  4884              LDR      r0,|L1.3120|
000a20  f7fffffe          BL       mdb_send_cmd
000a24  4605              MOV      r5,r0
;;;643    	if(err!=MDB_RECEIVE_DATA){
000a26  f89d000c          LDRB     r0,[sp,#0xc]
000a2a  2879              CMP      r0,#0x79
000a2c  d00f              BEQ      |L1.2638|
;;;644    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT){
000a2e  f7fffffe          BL       OSTimeGet
000a32  4982              LDR      r1,|L1.3132|
000a34  6809              LDR      r1,[r1,#0]  ; bill_timeout
000a36  1a40              SUBS     r0,r0,r1
000a38  f2417170          MOV      r1,#0x1770
000a3c  4288              CMP      r0,r1
000a3e  d905              BLS      |L1.2636|
;;;645    			set_bill_status(0xFF);
000a40  20ff              MOVS     r0,#0xff
000a42  f7fffffe          BL       set_bill_status
;;;646    			billequip.EQIU_FUNC=BillValtdator_Reset;
000a46  487e              LDR      r0,|L1.3136|
000a48  497e              LDR      r1,|L1.3140|
000a4a  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2636|
;;;647    		}
;;;648    		return;
;;;649    	}
;;;650    	else{
;;;651    		billvaltdator.recypath=rx[1]|rx[0]<<8;
;;;652    		for(i=0;i<16;i++){
;;;653    			if((billvaltdator.recypath>>i)%2==1)
;;;654    			break;
;;;655    		}
;;;656    		billvaltdator.lowest=i;//最小面值
;;;657    		for(i=15;i>0;i--){
;;;658    			if((billvaltdator.recypath>>i)%2==1)
;;;659    			break;
;;;660    		}
;;;661    		billvaltdator.highest=i;//最大面值
;;;662    		billequip.EQIU_FUNC=Recycler_Enable;
;;;663    		bill_timeout[0]=OSTimeGet();
;;;664    	}
;;;665    }
000a4c  bd7f              POP      {r0-r6,pc}
                  |L1.2638|
000a4e  8868              LDRH     r0,[r5,#2]            ;651
000a50  7829              LDRB     r1,[r5,#0]            ;651
000a52  ea402001          ORR      r0,r0,r1,LSL #8       ;651
000a56  4978              LDR      r1,|L1.3128|
000a58  f8a10072          STRH     r0,[r1,#0x72]         ;651
000a5c  2400              MOVS     r4,#0                 ;652
000a5e  e00e              B        |L1.2686|
                  |L1.2656|
000a60  4975              LDR      r1,|L1.3128|
000a62  f8b11072          LDRH     r1,[r1,#0x72]         ;653  ; billvaltdator
000a66  fa41f004          ASR      r0,r1,r4              ;653
000a6a  eb0071d0          ADD      r1,r0,r0,LSR #31      ;653
000a6e  1049              ASRS     r1,r1,#1              ;653
000a70  eba00141          SUB      r1,r0,r1,LSL #1       ;653
000a74  2901              CMP      r1,#1                 ;653
000a76  d100              BNE      |L1.2682|
000a78  e003              B        |L1.2690|
                  |L1.2682|
000a7a  1c60              ADDS     r0,r4,#1              ;652
000a7c  b2c4              UXTB     r4,r0                 ;652
                  |L1.2686|
000a7e  2c10              CMP      r4,#0x10              ;652
000a80  dbee              BLT      |L1.2656|
                  |L1.2690|
000a82  bf00              NOP                            ;654
000a84  486c              LDR      r0,|L1.3128|
000a86  f8804070          STRB     r4,[r0,#0x70]         ;656
000a8a  240f              MOVS     r4,#0xf               ;657
000a8c  e00e              B        |L1.2732|
                  |L1.2702|
000a8e  496a              LDR      r1,|L1.3128|
000a90  f8b11072          LDRH     r1,[r1,#0x72]         ;658  ; billvaltdator
000a94  fa41f004          ASR      r0,r1,r4              ;658
000a98  eb0071d0          ADD      r1,r0,r0,LSR #31      ;658
000a9c  1049              ASRS     r1,r1,#1              ;658
000a9e  eba00141          SUB      r1,r0,r1,LSL #1       ;658
000aa2  2901              CMP      r1,#1                 ;658
000aa4  d100              BNE      |L1.2728|
000aa6  e003              B        |L1.2736|
                  |L1.2728|
000aa8  1e60              SUBS     r0,r4,#1              ;657
000aaa  b2c4              UXTB     r4,r0                 ;657
                  |L1.2732|
000aac  2c00              CMP      r4,#0                 ;657
000aae  dcee              BGT      |L1.2702|
                  |L1.2736|
000ab0  bf00              NOP                            ;659
000ab2  4861              LDR      r0,|L1.3128|
000ab4  f8804071          STRB     r4,[r0,#0x71]         ;661
000ab8  f2af1031          ADR      r0,Recycler_Enable + 1
000abc  4961              LDR      r1,|L1.3140|
000abe  6008              STR      r0,[r1,#0]            ;662  ; billequip
000ac0  f7fffffe          BL       OSTimeGet
000ac4  495d              LDR      r1,|L1.3132|
000ac6  6008              STR      r0,[r1,#0]            ;663  ; bill_timeout
000ac8  bf00              NOP      
000aca  e7bf              B        |L1.2636|
;;;666    void Recycler_Enable(void){//使能找零面值与进找零钞箱灵敏度
                          ENDP

                  Bill_Exp_EnOption PROC
;;;602    
;;;603    void Bill_Exp_EnOption(void)
000acc  b51f              PUSH     {r0-r4,lr}
;;;604    {
;;;605    	uint8_t err;
;;;606    	uint16_t *rx, rx_len;
;;;607    	rx = rx;//防止编译器报错
000ace  bf00              NOP      
;;;608    
;;;609    	
;;;610    	bill_cmd[0]=BILL_EXP;
000ad0  2037              MOVS     r0,#0x37
000ad2  4957              LDR      r1,|L1.3120|
000ad4  7008              STRB     r0,[r1,#0]
;;;611    	bill_cmd[1]=0x01;
000ad6  2001              MOVS     r0,#1
000ad8  7048              STRB     r0,[r1,#1]
;;;612    	bill_cmd[2]=0;//FTL		//0:关闭功能;1:打开功能
000ada  2000              MOVS     r0,#0
000adc  7088              STRB     r0,[r1,#2]
;;;613    	bill_cmd[3]=0;//找零
000ade  70c8              STRB     r0,[r1,#3]
;;;614    	bill_cmd[4]=0;//保留
000ae0  7108              STRB     r0,[r1,#4]
;;;615    	bill_cmd[5]=billvaltdator.recycler<<1;//目前只支持纸币指令,ftl暂未支持
000ae2  4855              LDR      r0,|L1.3128|
000ae4  f8900038          LDRB     r0,[r0,#0x38]  ; billvaltdator
000ae8  0640              LSLS     r0,r0,#25
000aea  0e00              LSRS     r0,r0,#24
000aec  7148              STRB     r0,[r1,#5]
;;;616    	rx = mdb_send_cmd(bill_cmd,6,1,BILL_NO_RESPENSE*10, &err, &rx_len);
000aee  a802              ADD      r0,sp,#8
000af0  a903              ADD      r1,sp,#0xc
000af2  2364              MOVS     r3,#0x64
000af4  2201              MOVS     r2,#1
000af6  e9cd1000          STRD     r1,r0,[sp,#0]
000afa  2106              MOVS     r1,#6
000afc  484c              LDR      r0,|L1.3120|
000afe  f7fffffe          BL       mdb_send_cmd
000b02  4604              MOV      r4,r0
;;;617    	if(err != MDB_RECEIVE_ACK)
000b04  f89d000c          LDRB     r0,[sp,#0xc]
000b08  2878              CMP      r0,#0x78
000b0a  d00f              BEQ      |L1.2860|
;;;618    	{
;;;619    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000b0c  f7fffffe          BL       OSTimeGet
000b10  494a              LDR      r1,|L1.3132|
000b12  6809              LDR      r1,[r1,#0]  ; bill_timeout
000b14  1a40              SUBS     r0,r0,r1
000b16  f2417170          MOV      r1,#0x1770
000b1a  4288              CMP      r0,r1
000b1c  d905              BLS      |L1.2858|
;;;620    		{
;;;621    			set_bill_status(0xFF);
000b1e  20ff              MOVS     r0,#0xff
000b20  f7fffffe          BL       set_bill_status
;;;622    			billequip.EQIU_FUNC=BillValtdator_Reset;
000b24  4846              LDR      r0,|L1.3136|
000b26  4947              LDR      r1,|L1.3140|
000b28  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2858|
;;;623    		}
;;;624    		return;
;;;625    	}
;;;626    	else
;;;627    	{
;;;628    		if(billvaltdator.recycler==1)//支持找零
;;;629    			billequip.EQIU_FUNC=Recycler_Setup;
;;;630    		else
;;;631    			billequip.EQIU_FUNC=Bill_Stacker;
;;;632    		bill_timeout[0]=OSTimeGet();
;;;633    	}
;;;634    }
000b2a  bd1f              POP      {r0-r4,pc}
                  |L1.2860|
000b2c  4842              LDR      r0,|L1.3128|
000b2e  f8900038          LDRB     r0,[r0,#0x38]         ;628  ; billvaltdator
000b32  2801              CMP      r0,#1                 ;628
000b34  d104              BNE      |L1.2880|
000b36  f2af1033          ADR      r0,Recycler_Setup + 1
000b3a  4942              LDR      r1,|L1.3140|
000b3c  6008              STR      r0,[r1,#0]            ;629  ; billequip
000b3e  e003              B        |L1.2888|
                  |L1.2880|
000b40  f2af2029          ADR      r0,Bill_Stacker + 1
000b44  493f              LDR      r1,|L1.3140|
000b46  6008              STR      r0,[r1,#0]            ;631  ; billequip
                  |L1.2888|
000b48  f7fffffe          BL       OSTimeGet
000b4c  493b              LDR      r1,|L1.3132|
000b4e  6008              STR      r0,[r1,#0]            ;632  ; bill_timeout
000b50  bf00              NOP      
000b52  e7ea              B        |L1.2858|
;;;635    	
                          ENDP

                  Bill_Exp_Feature PROC
;;;573    
;;;574    void Bill_Exp_Feature(void)
000b54  b51f              PUSH     {r0-r4,lr}
;;;575    {
;;;576    	uint8_t err;
;;;577    	uint16_t *rx, rx_len;
;;;578    	
;;;579    	bill_cmd[0]=BILL_EXP;
000b56  2037              MOVS     r0,#0x37
000b58  4935              LDR      r1,|L1.3120|
000b5a  7008              STRB     r0,[r1,#0]
;;;580    	bill_cmd[1]=0x02;
000b5c  2002              MOVS     r0,#2
000b5e  7048              STRB     r0,[r1,#1]
;;;581    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE*10, &err, &rx_len);
000b60  a802              ADD      r0,sp,#8
000b62  a903              ADD      r1,sp,#0xc
000b64  2364              MOVS     r3,#0x64
000b66  2201              MOVS     r2,#1
000b68  e9cd1000          STRD     r1,r0,[sp,#0]
000b6c  2102              MOVS     r1,#2
000b6e  4830              LDR      r0,|L1.3120|
000b70  f7fffffe          BL       mdb_send_cmd
000b74  4604              MOV      r4,r0
;;;582    	if(err!=MDB_RECEIVE_DATA)
000b76  f89d000c          LDRB     r0,[sp,#0xc]
000b7a  2879              CMP      r0,#0x79
000b7c  d00f              BEQ      |L1.2974|
;;;583    	{
;;;584    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000b7e  f7fffffe          BL       OSTimeGet
000b82  492e              LDR      r1,|L1.3132|
000b84  6809              LDR      r1,[r1,#0]  ; bill_timeout
000b86  1a40              SUBS     r0,r0,r1
000b88  f2417170          MOV      r1,#0x1770
000b8c  4288              CMP      r0,r1
000b8e  d905              BLS      |L1.2972|
;;;585    		{
;;;586    			set_bill_status(0xFF);
000b90  20ff              MOVS     r0,#0xff
000b92  f7fffffe          BL       set_bill_status
;;;587    			billequip.EQIU_FUNC=BillValtdator_Reset;
000b96  482a              LDR      r0,|L1.3136|
000b98  492a              LDR      r1,|L1.3140|
000b9a  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.2972|
;;;588    		}
;;;589    		return;
;;;590    	}
;;;591    	else
;;;592    	{
;;;593    		billvaltdator.ftl=rx[32] & 0x01;			//ftl
;;;594    		billvaltdator.recycler=(rx[32]>>1) & 0x01;//找零方式
;;;595    		if((billvaltdator.recycler | billvaltdator.ftl)!=0)//只要有支持的功能
;;;596    			billequip.EQIU_FUNC=Bill_Exp_EnOption;
;;;597    		else	
;;;598    			billequip.EQIU_FUNC=Bill_Stacker;
;;;599    		bill_timeout[0]=OSTimeGet();
;;;600    	}
;;;601    }
000b9c  bd1f              POP      {r0-r4,pc}
                  |L1.2974|
000b9e  f8940040          LDRB     r0,[r4,#0x40]         ;593
000ba2  f0000001          AND      r0,r0,#1              ;593
000ba6  4924              LDR      r1,|L1.3128|
000ba8  f8810035          STRB     r0,[r1,#0x35]         ;593
000bac  f8940040          LDRB     r0,[r4,#0x40]         ;594
000bb0  f3c00040          UBFX     r0,r0,#1,#1           ;594
000bb4  f8810038          STRB     r0,[r1,#0x38]         ;594
000bb8  4608              MOV      r0,r1                 ;595
000bba  f8900038          LDRB     r0,[r0,#0x38]         ;595  ; billvaltdator
000bbe  f8911035          LDRB     r1,[r1,#0x35]         ;595  ; billvaltdator
000bc2  4308              ORRS     r0,r0,r1              ;595
000bc4  b120              CBZ      r0,|L1.3024|
000bc6  f2af00fb          ADR      r0,Bill_Exp_EnOption + 1
000bca  491e              LDR      r1,|L1.3140|
000bcc  6008              STR      r0,[r1,#0]            ;596  ; billequip
000bce  e003              B        |L1.3032|
                  |L1.3024|
000bd0  f2af20b9          ADR      r0,Bill_Stacker + 1
000bd4  491b              LDR      r1,|L1.3140|
000bd6  6008              STR      r0,[r1,#0]            ;598  ; billequip
                  |L1.3032|
000bd8  f7fffffe          BL       OSTimeGet
000bdc  4917              LDR      r1,|L1.3132|
000bde  6008              STR      r0,[r1,#0]            ;599  ; bill_timeout
000be0  bf00              NOP      
000be2  e7db              B        |L1.2972|
;;;602    
                          ENDP

                  Bill_Exp_Identifiy PROC
;;;540    
;;;541    void Bill_Exp_Identifiy(void)
000be4  b51f              PUSH     {r0-r4,lr}
;;;542    {
;;;543    	uint8_t err;
;;;544    	uint16_t *rx, rx_len;
;;;545    	rx = rx;//防止编译器报错
000be6  bf00              NOP      
;;;546    
;;;547    	bill_cmd[0]=BILL_EXP;
000be8  2037              MOVS     r0,#0x37
000bea  4911              LDR      r1,|L1.3120|
000bec  7008              STRB     r0,[r1,#0]
;;;548    	bill_cmd[1]=0x00;
000bee  2000              MOVS     r0,#0
000bf0  7048              STRB     r0,[r1,#1]
;;;549    	rx = mdb_send_cmd(bill_cmd,2,1,BILL_NO_RESPENSE*10, &err, &rx_len);//发送扩展ID命令
000bf2  a802              ADD      r0,sp,#8
000bf4  a903              ADD      r1,sp,#0xc
000bf6  2364              MOVS     r3,#0x64
000bf8  2201              MOVS     r2,#1
000bfa  e9cd1000          STRD     r1,r0,[sp,#0]
000bfe  2102              MOVS     r1,#2
000c00  480b              LDR      r0,|L1.3120|
000c02  f7fffffe          BL       mdb_send_cmd
000c06  4604              MOV      r4,r0
;;;550    	if(err!=MDB_RECEIVE_DATA)
000c08  f89d000c          LDRB     r0,[sp,#0xc]
000c0c  2879              CMP      r0,#0x79
000c0e  d01d              BEQ      |L1.3148|
;;;551    	{
;;;552    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000c10  f7fffffe          BL       OSTimeGet
000c14  4909              LDR      r1,|L1.3132|
000c16  6809              LDR      r1,[r1,#0]  ; bill_timeout
000c18  1a40              SUBS     r0,r0,r1
000c1a  f2417170          MOV      r1,#0x1770
000c1e  4288              CMP      r0,r1
000c20  d905              BLS      |L1.3118|
;;;553    		{
;;;554    			set_bill_status(0xFF);
000c22  20ff              MOVS     r0,#0xff
000c24  f7fffffe          BL       set_bill_status
;;;555    			billequip.EQIU_FUNC=BillValtdator_Reset;
000c28  4805              LDR      r0,|L1.3136|
000c2a  4906              LDR      r1,|L1.3140|
000c2c  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.3118|
;;;556    		}
;;;557    		return;
;;;558    	}
;;;559    	else
;;;560    	{
;;;561    		//获取
;;;562    		//1.制造商代码
;;;563    		//2.串号
;;;564    		//3.制造分配代码(一机一号?)
;;;565    		//4.软件版本
;;;566    		if(billvaltdator.level>1)
;;;567    			billequip.EQIU_FUNC=Bill_Exp_Feature;
;;;568    		else
;;;569    			billequip.EQIU_FUNC=Bill_Stacker;
;;;570    		bill_timeout[0]=OSTimeGet();
;;;571    	}
;;;572    }
000c2e  bd1f              POP      {r0-r4,pc}
                  |L1.3120|
                          DCD      bill_cmd
                  |L1.3124|
                          DCD      billset
                  |L1.3128|
                          DCD      billvaltdator
                  |L1.3132|
                          DCD      bill_timeout
                  |L1.3136|
                          DCD      BillValtdator_Reset
                  |L1.3140|
                          DCD      billequip
                  |L1.3144|
                          DCD      Bill_Security
                  |L1.3148|
000c4c  48fc              LDR      r0,|L1.4160|
000c4e  7800              LDRB     r0,[r0,#0]            ;566  ; billvaltdator
000c50  2801              CMP      r0,#1                 ;566
000c52  dd04              BLE      |L1.3166|
000c54  f2af1003          ADR      r0,Bill_Exp_Feature + 1
000c58  49fa              LDR      r1,|L1.4164|
000c5a  6008              STR      r0,[r1,#0]            ;567  ; billequip
000c5c  e003              B        |L1.3174|
                  |L1.3166|
000c5e  f2af3045          ADR      r0,Bill_Stacker + 1
000c62  49f8              LDR      r1,|L1.4164|
000c64  6008              STR      r0,[r1,#0]            ;569  ; billequip
                  |L1.3174|
000c66  f7fffffe          BL       OSTimeGet
000c6a  49f7              LDR      r1,|L1.4168|
000c6c  6008              STR      r0,[r1,#0]            ;570  ; bill_timeout
000c6e  bf00              NOP      
000c70  e7dd              B        |L1.3118|
;;;573    
                          ENDP

                  Bill_Security PROC
;;;509    
;;;510    void Bill_Security(void)
000c72  b51f              PUSH     {r0-r4,lr}
;;;511    {
;;;512    	uint8_t err;
;;;513    	uint16_t *rx, rx_len;
;;;514    	rx = rx;
000c74  bf00              NOP      
;;;515    	
;;;516    	bill_cmd[0]=BILL_SECURITY;
000c76  2032              MOVS     r0,#0x32
000c78  49f4              LDR      r1,|L1.4172|
000c7a  7008              STRB     r0,[r1,#0]
;;;517    	bill_cmd[1]=0x00;//安全级别 0:低级;1:高级
000c7c  2000              MOVS     r0,#0
000c7e  7048              STRB     r0,[r1,#1]
;;;518    	bill_cmd[2]=0x00;
000c80  7088              STRB     r0,[r1,#2]
;;;519    	rx = mdb_send_cmd(bill_cmd,3,1,BILL_NO_RESPENSE, &err, &rx_len);
000c82  a802              ADD      r0,sp,#8
000c84  a903              ADD      r1,sp,#0xc
000c86  230a              MOVS     r3,#0xa
000c88  2201              MOVS     r2,#1
000c8a  e9cd1000          STRD     r1,r0,[sp,#0]
000c8e  2103              MOVS     r1,#3
000c90  48ee              LDR      r0,|L1.4172|
000c92  f7fffffe          BL       mdb_send_cmd
000c96  4604              MOV      r4,r0
;;;520    	if(err!=MDB_RECEIVE_ACK)
000c98  f89d000c          LDRB     r0,[sp,#0xc]
000c9c  2878              CMP      r0,#0x78
000c9e  d00f              BEQ      |L1.3264|
;;;521    	{
;;;522    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000ca0  f7fffffe          BL       OSTimeGet
000ca4  49e8              LDR      r1,|L1.4168|
000ca6  6809              LDR      r1,[r1,#0]  ; bill_timeout
000ca8  1a40              SUBS     r0,r0,r1
000caa  f2417170          MOV      r1,#0x1770
000cae  4288              CMP      r0,r1
000cb0  d905              BLS      |L1.3262|
;;;523    		{
;;;524    			set_bill_status(0xFF);
000cb2  20ff              MOVS     r0,#0xff
000cb4  f7fffffe          BL       set_bill_status
;;;525    			billequip.EQIU_FUNC=BillValtdator_Reset;
000cb8  48e5              LDR      r0,|L1.4176|
000cba  49e2              LDR      r1,|L1.4164|
000cbc  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.3262|
;;;526    		}
;;;527    		return;
;;;528    	}
;;;529    	else
;;;530    	{
;;;531    		if(billvaltdator.level>1)
;;;532    			billequip.EQIU_FUNC=Bill_Exp_Identifiy;
;;;533    		else
;;;534    			billequip.EQIU_FUNC=Bill_Stacker;
;;;535    		
;;;536    		//billequip.EQIU_FUNC=Bill_Exp_Identifiy;
;;;537    		bill_timeout[0]=OSTimeGet();
;;;538    	}
;;;539    }
000cbe  bd1f              POP      {r0-r4,pc}
                  |L1.3264|
000cc0  48df              LDR      r0,|L1.4160|
000cc2  7800              LDRB     r0,[r0,#0]            ;531  ; billvaltdator
000cc4  2801              CMP      r0,#1                 ;531
000cc6  dd04              BLE      |L1.3282|
000cc8  f2af00e7          ADR      r0,Bill_Exp_Identifiy + 1
000ccc  49dd              LDR      r1,|L1.4164|
000cce  6008              STR      r0,[r1,#0]            ;532  ; billequip
000cd0  e003              B        |L1.3290|
                  |L1.3282|
000cd2  f2af30b9          ADR      r0,Bill_Stacker + 1
000cd6  49db              LDR      r1,|L1.4164|
000cd8  6008              STR      r0,[r1,#0]            ;534  ; billequip
                  |L1.3290|
000cda  f7fffffe          BL       OSTimeGet
000cde  49da              LDR      r1,|L1.4168|
000ce0  6008              STR      r0,[r1,#0]            ;537  ; bill_timeout
000ce2  bf00              NOP      
000ce4  e7eb              B        |L1.3262|
;;;540    
                          ENDP

                  Bill_Setup PROC
;;;293    */
;;;294    void Bill_Setup(void)
000ce6  b57f              PUSH     {r0-r6,lr}
;;;295    {
;;;296    	uint8_t err, i;
;;;297    	uint16_t *rx, rx_len;//接收数据指针与接收数据长度
;;;298    	
;;;299    	bill_cmd[0]=BILL_SETUP;
000ce8  2031              MOVS     r0,#0x31
000cea  49d8              LDR      r1,|L1.4172|
000cec  7008              STRB     r0,[r1,#0]
;;;300    	rx = mdb_send_cmd(bill_cmd,1,1,BILL_NO_RESPENSE*10, &err, &rx_len);
000cee  a802              ADD      r0,sp,#8
000cf0  a903              ADD      r1,sp,#0xc
000cf2  2364              MOVS     r3,#0x64
000cf4  2201              MOVS     r2,#1
000cf6  e9cd1000          STRD     r1,r0,[sp,#0]
000cfa  4611              MOV      r1,r2
000cfc  48d3              LDR      r0,|L1.4172|
000cfe  f7fffffe          BL       mdb_send_cmd
000d02  4605              MOV      r5,r0
;;;301    	if(err!=MDB_RECEIVE_DATA)
000d04  f89d000c          LDRB     r0,[sp,#0xc]
000d08  2879              CMP      r0,#0x79
000d0a  d00f              BEQ      |L1.3372|
;;;302    	{
;;;303    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
000d0c  f7fffffe          BL       OSTimeGet
000d10  49cd              LDR      r1,|L1.4168|
000d12  6809              LDR      r1,[r1,#0]  ; bill_timeout
000d14  1a40              SUBS     r0,r0,r1
000d16  f2417170          MOV      r1,#0x1770
000d1a  4288              CMP      r0,r1
000d1c  d905              BLS      |L1.3370|
;;;304    		{
;;;305    			billequip.EQIU_FUNC=BillValtdator_Reset;
000d1e  48cc              LDR      r0,|L1.4176|
000d20  49c8              LDR      r1,|L1.4164|
000d22  6008              STR      r0,[r1,#0]  ; billequip
;;;306    			set_bill_status(0xFF);
000d24  20ff              MOVS     r0,#0xff
000d26  f7fffffe          BL       set_bill_status
                  |L1.3370|
;;;307    		}
;;;308    		return;
;;;309    	}
;;;310    	setupCount++;
;;;311    	//对SETUP命令返回的结果的处理代码
;;;312    	billvaltdator.level = rx[0];
;;;313    	billvaltdator.BCD = rx[2] | (rx[1] << 8);
;;;314    	billvaltdator.factor = rx[4] | (rx[3] << 8);
;;;315    	billvaltdator.point=rx[5];
;;;316    	billfactor=sysfactor;
;;;317    	for(i=0;i<billvaltdator.point;i++)
;;;318    		billfactor=billfactor/10;
;;;319    	billfactor=billfactor*billvaltdator.factor;
;;;320    	billvaltdator.capacity=rx[7]|(rx[6]<<8);
;;;321    	billvaltdator.security=rx[9]|(rx[8]<<8);
;;;322    	billvaltdator.escrow=rx[10];
;;;323    	for(i=11;i<rx_len;i++)
;;;324    	{
;;;325    		billvaltdator.par_value[i-11]=rx[i];
;;;326    		if(setupCount>1)
;;;327    		{
;;;328    			if((typevalue[i-11]+billvaltdator.par_value[i-11])!=0xFF)//如果两次读出的不符则重读
;;;329    			{
;;;330    				setupCount=0;
;;;331    				bill_timeout[0]=OSTimeGet();
;;;332    				return;
;;;333    			}
;;;334    		}
;;;335    		//币值 = 0 不用的币种
;;;336    		//币值 = 0xFF vend tokens
;;;337    		if(i>11 && billvaltdator.par_value[i-11]!=0 && billvaltdator.par_value[i-11]!=0xFF)
;;;338    		{
;;;339    			if(billvaltdator.par_value[(i-1)-11]>billvaltdator.par_value[i-11])
;;;340    			{
;;;341    				setupCount=0;
;;;342    				bill_timeout[0]=OSTimeGet();
;;;343    				return;
;;;344    			}
;;;345    		}
;;;346    		typevalue[i-11]=(0xFF-rx[i]);//记录取反
;;;347    	}
;;;348    	
;;;349    	if(setupCount<5)
;;;350    	{
;;;351    		bill_timeout[0]=OSTimeGet();
;;;352    		return;
;;;353    	}
;;;354    	
;;;355    	billequip.EQIU_FUNC=Bill_Security;
;;;356    	bill_timeout[0]=OSTimeGet();
;;;357    }
000d2a  bd7f              POP      {r0-r6,pc}
                  |L1.3372|
000d2c  48c9              LDR      r0,|L1.4180|
000d2e  7800              LDRB     r0,[r0,#0]            ;310  ; setupCount
000d30  1c40              ADDS     r0,r0,#1              ;310
000d32  49c8              LDR      r1,|L1.4180|
000d34  7008              STRB     r0,[r1,#0]            ;310
000d36  7828              LDRB     r0,[r5,#0]            ;312
000d38  49c1              LDR      r1,|L1.4160|
000d3a  7008              STRB     r0,[r1,#0]            ;312
000d3c  88a8              LDRH     r0,[r5,#4]            ;313
000d3e  78a9              LDRB     r1,[r5,#2]            ;313
000d40  ea402001          ORR      r0,r0,r1,LSL #8       ;313
000d44  49be              LDR      r1,|L1.4160|
000d46  8048              STRH     r0,[r1,#2]            ;313
000d48  8928              LDRH     r0,[r5,#8]            ;314
000d4a  79a9              LDRB     r1,[r5,#6]            ;314
000d4c  ea402001          ORR      r0,r0,r1,LSL #8       ;314
000d50  49bb              LDR      r1,|L1.4160|
000d52  8088              STRH     r0,[r1,#4]            ;314
000d54  7aa8              LDRB     r0,[r5,#0xa]          ;315
000d56  7188              STRB     r0,[r1,#6]            ;315
000d58  48bf              LDR      r0,|L1.4184|
000d5a  6800              LDR      r0,[r0,#0]            ;316  ; sysfactor
000d5c  49bf              LDR      r1,|L1.4188|
000d5e  6008              STR      r0,[r1,#0]            ;316  ; billfactor
000d60  2400              MOVS     r4,#0                 ;317
000d62  e008              B        |L1.3446|
                  |L1.3428|
000d64  48bd              LDR      r0,|L1.4188|
000d66  6800              LDR      r0,[r0,#0]            ;318  ; billfactor
000d68  210a              MOVS     r1,#0xa               ;318
000d6a  fbb0f0f1          UDIV     r0,r0,r1              ;318
000d6e  49bb              LDR      r1,|L1.4188|
000d70  6008              STR      r0,[r1,#0]            ;318  ; billfactor
000d72  1c60              ADDS     r0,r4,#1              ;317
000d74  b2c4              UXTB     r4,r0                 ;317
                  |L1.3446|
000d76  48b2              LDR      r0,|L1.4160|
000d78  7980              LDRB     r0,[r0,#6]            ;317  ; billvaltdator
000d7a  42a0              CMP      r0,r4                 ;317
000d7c  dcf2              BGT      |L1.3428|
000d7e  48b0              LDR      r0,|L1.4160|
000d80  8880              LDRH     r0,[r0,#4]            ;319  ; billvaltdator
000d82  49b6              LDR      r1,|L1.4188|
000d84  6809              LDR      r1,[r1,#0]            ;319  ; billfactor
000d86  4348              MULS     r0,r1,r0              ;319
000d88  49b4              LDR      r1,|L1.4188|
000d8a  6008              STR      r0,[r1,#0]            ;319  ; billfactor
000d8c  89e8              LDRH     r0,[r5,#0xe]          ;320
000d8e  7b29              LDRB     r1,[r5,#0xc]          ;320
000d90  ea402001          ORR      r0,r0,r1,LSL #8       ;320
000d94  49aa              LDR      r1,|L1.4160|
000d96  8108              STRH     r0,[r1,#8]            ;320
000d98  8a68              LDRH     r0,[r5,#0x12]         ;321
000d9a  7c29              LDRB     r1,[r5,#0x10]         ;321
000d9c  ea402001          ORR      r0,r0,r1,LSL #8       ;321
000da0  49a7              LDR      r1,|L1.4160|
000da2  8148              STRH     r0,[r1,#0xa]          ;321
000da4  7d28              LDRB     r0,[r5,#0x14]         ;322
000da6  7308              STRB     r0,[r1,#0xc]          ;322
000da8  240b              MOVS     r4,#0xb               ;323
000daa  e043              B        |L1.3636|
                  |L1.3500|
000dac  f8152014          LDRB     r2,[r5,r4,LSL #1]     ;325
000db0  f1a4000b          SUB      r0,r4,#0xb            ;325
000db4  49a2              LDR      r1,|L1.4160|
000db6  310d              ADDS     r1,r1,#0xd            ;325
000db8  540a              STRB     r2,[r1,r0]            ;325
000dba  48a6              LDR      r0,|L1.4180|
000dbc  7800              LDRB     r0,[r0,#0]            ;326  ; setupCount
000dbe  2801              CMP      r0,#1                 ;326
000dc0  dd11              BLE      |L1.3558|
000dc2  f1a4000b          SUB      r0,r4,#0xb            ;328
000dc6  49a6              LDR      r1,|L1.4192|
000dc8  5c0a              LDRB     r2,[r1,r0]            ;328
000dca  499d              LDR      r1,|L1.4160|
000dcc  310d              ADDS     r1,r1,#0xd            ;328
000dce  5c08              LDRB     r0,[r1,r0]            ;328
000dd0  4410              ADD      r0,r0,r2              ;328
000dd2  28ff              CMP      r0,#0xff              ;328
000dd4  d007              BEQ      |L1.3558|
000dd6  2000              MOVS     r0,#0                 ;330
000dd8  499e              LDR      r1,|L1.4180|
000dda  7008              STRB     r0,[r1,#0]            ;330
000ddc  f7fffffe          BL       OSTimeGet
000de0  4999              LDR      r1,|L1.4168|
000de2  6008              STR      r0,[r1,#0]            ;331  ; bill_timeout
000de4  e7a1              B        |L1.3370|
                  |L1.3558|
000de6  2c0b              CMP      r4,#0xb               ;337
000de8  dd19              BLE      |L1.3614|
000dea  f1a4000b          SUB      r0,r4,#0xb            ;337
000dee  4994              LDR      r1,|L1.4160|
000df0  310d              ADDS     r1,r1,#0xd            ;337
000df2  5c08              LDRB     r0,[r1,r0]            ;337
000df4  b198              CBZ      r0,|L1.3614|
000df6  f1a4000b          SUB      r0,r4,#0xb            ;337
000dfa  5c08              LDRB     r0,[r1,r0]            ;337
000dfc  28ff              CMP      r0,#0xff              ;337
000dfe  d00e              BEQ      |L1.3614|
000e00  f1a4000c          SUB      r0,r4,#0xc            ;339
000e04  5c0a              LDRB     r2,[r1,r0]            ;339
000e06  1c40              ADDS     r0,r0,#1              ;339
000e08  5c08              LDRB     r0,[r1,r0]            ;339
000e0a  4282              CMP      r2,r0                 ;339
000e0c  dd07              BLE      |L1.3614|
000e0e  2000              MOVS     r0,#0                 ;341
000e10  4990              LDR      r1,|L1.4180|
000e12  7008              STRB     r0,[r1,#0]            ;341
000e14  f7fffffe          BL       OSTimeGet
000e18  498b              LDR      r1,|L1.4168|
000e1a  6008              STR      r0,[r1,#0]            ;342  ; bill_timeout
000e1c  e785              B        |L1.3370|
                  |L1.3614|
000e1e  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;346
000e22  f1c000ff          RSB      r0,r0,#0xff           ;346
000e26  b2c1              UXTB     r1,r0                 ;346
000e28  f1a4000b          SUB      r0,r4,#0xb            ;346
000e2c  4a8c              LDR      r2,|L1.4192|
000e2e  5411              STRB     r1,[r2,r0]            ;346
000e30  1c60              ADDS     r0,r4,#1              ;323
000e32  b2c4              UXTB     r4,r0                 ;323
                  |L1.3636|
000e34  f8bd0008          LDRH     r0,[sp,#8]            ;323
000e38  4284              CMP      r4,r0                 ;323
000e3a  dbb7              BLT      |L1.3500|
000e3c  4885              LDR      r0,|L1.4180|
000e3e  7800              LDRB     r0,[r0,#0]            ;349  ; setupCount
000e40  2805              CMP      r0,#5                 ;349
000e42  da04              BGE      |L1.3662|
000e44  f7fffffe          BL       OSTimeGet
000e48  497f              LDR      r1,|L1.4168|
000e4a  6008              STR      r0,[r1,#0]            ;351  ; bill_timeout
000e4c  e76d              B        |L1.3370|
                  |L1.3662|
000e4e  f2af10dd          ADR      r0,Bill_Security + 1
000e52  497c              LDR      r1,|L1.4164|
000e54  6008              STR      r0,[r1,#0]            ;355  ; billequip
000e56  f7fffffe          BL       OSTimeGet
000e5a  497b              LDR      r1,|L1.4168|
000e5c  6008              STR      r0,[r1,#0]            ;356  ; bill_timeout
000e5e  bf00              NOP      
000e60  e763              B        |L1.3370|
;;;358    
                          ENDP

                  BillReset_Poll PROC
;;;238    
;;;239    void BillReset_Poll(void)
000e62  b570              PUSH     {r4-r6,lr}
;;;240    {
000e64  b086              SUB      sp,sp,#0x18
;;;241    	uint8_t err;
;;;242    	uint16_t *rx, rx_len;//接收数据指针与接收数据长度
;;;243    	
;;;244    	bill_cmd[0]=BILL_POLL;
000e66  2033              MOVS     r0,#0x33
000e68  4978              LDR      r1,|L1.4172|
000e6a  7008              STRB     r0,[r1,#0]
;;;245    	rx = mdb_send_cmd(bill_cmd, 1, 1, BILL_NO_RESPENSE, &err, &rx_len);
000e6c  a804              ADD      r0,sp,#0x10
000e6e  a905              ADD      r1,sp,#0x14
000e70  230a              MOVS     r3,#0xa
000e72  2201              MOVS     r2,#1
000e74  e9cd1000          STRD     r1,r0,[sp,#0]
000e78  4611              MOV      r1,r2
000e7a  4874              LDR      r0,|L1.4172|
000e7c  f7fffffe          BL       mdb_send_cmd
000e80  4605              MOV      r5,r0
;;;246    	
;;;247    	if(err!=MDB_RECEIVE_ACK && err!=MDB_RECEIVE_DATA)
000e82  f89d0014          LDRB     r0,[sp,#0x14]
000e86  2878              CMP      r0,#0x78
000e88  d014              BEQ      |L1.3764|
000e8a  f89d0014          LDRB     r0,[sp,#0x14]
000e8e  2879              CMP      r0,#0x79
000e90  d010              BEQ      |L1.3764|
;;;248    	{
;;;249    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)//超时
000e92  f7fffffe          BL       OSTimeGet
000e96  496c              LDR      r1,|L1.4168|
000e98  6809              LDR      r1,[r1,#0]  ; bill_timeout
000e9a  1a40              SUBS     r0,r0,r1
000e9c  f2417170          MOV      r1,#0x1770
000ea0  4288              CMP      r0,r1
000ea2  d905              BLS      |L1.3760|
;;;250    		{
;;;251    			set_bill_status(0xFF);
000ea4  20ff              MOVS     r0,#0xff
000ea6  f7fffffe          BL       set_bill_status
;;;252    			billequip.EQIU_FUNC=BillValtdator_Reset;
000eaa  4869              LDR      r0,|L1.4176|
000eac  4965              LDR      r1,|L1.4164|
000eae  6008              STR      r0,[r1,#0]  ; billequip
                  |L1.3760|
;;;253    		}
;;;254    		return;
;;;255    	}
;;;256    	else
;;;257    	{
;;;258    		if(err==MDB_RECEIVE_DATA)
;;;259    		{
;;;260    			uint8_t i,err=FALSE;
;;;261    			for(i=0;i < rx_len; i++)
;;;262    			{
;;;263    				if(rx[i] == 0x03)//忙
;;;264    				{
;;;265    					
;;;266    				}
;;;267    				else
;;;268    				if(rx[i] == BILL_JUST_RESET)
;;;269    				{
;;;270    					err = TRUE;
;;;271    				}
;;;272    			}
;;;273    			if(err!=TRUE)
;;;274    			{
;;;275    				lcd_show_string("8", 0, 0, RED, WHITE, font48);
;;;276    			}
;;;277    
;;;278    		}
;;;279    		else
;;;280    		if(err == MDB_RECEIVE_ACK)
;;;281    		{
;;;282    			resetflag=1;
;;;283    			lcd_show_string("9", 0, 0, RED, WHITE, font48);
;;;284    		}
;;;285    	}
;;;286    	setupCount = 0;//setup清零
;;;287    	billequip.EQIU_FUNC = Bill_Setup;
;;;288    	bill_timeout[0] = OSTimeGet();
;;;289    }
000eb0  b006              ADD      sp,sp,#0x18
000eb2  bd70              POP      {r4-r6,pc}
                  |L1.3764|
000eb4  f89d0014          LDRB     r0,[sp,#0x14]         ;258
000eb8  2879              CMP      r0,#0x79              ;258
000eba  d122              BNE      |L1.3842|
000ebc  2600              MOVS     r6,#0                 ;260
000ebe  2400              MOVS     r4,#0                 ;261
000ec0  e00a              B        |L1.3800|
                  |L1.3778|
000ec2  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;263
000ec6  2803              CMP      r0,#3                 ;263
000ec8  d004              BEQ      |L1.3796|
000eca  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;268
000ece  2806              CMP      r0,#6                 ;268
000ed0  d100              BNE      |L1.3796|
000ed2  2601              MOVS     r6,#1                 ;270
                  |L1.3796|
000ed4  1c60              ADDS     r0,r4,#1              ;261
000ed6  b2c4              UXTB     r4,r0                 ;261
                  |L1.3800|
000ed8  f8bd0010          LDRH     r0,[sp,#0x10]         ;261
000edc  4284              CMP      r4,r0                 ;261
000ede  dbf0              BLT      |L1.3778|
000ee0  2e01              CMP      r6,#1                 ;273
000ee2  d00d              BEQ      |L1.3840|
000ee4  4a5f              LDR      r2,|L1.4196|
000ee6  ca07              LDM      r2,{r0-r2}            ;275
000ee8  ab01              ADD      r3,sp,#4              ;275
000eea  c307              STM      r3!,{r0-r2}           ;275
000eec  f64f70ff          MOV      r0,#0xffff            ;275
000ef0  f44f4378          MOV      r3,#0xf800            ;275
000ef4  2200              MOVS     r2,#0                 ;275
000ef6  4611              MOV      r1,r2                 ;275
000ef8  9000              STR      r0,[sp,#0]            ;275
000efa  a05b              ADR      r0,|L1.4200|
000efc  f7fffffe          BL       lcd_show_string
                  |L1.3840|
000f00  e017              B        |L1.3890|
                  |L1.3842|
000f02  f89d0014          LDRB     r0,[sp,#0x14]         ;280
000f06  2878              CMP      r0,#0x78              ;280
000f08  d113              BNE      |L1.3890|
000f0a  2001              MOVS     r0,#1                 ;282
000f0c  4957              LDR      r1,|L1.4204|
000f0e  7008              STRB     r0,[r1,#0]            ;282
000f10  4a54              LDR      r2,|L1.4196|
000f12  e9d21000          LDRD     r1,r0,[r2,#0]         ;283
000f16  6892              LDR      r2,[r2,#8]            ;283  ; font48
000f18  e9cd0202          STRD     r0,r2,[sp,#8]         ;283
000f1c  9101              STR      r1,[sp,#4]            ;283
000f1e  f64f70ff          MOV      r0,#0xffff            ;283
000f22  f44f4378          MOV      r3,#0xf800            ;283
000f26  2200              MOVS     r2,#0                 ;283
000f28  4611              MOV      r1,r2                 ;283
000f2a  9000              STR      r0,[sp,#0]            ;283
000f2c  a050              ADR      r0,|L1.4208|
000f2e  f7fffffe          BL       lcd_show_string
                  |L1.3890|
000f32  2000              MOVS     r0,#0                 ;286
000f34  4947              LDR      r1,|L1.4180|
000f36  7008              STRB     r0,[r1,#0]            ;286
000f38  f2af2055          ADR      r0,Bill_Setup + 1
000f3c  4941              LDR      r1,|L1.4164|
000f3e  6008              STR      r0,[r1,#0]            ;287  ; billequip
000f40  f7fffffe          BL       OSTimeGet
000f44  4940              LDR      r1,|L1.4168|
000f46  6008              STR      r0,[r1,#0]            ;288  ; bill_timeout
000f48  bf00              NOP      
000f4a  e7b1              B        |L1.3760|
;;;290    
                          ENDP

                  BillValtdator_Reset PROC
;;;204    
;;;205    void BillValtdator_Reset(void) //启动纸币器的初始化
000f4c  b51f              PUSH     {r0-r4,lr}
;;;206    {
;;;207    	uint8_t err;
;;;208    	uint16_t *rx, rx_len;//接收数据指针与接收数据长度
;;;209    	rx = rx;//防止编译器报错
000f4e  bf00              NOP      
;;;210    	if((OSTimeGet()-bill_reset_time) > OS_TICKS_PER_SEC*3)//2.5秒复位一次
000f50  f7fffffe          BL       OSTimeGet
000f54  4947              LDR      r1,|L1.4212|
000f56  6809              LDR      r1,[r1,#0]  ; bill_reset_time
000f58  1a40              SUBS     r0,r0,r1
000f5a  f64031b8          MOV      r1,#0xbb8
000f5e  4288              CMP      r0,r1
000f60  d936              BLS      |L1.4048|
;;;211    	{
;;;212    		//OSSemQuery(SEM_BILL_CMD,&sem_bill_check);
;;;213    		//if(sem_bill_check.OSCnt==0)
;;;214    			//OSSemPost(SEM_BILL_CMD);
;;;215    		resetflag=0;
000f62  2000              MOVS     r0,#0
000f64  4941              LDR      r1,|L1.4204|
000f66  7008              STRB     r0,[r1,#0]
;;;216    		billequip.cmd_type=M_BS_POLL;
000f68  2004              MOVS     r0,#4
000f6a  4936              LDR      r1,|L1.4164|
000f6c  7188              STRB     r0,[r1,#6]
;;;217    		//billequip.cmd_type=M_BS_INIT;
;;;218    		bill_timeout[1]=OSTimeGet();
000f6e  f7fffffe          BL       OSTimeGet
000f72  4935              LDR      r1,|L1.4168|
000f74  6048              STR      r0,[r1,#4]  ; bill_timeout
;;;219    		bill_timeout[0]=OSTimeGet();
000f76  f7fffffe          BL       OSTimeGet
000f7a  4933              LDR      r1,|L1.4168|
000f7c  6008              STR      r0,[r1,#0]  ; bill_timeout
;;;220    		billequip.cmd_status=cmd_status_complete;
000f7e  2003              MOVS     r0,#3
000f80  4930              LDR      r1,|L1.4164|
000f82  7148              STRB     r0,[r1,#5]
;;;221    		bill_cmd[0]=BILL_RESET;
000f84  2030              MOVS     r0,#0x30
000f86  4931              LDR      r1,|L1.4172|
000f88  7008              STRB     r0,[r1,#0]
;;;222    		bill_reset_time = OSTimeGet();
000f8a  f7fffffe          BL       OSTimeGet
000f8e  4939              LDR      r1,|L1.4212|
000f90  6008              STR      r0,[r1,#0]  ; bill_reset_time
;;;223    		
;;;224    		rx = mdb_send_cmd(bill_cmd, 1, 1, BILL_NO_RESPENSE, &err, &rx_len);
000f92  a802              ADD      r0,sp,#8
000f94  a903              ADD      r1,sp,#0xc
000f96  230a              MOVS     r3,#0xa
000f98  2201              MOVS     r2,#1
000f9a  e9cd1000          STRD     r1,r0,[sp,#0]
000f9e  4611              MOV      r1,r2
000fa0  482a              LDR      r0,|L1.4172|
000fa2  f7fffffe          BL       mdb_send_cmd
000fa6  4604              MOV      r4,r0
;;;225    		
;;;226    		if(err == MDB_RECEIVE_ACK)
000fa8  f89d000c          LDRB     r0,[sp,#0xc]
000fac  2878              CMP      r0,#0x78
000fae  d10c              BNE      |L1.4042|
;;;227    		{
;;;228    			billequip.EQIU_FUNC=BillReset_Poll;
000fb0  f2af1051          ADR      r0,BillReset_Poll + 1
000fb4  4923              LDR      r1,|L1.4164|
000fb6  6008              STR      r0,[r1,#0]  ; billequip
;;;229    			bill_timeout[1] = OSTimeGet();
000fb8  f7fffffe          BL       OSTimeGet
000fbc  4922              LDR      r1,|L1.4168|
000fbe  6048              STR      r0,[r1,#4]  ; bill_timeout
;;;230    			bill_timeout[0] = OSTimeGet();
000fc0  f7fffffe          BL       OSTimeGet
000fc4  4920              LDR      r1,|L1.4168|
000fc6  6008              STR      r0,[r1,#0]  ; bill_timeout
000fc8  e002              B        |L1.4048|
                  |L1.4042|
;;;231    		}
;;;232    		else            
;;;233    		{
;;;234    			set_bill_status(0xFF);
000fca  20ff              MOVS     r0,#0xff
000fcc  f7fffffe          BL       set_bill_status
                  |L1.4048|
;;;235    		}
;;;236    	}
;;;237    }
000fd0  bd1f              POP      {r0-r4,pc}
;;;238    
                          ENDP

                  BillValtdatorInit PROC
;;;69     
;;;70     void BillValtdatorInit(void)
000fd2  b538              PUSH     {r3-r5,lr}
;;;71     {
;;;72     	uint8_t tmp[2]={1,2},err=FALSE,i=0;
000fd4  a028              ADR      r0,|L1.4216|
000fd6  6800              LDR      r0,[r0,#0]
000fd8  9000              STR      r0,[sp,#0]
000fda  2400              MOVS     r4,#0
000fdc  2500              MOVS     r5,#0
;;;73     	
;;;74     	billequip.EQIU_FUNC=BillValtdator_Reset;
000fde  f2af0093          ADR      r0,BillValtdator_Reset + 1
000fe2  4918              LDR      r1,|L1.4164|
000fe4  6008              STR      r0,[r1,#0]  ; billequip
;;;75     	billequip.cmd_status=cmd_status_complete;
000fe6  2003              MOVS     r0,#3
000fe8  7148              STRB     r0,[r1,#5]
;;;76     	billequip.eqiu_status=0xFE;
000fea  20fe              MOVS     r0,#0xfe
000fec  7108              STRB     r0,[r1,#4]
;;;77     	register_mdb_equ(&billequip);
000fee  4608              MOV      r0,r1
000ff0  f7fffffe          BL       register_mdb_equ
;;;78     	bill_reset_time = 2500;
000ff4  f64010c4          MOV      r0,#0x9c4
000ff8  491e              LDR      r1,|L1.4212|
000ffa  6008              STR      r0,[r1,#0]  ; bill_reset_time
;;;79     	SEM_BILL_CMD=OSSemCreate(1);
000ffc  2001              MOVS     r0,#1
000ffe  f7fffffe          BL       OSSemCreate
001002  491e              LDR      r1,|L1.4220|
001004  6008              STR      r0,[r1,#0]  ; SEM_BILL_CMD
;;;80     	do{//用来判断接收使能是否正确
001006  bf00              NOP      
                  |L1.4104|
;;;81     //		I2C_ReadNByte(CAT24WC256,TWO_BYTE_SUBA,BC00+BC02,tmp,BC02_LENTH);
;;;82     //		I2C_ReadNByte(CAT24WC256,TWO_BYTE_SUBA,BC00+BC02,&tmp[1],BC02_LENTH);
;;;83     		tmp[0] = tmp[1] = 0;
001008  2000              MOVS     r0,#0
00100a  f88d0001          STRB     r0,[sp,#1]
00100e  f88d0000          STRB     r0,[sp,#0]
;;;84     		if(tmp[0]==tmp[1])
001012  f89d0000          LDRB     r0,[sp,#0]
001016  f89d1001          LDRB     r1,[sp,#1]
00101a  4288              CMP      r0,r1
00101c  d104              BNE      |L1.4136|
;;;85     		{
;;;86     			billvaltdator.par_enable=tmp[0];
00101e  f89d0000          LDRB     r0,[sp,#0]
001022  4907              LDR      r1,|L1.4160|
001024  86c8              STRH     r0,[r1,#0x36]
;;;87     			err=TRUE;
001026  2401              MOVS     r4,#1
                  |L1.4136|
;;;88     		}
;;;89     	}while(err!=TRUE && i++<20);
001028  2c01              CMP      r4,#1
00102a  d004              BEQ      |L1.4150|
00102c  4628              MOV      r0,r5
00102e  1c69              ADDS     r1,r5,#1
001030  b2cd              UXTB     r5,r1
001032  2814              CMP      r0,#0x14
001034  dbe8              BLT      |L1.4104|
                  |L1.4150|
;;;90     	if(err==FALSE){//接收使能错误
001036  b90c              CBNZ     r4,|L1.4156|
;;;91     		//DisplayLT("FATAL ERR" ,6,0,0);
;;;92     		((void (*)())(0x0)) ();
001038  2000              MOVS     r0,#0
00103a  4780              BLX      r0
                  |L1.4156|
;;;93     	}
;;;94     }
00103c  bd38              POP      {r3-r5,pc}
00103e  0000              DCW      0x0000
                  |L1.4160|
                          DCD      billvaltdator
                  |L1.4164|
                          DCD      billequip
                  |L1.4168|
                          DCD      bill_timeout
                  |L1.4172|
                          DCD      bill_cmd
                  |L1.4176|
                          DCD      BillValtdator_Reset
                  |L1.4180|
                          DCD      setupCount
                  |L1.4184|
                          DCD      sysfactor
                  |L1.4188|
                          DCD      billfactor
                  |L1.4192|
                          DCD      typevalue
                  |L1.4196|
                          DCD      font48
                  |L1.4200|
001068  3800              DCB      "8",0
00106a  00                DCB      0
00106b  00                DCB      0
                  |L1.4204|
                          DCD      resetflag
                  |L1.4208|
001070  3900              DCB      "9",0
001072  00                DCB      0
001073  00                DCB      0
                  |L1.4212|
                          DCD      bill_reset_time
                  |L1.4216|
001078  010200            DCB      1,2,0
00107b  00                DCB      0
                  |L1.4220|
                          DCD      SEM_BILL_CMD
                          ENDP

                  savebillaccept PROC
;;;97     
;;;98     void savebillaccept(uint16_t num)
001080  4770              BX       lr
;;;99     {
;;;100    	//send_moneyaccept_msg(DATA_BC,num,1);//发送信息到远程管理端
;;;101    //	CA301+=num;
;;;102    //	//CA302+=num;
;;;103    //	CA304+=num;
;;;104    //	CA305+=num;
;;;105    //	//CA306+=num;
;;;106    //	CA308+=num;
;;;107    //	switch(num)
;;;108    //	{
;;;109    //		case 100:
;;;110    //		CA1402(0)++;
;;;111    //		CA1403(0)++;
;;;112    //		CA1404(0)++;
;;;113    //		CA1405(0)++;
;;;114    //		break;
;;;115    //		case 200:
;;;116    //		CA1402(1)++;
;;;117    //		CA1403(1)++;
;;;118    //		CA1404(1)++;
;;;119    //		CA1405(1)++;
;;;120    //		break;
;;;121    //		case 250:
;;;122    //		CA1402(2)++;
;;;123    //		CA1403(2)++;
;;;124    //		CA1404(2)++;
;;;125    //		CA1405(2)++;;
;;;126    //		case 500:
;;;127    //		CA1402(3)++;
;;;128    //		CA1403(3)++;
;;;129    //		CA1404(3)++;
;;;130    //		CA1405(3)++;
;;;131    //		break;
;;;132    //		case 750:
;;;133    //		CA1402(4)++;
;;;134    //		CA1403(4)++;
;;;135    //		CA1404(4)++;
;;;136    //		CA1405(4)++;
;;;137    //		case 1000:
;;;138    //		CA1402(5)++;
;;;139    //		CA1403(5)++;
;;;140    //		CA1404(5)++;
;;;141    //		CA1405(5)++;
;;;142    //		break;
;;;143    //		case 2000:
;;;144    //		CA1402(6)++;
;;;145    //		CA1403(6)++;
;;;146    //		CA1404(6)++;
;;;147    //		CA1405(6)++;
;;;148    //		break;
;;;149    //		case 5000:
;;;150    //		CA1402(7)++;
;;;151    //		CA1403(7)++;
;;;152    //		CA1404(7)++;
;;;153    //		CA1405(7)++;
;;;154    //		break;
;;;155    //		case 10000:
;;;156    //		CA1402(8)++;
;;;157    //		CA1403(8)++;
;;;158    //		CA1404(8)++;
;;;159    //		CA1405(8)++;
;;;160    //		break;
;;;161    //		default:
;;;162    //		break;
;;;163    //	}
;;;164    }
;;;165    
                          ENDP

                  Bill_Setup2 PROC
;;;358    
;;;359    void Bill_Setup2(void)
001082  e92d41ff          PUSH     {r0-r8,lr}
;;;360    {
;;;361    	uint8_t err,i;
;;;362    	uint16_t *rx, rx_len;//接收数据指针与接收数据长度
;;;363    	
;;;364    	FSMMSG *billmsg;
;;;365    	
;;;366    	bill_cmd[0]=BILL_SETUP;
001086  2031              MOVS     r0,#0x31
001088  49fd              LDR      r1,|L1.5248|
00108a  7008              STRB     r0,[r1,#0]
;;;367    	rx = mdb_send_cmd(bill_cmd,1,1,BILL_NO_RESPENSE*10, &err, &rx_len);
00108c  a802              ADD      r0,sp,#8
00108e  a903              ADD      r1,sp,#0xc
001090  2364              MOVS     r3,#0x64
001092  2201              MOVS     r2,#1
001094  e9cd1000          STRD     r1,r0,[sp,#0]
001098  4611              MOV      r1,r2
00109a  48f9              LDR      r0,|L1.5248|
00109c  f7fffffe          BL       mdb_send_cmd
0010a0  4605              MOV      r5,r0
;;;368    	if(err!=MDB_RECEIVE_DATA)
0010a2  f89d000c          LDRB     r0,[sp,#0xc]
0010a6  2879              CMP      r0,#0x79
0010a8  d011              BEQ      |L1.4302|
;;;369    	{
;;;370    		if(OSTimeGet()-bill_timeout[0]>MAX_BILL_TIMEOUT)
0010aa  f7fffffe          BL       OSTimeGet
0010ae  49f5              LDR      r1,|L1.5252|
0010b0  6809              LDR      r1,[r1,#0]  ; bill_timeout
0010b2  1a40              SUBS     r0,r0,r1
0010b4  f2417170          MOV      r1,#0x1770
0010b8  4288              CMP      r0,r1
0010ba  d906              BLS      |L1.4298|
;;;371    		{
;;;372    			billequip.EQIU_FUNC=BillValtdator_Reset;
0010bc  f2af1073          ADR      r0,BillValtdator_Reset + 1
0010c0  49f1              LDR      r1,|L1.5256|
0010c2  6008              STR      r0,[r1,#0]  ; billequip
;;;373    			set_bill_status(0xFF);
0010c4  20ff              MOVS     r0,#0xff
0010c6  f7fffffe          BL       set_bill_status
                  |L1.4298|
;;;374    		}
;;;375    		return;
;;;376    	}
;;;377    	setupCount++;
;;;378    	//对SETUP命令返回的结果的处理代码
;;;379    	billvaltdator.level=rx[0];
;;;380    	billvaltdator.BCD=rx[2]|(rx[1]<<8);
;;;381    	billvaltdator.factor=rx[4]|(rx[3]<<8);
;;;382    	billvaltdator.point=rx[5];
;;;383    	billvaltdator.recycler=0;//初始化
;;;384    	billfactor=sysfactor;
;;;385    	for(i=0;i<billvaltdator.point;i++)
;;;386    		billfactor=billfactor/10;
;;;387    	billfactor=billfactor*billvaltdator.factor;
;;;388    	billvaltdator.capacity=rx[7]|(rx[6]<<8);
;;;389    	billvaltdator.security=rx[9]|(rx[8]<<8);
;;;390    	billvaltdator.escrow=rx[10];
;;;391    	for(i=11;i<rx_len;i++)
;;;392    	{
;;;393    		billvaltdator.par_value[i-11]=rx[i];
;;;394    		if(setupCount>1)//已经读过一次面值
;;;395    		{
;;;396    			if((typevalue[i-11]+billvaltdator.par_value[i-11])!=0xFF)//如果两次读出的不符则重读
;;;397    			{
;;;398    				setupCount=0;
;;;399    				bill_timeout[0]=OSTimeGet();
;;;400    				return;
;;;401    			}
;;;402    		}
;;;403    		//币值 = 0 不用的币种
;;;404    		//币值 = 0xFF vend tokens
;;;405    		if(i>11 && billvaltdator.par_value[i-11]!=0 && billvaltdator.par_value[i-11]!=0xFF)//前后面值数据判断
;;;406    		{
;;;407    			if(billvaltdator.par_value[(i-1)-11]>billvaltdator.par_value[i-11])
;;;408    			{
;;;409    				setupCount=0;
;;;410    				bill_timeout[0]=OSTimeGet();
;;;411    				return;
;;;412    			}
;;;413    		}
;;;414    		typevalue[i-11]=(0xFF-rx[i]);//记录取反值
;;;415    	}
;;;416    	
;;;417    	if(setupCount<5)
;;;418    	{
;;;419    		bill_timeout[0]=OSTimeGet();
;;;420    		return;
;;;421    	}
;;;422    	
;;;423    	billmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;424    	assert_param(billmsg);
;;;425    	billmsg->type=MsgBILL;
;;;426    	billmsg->value=billvaltdator.par_value[chkvalue[1]]*billfactor;
;;;427    	//////////////////////////////////////////////////////////
;;;428    	/*
;;;429    	if(!(billmsg->value==100 
;;;430    	   ||billmsg->value==500
;;;431    	   ||billmsg->value==1000
;;;432    	   ||billmsg->value==2000
;;;433    	   ||billmsg->value==5000
;;;434    	   ||billmsg->value==10000))//增加对这个值得判断
;;;435    	{
;;;436    		release_fsm_msg(billmsg);
;;;437    		bill_timeout[0]=OSTimeGet();
;;;438    		warning_money_err(chkvalue[0],chkvalue[1],billvaltdator.par_value[chkvalue[1]]);
;;;439    	}*/
;;;440    	/////////////////////////////////////////////////////////
;;;441    	//else
;;;442    	{
;;;443    		if(chkvalue[0]==0)//钞箱
;;;444    		{
;;;445    			if(billequip.cmd_status==cmd_status_start)
;;;446    			{
;;;447    				billequip.cmd_status=cmd_status_complete;
;;;448    				billequip.cmd_type=M_BS_POLL;
;;;449    			}
;;;450    			credit_set(credit_get() + billmsg->value);
;;;451    			billmsg->stype=M_BS_ABOX;
;;;452    			billvaltdator.escvalue=0;
;;;453    		}
;;;454    		else
;;;455    		if(chkvalue[0]==1)//暂存箱
;;;456    		{
;;;457    			billmsg->stype=M_BS_AESC;
;;;458    			billvaltdator.escvalue=billmsg->value;
;;;459    		}
;;;460    		else
;;;461    		if(chkvalue[0]==2)//纸币退出
;;;462    		{
;;;463    			if(billequip.cmd_status==cmd_status_start)
;;;464    			{
;;;465    				billequip.cmd_status=cmd_status_complete;
;;;466    				billequip.cmd_type=M_BS_POLL;
;;;467    			}
;;;468    			billmsg->stype=M_BS_AOUT;
;;;469    			billvaltdator.escvalue=0;
;;;470    		}
;;;471    		else
;;;472    		if(chkvalue[0]==3)//找零箱
;;;473    		{
;;;474    			if(billequip.cmd_status==cmd_status_start)
;;;475    			{
;;;476    				billequip.cmd_type=M_BS_POLL;
;;;477    				billequip.cmd_status=cmd_status_complete;
;;;478    			}
;;;479    		}
;;;480    		else
;;;481    		if(chkvalue[0]==4)//不允许接收的纸币类型(可能是禁能了)
;;;482    		{
;;;483    			billmsg->stype=M_BS_DISTYPE;
;;;484    			billvaltdator.escvalue=0;
;;;485    		}
;;;486    		else
;;;487    		if(chkvalue[0]==5)//人工放入找零箱
;;;488    		{
;;;489    			
;;;490    		
;;;491    		}
;;;492    		else
;;;493    		if(chkvalue[0]==6)//人工找零
;;;494    		{
;;;495    			
;;;496    		
;;;497    		}
;;;498    		else
;;;499    		if(chkvalue[0]==7)//从找零箱到钞箱
;;;500    		{
;;;501    			credit_set(credit_get() + billmsg->value);
;;;502    		}	
;;;503    		if(send_fsm_msg(billmsg)!=TRUE)
;;;504    			release_fsm_msg(billmsg);
;;;505    	}
;;;506    	billequip.EQIU_FUNC=Bill_Poll_CMD;
;;;507    	bill_timeout[0]=OSTimeGet();
;;;508    }
0010ca  e8bd81ff          POP      {r0-r8,pc}
                  |L1.4302|
0010ce  48ef              LDR      r0,|L1.5260|
0010d0  7800              LDRB     r0,[r0,#0]            ;377  ; setupCount
0010d2  1c40              ADDS     r0,r0,#1              ;377
0010d4  49ed              LDR      r1,|L1.5260|
0010d6  7008              STRB     r0,[r1,#0]            ;377
0010d8  7828              LDRB     r0,[r5,#0]            ;379
0010da  49ed              LDR      r1,|L1.5264|
0010dc  7008              STRB     r0,[r1,#0]            ;379
0010de  88a8              LDRH     r0,[r5,#4]            ;380
0010e0  78a9              LDRB     r1,[r5,#2]            ;380
0010e2  ea402001          ORR      r0,r0,r1,LSL #8       ;380
0010e6  49ea              LDR      r1,|L1.5264|
0010e8  8048              STRH     r0,[r1,#2]            ;380
0010ea  8928              LDRH     r0,[r5,#8]            ;381
0010ec  79a9              LDRB     r1,[r5,#6]            ;381
0010ee  ea402001          ORR      r0,r0,r1,LSL #8       ;381
0010f2  49e7              LDR      r1,|L1.5264|
0010f4  8088              STRH     r0,[r1,#4]            ;381
0010f6  7aa8              LDRB     r0,[r5,#0xa]          ;382
0010f8  7188              STRB     r0,[r1,#6]            ;382
0010fa  2000              MOVS     r0,#0                 ;383
0010fc  f8810038          STRB     r0,[r1,#0x38]         ;383
001100  48e4              LDR      r0,|L1.5268|
001102  6800              LDR      r0,[r0,#0]            ;384  ; sysfactor
001104  49e4              LDR      r1,|L1.5272|
001106  6008              STR      r0,[r1,#0]            ;384  ; billfactor
001108  2400              MOVS     r4,#0                 ;385
00110a  e008              B        |L1.4382|
                  |L1.4364|
00110c  48e2              LDR      r0,|L1.5272|
00110e  6800              LDR      r0,[r0,#0]            ;386  ; billfactor
001110  210a              MOVS     r1,#0xa               ;386
001112  fbb0f0f1          UDIV     r0,r0,r1              ;386
001116  49e0              LDR      r1,|L1.5272|
001118  6008              STR      r0,[r1,#0]            ;386  ; billfactor
00111a  1c60              ADDS     r0,r4,#1              ;385
00111c  b2c4              UXTB     r4,r0                 ;385
                  |L1.4382|
00111e  48dc              LDR      r0,|L1.5264|
001120  7980              LDRB     r0,[r0,#6]            ;385  ; billvaltdator
001122  42a0              CMP      r0,r4                 ;385
001124  dcf2              BGT      |L1.4364|
001126  48da              LDR      r0,|L1.5264|
001128  8880              LDRH     r0,[r0,#4]            ;387  ; billvaltdator
00112a  49db              LDR      r1,|L1.5272|
00112c  6809              LDR      r1,[r1,#0]            ;387  ; billfactor
00112e  4348              MULS     r0,r1,r0              ;387
001130  49d9              LDR      r1,|L1.5272|
001132  6008              STR      r0,[r1,#0]            ;387  ; billfactor
001134  89e8              LDRH     r0,[r5,#0xe]          ;388
001136  7b29              LDRB     r1,[r5,#0xc]          ;388
001138  ea402001          ORR      r0,r0,r1,LSL #8       ;388
00113c  49d4              LDR      r1,|L1.5264|
00113e  8108              STRH     r0,[r1,#8]            ;388
001140  8a68              LDRH     r0,[r5,#0x12]         ;389
001142  7c29              LDRB     r1,[r5,#0x10]         ;389
001144  ea402001          ORR      r0,r0,r1,LSL #8       ;389
001148  49d1              LDR      r1,|L1.5264|
00114a  8148              STRH     r0,[r1,#0xa]          ;389
00114c  7d28              LDRB     r0,[r5,#0x14]         ;390
00114e  7308              STRB     r0,[r1,#0xc]          ;390
001150  240b              MOVS     r4,#0xb               ;391
001152  e043              B        |L1.4572|
                  |L1.4436|
001154  f8152014          LDRB     r2,[r5,r4,LSL #1]     ;393
001158  f1a4000b          SUB      r0,r4,#0xb            ;393
00115c  49cc              LDR      r1,|L1.5264|
00115e  310d              ADDS     r1,r1,#0xd            ;393
001160  540a              STRB     r2,[r1,r0]            ;393
001162  48ca              LDR      r0,|L1.5260|
001164  7800              LDRB     r0,[r0,#0]            ;394  ; setupCount
001166  2801              CMP      r0,#1                 ;394
001168  dd11              BLE      |L1.4494|
00116a  f1a4000b          SUB      r0,r4,#0xb            ;396
00116e  49cb              LDR      r1,|L1.5276|
001170  5c0a              LDRB     r2,[r1,r0]            ;396
001172  49c7              LDR      r1,|L1.5264|
001174  310d              ADDS     r1,r1,#0xd            ;396
001176  5c08              LDRB     r0,[r1,r0]            ;396
001178  4410              ADD      r0,r0,r2              ;396
00117a  28ff              CMP      r0,#0xff              ;396
00117c  d007              BEQ      |L1.4494|
00117e  2000              MOVS     r0,#0                 ;398
001180  49c2              LDR      r1,|L1.5260|
001182  7008              STRB     r0,[r1,#0]            ;398
001184  f7fffffe          BL       OSTimeGet
001188  49be              LDR      r1,|L1.5252|
00118a  6008              STR      r0,[r1,#0]            ;399  ; bill_timeout
00118c  e79d              B        |L1.4298|
                  |L1.4494|
00118e  2c0b              CMP      r4,#0xb               ;405
001190  dd19              BLE      |L1.4550|
001192  f1a4000b          SUB      r0,r4,#0xb            ;405
001196  49be              LDR      r1,|L1.5264|
001198  310d              ADDS     r1,r1,#0xd            ;405
00119a  5c08              LDRB     r0,[r1,r0]            ;405
00119c  b198              CBZ      r0,|L1.4550|
00119e  f1a4000b          SUB      r0,r4,#0xb            ;405
0011a2  5c08              LDRB     r0,[r1,r0]            ;405
0011a4  28ff              CMP      r0,#0xff              ;405
0011a6  d00e              BEQ      |L1.4550|
0011a8  f1a4000c          SUB      r0,r4,#0xc            ;407
0011ac  5c0a              LDRB     r2,[r1,r0]            ;407
0011ae  1c40              ADDS     r0,r0,#1              ;407
0011b0  5c08              LDRB     r0,[r1,r0]            ;407
0011b2  4282              CMP      r2,r0                 ;407
0011b4  dd07              BLE      |L1.4550|
0011b6  2000              MOVS     r0,#0                 ;409
0011b8  49b4              LDR      r1,|L1.5260|
0011ba  7008              STRB     r0,[r1,#0]            ;409
0011bc  f7fffffe          BL       OSTimeGet
0011c0  49b0              LDR      r1,|L1.5252|
0011c2  6008              STR      r0,[r1,#0]            ;410  ; bill_timeout
0011c4  e781              B        |L1.4298|
                  |L1.4550|
0011c6  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;414
0011ca  f1c000ff          RSB      r0,r0,#0xff           ;414
0011ce  b2c1              UXTB     r1,r0                 ;414
0011d0  f1a4000b          SUB      r0,r4,#0xb            ;414
0011d4  4ab1              LDR      r2,|L1.5276|
0011d6  5411              STRB     r1,[r2,r0]            ;414
0011d8  1c60              ADDS     r0,r4,#1              ;391
0011da  b2c4              UXTB     r4,r0                 ;391
                  |L1.4572|
0011dc  f8bd0008          LDRH     r0,[sp,#8]            ;391
0011e0  4284              CMP      r4,r0                 ;391
0011e2  dbb7              BLT      |L1.4436|
0011e4  48a9              LDR      r0,|L1.5260|
0011e6  7800              LDRB     r0,[r0,#0]            ;417  ; setupCount
0011e8  2805              CMP      r0,#5                 ;417
0011ea  da04              BGE      |L1.4598|
0011ec  f7fffffe          BL       OSTimeGet
0011f0  49a4              LDR      r1,|L1.5252|
0011f2  6008              STR      r0,[r1,#0]            ;419  ; bill_timeout
0011f4  e769              B        |L1.4298|
                  |L1.4598|
0011f6  2000              MOVS     r0,#0                 ;423
0011f8  f7fffffe          BL       apply_fsm_msg
0011fc  4606              MOV      r6,r0                 ;423
0011fe  2003              MOVS     r0,#3                 ;425
001200  7030              STRB     r0,[r6,#0]            ;425
001202  48a7              LDR      r0,|L1.5280|
001204  7841              LDRB     r1,[r0,#1]            ;426  ; chkvalue
001206  48a2              LDR      r0,|L1.5264|
001208  300d              ADDS     r0,r0,#0xd            ;426
00120a  5c40              LDRB     r0,[r0,r1]            ;426
00120c  49a2              LDR      r1,|L1.5272|
00120e  6809              LDR      r1,[r1,#0]            ;426  ; billfactor
001210  4348              MULS     r0,r1,r0              ;426
001212  6070              STR      r0,[r6,#4]            ;426
001214  48a2              LDR      r0,|L1.5280|
001216  7800              LDRB     r0,[r0,#0]            ;443  ; chkvalue
001218  b9a0              CBNZ     r0,|L1.4676|
00121a  489b              LDR      r0,|L1.5256|
00121c  7940              LDRB     r0,[r0,#5]            ;445  ; billequip
00121e  2801              CMP      r0,#1                 ;445
001220  d104              BNE      |L1.4652|
001222  2003              MOVS     r0,#3                 ;447
001224  4998              LDR      r1,|L1.5256|
001226  7148              STRB     r0,[r1,#5]            ;447
001228  2004              MOVS     r0,#4                 ;448
00122a  7188              STRB     r0,[r1,#6]            ;448
                  |L1.4652|
00122c  f7fffffe          BL       credit_get
001230  6871              LDR      r1,[r6,#4]            ;450
001232  1847              ADDS     r7,r0,r1              ;450
001234  4638              MOV      r0,r7                 ;450
001236  f7fffffe          BL       credit_set
00123a  2000              MOVS     r0,#0                 ;451
00123c  7070              STRB     r0,[r6,#1]            ;451
00123e  4994              LDR      r1,|L1.5264|
001240  8408              STRH     r0,[r1,#0x20]         ;452
001242  e046              B        |L1.4818|
                  |L1.4676|
001244  4896              LDR      r0,|L1.5280|
001246  7800              LDRB     r0,[r0,#0]            ;455  ; chkvalue
001248  2801              CMP      r0,#1                 ;455
00124a  d104              BNE      |L1.4694|
00124c  7070              STRB     r0,[r6,#1]            ;457
00124e  88b0              LDRH     r0,[r6,#4]            ;458
001250  498f              LDR      r1,|L1.5264|
001252  8408              STRH     r0,[r1,#0x20]         ;458
001254  e03d              B        |L1.4818|
                  |L1.4694|
001256  4892              LDR      r0,|L1.5280|
001258  7800              LDRB     r0,[r0,#0]            ;461  ; chkvalue
00125a  2802              CMP      r0,#2                 ;461
00125c  d10e              BNE      |L1.4732|
00125e  488a              LDR      r0,|L1.5256|
001260  7940              LDRB     r0,[r0,#5]            ;463  ; billequip
001262  2801              CMP      r0,#1                 ;463
001264  d104              BNE      |L1.4720|
001266  2003              MOVS     r0,#3                 ;465
001268  4987              LDR      r1,|L1.5256|
00126a  7148              STRB     r0,[r1,#5]            ;465
00126c  2004              MOVS     r0,#4                 ;466
00126e  7188              STRB     r0,[r1,#6]            ;466
                  |L1.4720|
001270  2008              MOVS     r0,#8                 ;468
001272  7070              STRB     r0,[r6,#1]            ;468
001274  2000              MOVS     r0,#0                 ;469
001276  4986              LDR      r1,|L1.5264|
001278  8408              STRH     r0,[r1,#0x20]         ;469
00127a  e02a              B        |L1.4818|
                  |L1.4732|
00127c  4888              LDR      r0,|L1.5280|
00127e  7800              LDRB     r0,[r0,#0]            ;472  ; chkvalue
001280  2803              CMP      r0,#3                 ;472
001282  d109              BNE      |L1.4760|
001284  4880              LDR      r0,|L1.5256|
001286  7940              LDRB     r0,[r0,#5]            ;474  ; billequip
001288  2801              CMP      r0,#1                 ;474
00128a  d122              BNE      |L1.4818|
00128c  2004              MOVS     r0,#4                 ;476
00128e  497e              LDR      r1,|L1.5256|
001290  7188              STRB     r0,[r1,#6]            ;476
001292  2003              MOVS     r0,#3                 ;477
001294  7148              STRB     r0,[r1,#5]            ;477
001296  e01c              B        |L1.4818|
                  |L1.4760|
001298  4881              LDR      r0,|L1.5280|
00129a  7800              LDRB     r0,[r0,#0]            ;481  ; chkvalue
00129c  2804              CMP      r0,#4                 ;481
00129e  d105              BNE      |L1.4780|
0012a0  200a              MOVS     r0,#0xa               ;483
0012a2  7070              STRB     r0,[r6,#1]            ;483
0012a4  2000              MOVS     r0,#0                 ;484
0012a6  497a              LDR      r1,|L1.5264|
0012a8  8408              STRH     r0,[r1,#0x20]         ;484
0012aa  e012              B        |L1.4818|
                  |L1.4780|
0012ac  487c              LDR      r0,|L1.5280|
0012ae  7800              LDRB     r0,[r0,#0]            ;487  ; chkvalue
0012b0  2805              CMP      r0,#5                 ;487
0012b2  d00e              BEQ      |L1.4818|
0012b4  487a              LDR      r0,|L1.5280|
0012b6  7800              LDRB     r0,[r0,#0]            ;493  ; chkvalue
0012b8  2806              CMP      r0,#6                 ;493
0012ba  d00a              BEQ      |L1.4818|
0012bc  4878              LDR      r0,|L1.5280|
0012be  7800              LDRB     r0,[r0,#0]            ;499  ; chkvalue
0012c0  2807              CMP      r0,#7                 ;499
0012c2  d106              BNE      |L1.4818|
0012c4  f7fffffe          BL       credit_get
0012c8  6871              LDR      r1,[r6,#4]            ;501
0012ca  1847              ADDS     r7,r0,r1              ;501
0012cc  4638              MOV      r0,r7                 ;501
0012ce  f7fffffe          BL       credit_set
                  |L1.4818|
0012d2  4630              MOV      r0,r6                 ;503
0012d4  f7fffffe          BL       send_fsm_msg
0012d8  2801              CMP      r0,#1                 ;503
0012da  d002              BEQ      |L1.4834|
0012dc  4630              MOV      r0,r6                 ;504
0012de  f7fffffe          BL       release_fsm_msg
                  |L1.4834|
0012e2  f6af50c9          ADR      r0,Bill_Poll_CMD + 1
0012e6  4968              LDR      r1,|L1.5256|
0012e8  6008              STR      r0,[r1,#0]            ;506  ; billequip
0012ea  f7fffffe          BL       OSTimeGet
0012ee  4965              LDR      r1,|L1.5252|
0012f0  6008              STR      r0,[r1,#0]            ;507  ; bill_timeout
0012f2  bf00              NOP      
0012f4  e6e9              B        |L1.4298|
;;;509    
                          ENDP

                  Dispen_Bill PROC
;;;918    }
;;;919    uint8_t Dispen_Bill(uint32_t money){//判断是否有零钱可找
0012f6  b510              PUSH     {r4,lr}
0012f8  4602              MOV      r2,r0
;;;920    	uint8_t i,type;
;;;921    	if(billequip.eqiu_status>1)
0012fa  4863              LDR      r0,|L1.5256|
0012fc  7900              LDRB     r0,[r0,#4]  ; billequip
0012fe  2801              CMP      r0,#1
001300  dd01              BLE      |L1.4870|
;;;922    		return 2;
001302  2002              MOVS     r0,#2
                  |L1.4868|
;;;923    	if(money==0)
;;;924    		return TRUE;
;;;925    	money/=billfactor;
;;;926    	type=15;
;;;927    	for(i=0;i<16;i++){
;;;928    		if(money<billvaltdator.par_value[type] || billvaltdator.disParNum[type]==0 || ((billvaltdator.recypath>>i) & 0x01) ==0 )
;;;929    			type--;
;;;930    		else//前面函数已经判断过可找,此处直接找零
;;;931    			break;
;;;932    	}
;;;933    	if(type==0)//没找到可找金额
;;;934    		return FALSE;
;;;935    	bill_cmd3[0]=BILL_EXP;
;;;936    	bill_cmd3[1]=0x06;
;;;937    	bill_cmd3[2]=type;
;;;938    	bill_cmd3[3]=0;
;;;939    	bill_cmd3[4]=1;//一次只找一张
;;;940    	billequip.cmd_type=M_BS_PAYOUT;
;;;941    	billequip.cmd_status=cmd_status_need;
;;;942    	return TRUE;
;;;943    }
001304  bd10              POP      {r4,pc}
                  |L1.4870|
001306  b90a              CBNZ     r2,|L1.4876|
001308  2001              MOVS     r0,#1                 ;924
00130a  e7fb              B        |L1.4868|
                  |L1.4876|
00130c  4862              LDR      r0,|L1.5272|
00130e  6800              LDR      r0,[r0,#0]            ;925  ; billfactor
001310  fbb2f2f0          UDIV     r2,r2,r0              ;925
001314  210f              MOVS     r1,#0xf               ;926
001316  2300              MOVS     r3,#0                 ;927
001318  e015              B        |L1.4934|
                  |L1.4890|
00131a  485d              LDR      r0,|L1.5264|
00131c  300d              ADDS     r0,r0,#0xd            ;928
00131e  5c40              LDRB     r0,[r0,r1]            ;928
001320  4290              CMP      r0,r2                 ;928
001322  d80a              BHI      |L1.4922|
001324  485a              LDR      r0,|L1.5264|
001326  3060              ADDS     r0,r0,#0x60           ;928
001328  5c40              LDRB     r0,[r0,r1]            ;928
00132a  b130              CBZ      r0,|L1.4922|
00132c  4858              LDR      r0,|L1.5264|
00132e  f8b00072          LDRH     r0,[r0,#0x72]         ;928  ; billvaltdator
001332  4118              ASRS     r0,r0,r3              ;928
001334  f0000001          AND      r0,r0,#1              ;928
001338  b910              CBNZ     r0,|L1.4928|
                  |L1.4922|
00133a  1e48              SUBS     r0,r1,#1              ;929
00133c  b2c1              UXTB     r1,r0                 ;929
00133e  e000              B        |L1.4930|
                  |L1.4928|
001340  e003              B        |L1.4938|
                  |L1.4930|
001342  1c58              ADDS     r0,r3,#1              ;927
001344  b2c3              UXTB     r3,r0                 ;927
                  |L1.4934|
001346  2b10              CMP      r3,#0x10              ;927
001348  dbe7              BLT      |L1.4890|
                  |L1.4938|
00134a  bf00              NOP                            ;931
00134c  b909              CBNZ     r1,|L1.4946|
00134e  2000              MOVS     r0,#0                 ;934
001350  e7d8              B        |L1.4868|
                  |L1.4946|
001352  2037              MOVS     r0,#0x37              ;935
001354  4c53              LDR      r4,|L1.5284|
001356  7020              STRB     r0,[r4,#0]            ;935
001358  2006              MOVS     r0,#6                 ;936
00135a  7060              STRB     r0,[r4,#1]            ;936
00135c  4620              MOV      r0,r4                 ;937
00135e  7081              STRB     r1,[r0,#2]            ;937
001360  2000              MOVS     r0,#0                 ;938
001362  70e0              STRB     r0,[r4,#3]            ;938
001364  2001              MOVS     r0,#1                 ;939
001366  7120              STRB     r0,[r4,#4]            ;939
001368  200c              MOVS     r0,#0xc               ;940
00136a  4c47              LDR      r4,|L1.5256|
00136c  71a0              STRB     r0,[r4,#6]            ;940
00136e  2000              MOVS     r0,#0                 ;941
001370  7160              STRB     r0,[r4,#5]            ;941
001372  2001              MOVS     r0,#1                 ;942
001374  e7c6              B        |L1.4868|
;;;944    uint8_t Check_Dispen_Bill(uint32_t money,uint32_t* jackson){//判断是否有零钱可找
                          ENDP

                  Check_Dispen_Bill PROC
001376  b5f0              PUSH     {r4-r7,lr}
001378  4602              MOV      r2,r0
00137a  460d              MOV      r5,r1
;;;945    	uint8_t type;
;;;946    	uint32_t mm,num,amount;
;;;947    	if(billvaltdator.recycler!=1)
00137c  4844              LDR      r0,|L1.5264|
00137e  f8900038          LDRB     r0,[r0,#0x38]  ; billvaltdator
001382  2801              CMP      r0,#1
001384  d001              BEQ      |L1.5002|
;;;948    		return FALSE;
001386  2000              MOVS     r0,#0
                  |L1.5000|
;;;949    	if(money==0)
;;;950    		return TRUE;
;;;951    	if(billequip.eqiu_status>1)
;;;952    		return 2;
;;;953    	if(billvaltdator.alldisvalue==0)
;;;954    		return 3;//这种可能是没来得急重新查找零箱
;;;955    	money=money/billfactor;
;;;956    	mm=money;
;;;957    	amount=money*billfactor;//可能找零金额
;;;958    	if(amount==0)
;;;959    		return FALSE;
;;;960    	type=16;
;;;961    	while(type>0 && money>0)
;;;962    	{
;;;963    		if(money<billvaltdator.par_value[type-1] \
;;;964    		|| billvaltdator.disParNum[type-1]==0 \
;;;965    		|| ((billvaltdator.recypath>>(16-type))&0x01) == 0)
;;;966    			type--;
;;;967    		else
;;;968    		{
;;;969    			num=money/billvaltdator.par_value[type-1];
;;;970    			if(num>billvaltdator.disParNum[type-1])
;;;971    				num=billvaltdator.disParNum[type-1];
;;;972    			money-=billvaltdator.par_value[type-1]*num;
;;;973    			type--;
;;;974    		}
;;;975    	}
;;;976    	if(type==0 && mm==money)//找到最后且金额没有变化
;;;977    		return FALSE;
;;;978    	*jackson=amount-(money*billfactor);//实际可找零金额
;;;979    	return TRUE;
;;;980    }
001388  bdf0              POP      {r4-r7,pc}
                  |L1.5002|
00138a  b90a              CBNZ     r2,|L1.5008|
00138c  2001              MOVS     r0,#1                 ;950
00138e  e7fb              B        |L1.5000|
                  |L1.5008|
001390  483d              LDR      r0,|L1.5256|
001392  7900              LDRB     r0,[r0,#4]            ;951  ; billequip
001394  2801              CMP      r0,#1                 ;951
001396  dd01              BLE      |L1.5020|
001398  2002              MOVS     r0,#2                 ;952
00139a  e7f5              B        |L1.5000|
                  |L1.5020|
00139c  483c              LDR      r0,|L1.5264|
00139e  6bc0              LDR      r0,[r0,#0x3c]         ;953  ; billvaltdator
0013a0  b908              CBNZ     r0,|L1.5030|
0013a2  2003              MOVS     r0,#3                 ;954
0013a4  e7f0              B        |L1.5000|
                  |L1.5030|
0013a6  483c              LDR      r0,|L1.5272|
0013a8  6800              LDR      r0,[r0,#0]            ;955  ; billfactor
0013aa  fbb2f2f0          UDIV     r2,r2,r0              ;955
0013ae  4613              MOV      r3,r2                 ;956
0013b0  4839              LDR      r0,|L1.5272|
0013b2  6800              LDR      r0,[r0,#0]            ;957  ; billfactor
0013b4  fb02f400          MUL      r4,r2,r0              ;957
0013b8  b90c              CBNZ     r4,|L1.5054|
0013ba  2000              MOVS     r0,#0                 ;959
0013bc  e7e4              B        |L1.5000|
                  |L1.5054|
0013be  2110              MOVS     r1,#0x10              ;960
0013c0  e02a              B        |L1.5144|
                  |L1.5058|
0013c2  1e48              SUBS     r0,r1,#1              ;963
0013c4  4f32              LDR      r7,|L1.5264|
0013c6  370d              ADDS     r7,r7,#0xd            ;963
0013c8  5c38              LDRB     r0,[r7,r0]            ;963
0013ca  4290              CMP      r0,r2                 ;963
0013cc  d80c              BHI      |L1.5096|
0013ce  1e48              SUBS     r0,r1,#1              ;964
0013d0  3753              ADDS     r7,r7,#0x53           ;964
0013d2  5c38              LDRB     r0,[r7,r0]            ;964
0013d4  b140              CBZ      r0,|L1.5096|
0013d6  482e              LDR      r0,|L1.5264|
0013d8  f8b00072          LDRH     r0,[r0,#0x72]         ;965  ; billvaltdator
0013dc  f1c10710          RSB      r7,r1,#0x10           ;965
0013e0  4138              ASRS     r0,r0,r7              ;965
0013e2  f0000001          AND      r0,r0,#1              ;965
0013e6  b910              CBNZ     r0,|L1.5102|
                  |L1.5096|
0013e8  1e48              SUBS     r0,r1,#1              ;966
0013ea  b2c1              UXTB     r1,r0                 ;966
0013ec  e014              B        |L1.5144|
                  |L1.5102|
0013ee  1e48              SUBS     r0,r1,#1              ;969
0013f0  4f27              LDR      r7,|L1.5264|
0013f2  370d              ADDS     r7,r7,#0xd            ;969
0013f4  5c38              LDRB     r0,[r7,r0]            ;969
0013f6  fbb2f6f0          UDIV     r6,r2,r0              ;969
0013fa  1e48              SUBS     r0,r1,#1              ;970
0013fc  3753              ADDS     r7,r7,#0x53           ;970
0013fe  5c38              LDRB     r0,[r7,r0]            ;970
001400  42b0              CMP      r0,r6                 ;970
001402  d201              BCS      |L1.5128|
001404  1e48              SUBS     r0,r1,#1              ;971
001406  5c3e              LDRB     r6,[r7,r0]            ;971
                  |L1.5128|
001408  1e48              SUBS     r0,r1,#1              ;972
00140a  4f21              LDR      r7,|L1.5264|
00140c  370d              ADDS     r7,r7,#0xd            ;972
00140e  5c38              LDRB     r0,[r7,r0]            ;972
001410  fb002216          MLS      r2,r0,r6,r2           ;972
001414  1e48              SUBS     r0,r1,#1              ;973
001416  b2c1              UXTB     r1,r0                 ;973
                  |L1.5144|
001418  2900              CMP      r1,#0                 ;961
00141a  dd01              BLE      |L1.5152|
00141c  2a00              CMP      r2,#0                 ;961
00141e  d1d0              BNE      |L1.5058|
                  |L1.5152|
001420  b919              CBNZ     r1,|L1.5162|
001422  4293              CMP      r3,r2                 ;976
001424  d101              BNE      |L1.5162|
001426  2000              MOVS     r0,#0                 ;977
001428  e7ae              B        |L1.5000|
                  |L1.5162|
00142a  481b              LDR      r0,|L1.5272|
00142c  6800              LDR      r0,[r0,#0]            ;978  ; billfactor
00142e  fb024010          MLS      r0,r2,r0,r4           ;978
001432  6028              STR      r0,[r5,#0]            ;978
001434  2001              MOVS     r0,#1                 ;979
001436  e7a7              B        |L1.5000|
;;;981    uint8_t get_dis_money(uint32_t *money,uint32_t *num,uint32_t *type){//隔离驱动层与业务层
                          ENDP

                  get_dis_money PROC
001438  b530              PUSH     {r4,r5,lr}
00143a  4603              MOV      r3,r0
00143c  460c              MOV      r4,r1
;;;982    						//参数1.可找总金额
;;;983    						//参数2.可找总张数
;;;984    						//参数3.可找类型											
;;;985    	uint8_t i;
;;;986    	if(billvaltdator.recycler!=1)
00143e  4814              LDR      r0,|L1.5264|
001440  f8900038          LDRB     r0,[r0,#0x38]  ; billvaltdator
001444  2801              CMP      r0,#1
001446  d001              BEQ      |L1.5196|
;;;987    		return FALSE;
001448  2000              MOVS     r0,#0
                  |L1.5194|
;;;988    	if(billequip.eqiu_status>1)
;;;989    		return 2;
;;;990    	*money=billvaltdator.alldisvalue;//找零箱金额
;;;991    	for(i=0;i<16;i++){
;;;992    		if(((billvaltdator.recypath>>i)&0x0001) != 0){//找币种
;;;993    			*type=billvaltdator.par_value[i]*billfactor;
;;;994    			break;//这里目前是只找一种纸币,如果多种则此处不退出
;;;995    		}
;;;996    	}
;;;997    	for(i=0;i<16;i++){
;;;998    		if(billvaltdator.par_value[i]!=0 && billvaltdator.disParNum[i]!=0){//找数量
;;;999    			*num=billvaltdator.disParNum[i];
;;;1000   			break;//这里目前是只找一种纸币,如果多种则此处不退出
;;;1001   		}
;;;1002   	}
;;;1003   	return TRUE;
;;;1004   }
00144a  bd30              POP      {r4,r5,pc}
                  |L1.5196|
00144c  480e              LDR      r0,|L1.5256|
00144e  7900              LDRB     r0,[r0,#4]            ;988  ; billequip
001450  2801              CMP      r0,#1                 ;988
001452  dd01              BLE      |L1.5208|
001454  2002              MOVS     r0,#2                 ;989
001456  e7f8              B        |L1.5194|
                  |L1.5208|
001458  480d              LDR      r0,|L1.5264|
00145a  6bc0              LDR      r0,[r0,#0x3c]         ;990  ; billvaltdator
00145c  6018              STR      r0,[r3,#0]            ;990
00145e  2100              MOVS     r1,#0                 ;991
001460  e024              B        |L1.5292|
                  |L1.5218|
001462  480b              LDR      r0,|L1.5264|
001464  f8b00072          LDRH     r0,[r0,#0x72]         ;992  ; billvaltdator
001468  4108              ASRS     r0,r0,r1              ;992
00146a  f0000001          AND      r0,r0,#1              ;992
00146e  b1d8              CBZ      r0,|L1.5288|
001470  4807              LDR      r0,|L1.5264|
001472  300d              ADDS     r0,r0,#0xd            ;993
001474  5c40              LDRB     r0,[r0,r1]            ;993
001476  4d08              LDR      r5,|L1.5272|
001478  682d              LDR      r5,[r5,#0]            ;993  ; billfactor
00147a  4368              MULS     r0,r5,r0              ;993
00147c  6010              STR      r0,[r2,#0]            ;993
00147e  e017              B        |L1.5296|
                  |L1.5248|
                          DCD      bill_cmd
                  |L1.5252|
                          DCD      bill_timeout
                  |L1.5256|
                          DCD      billequip
                  |L1.5260|
                          DCD      setupCount
                  |L1.5264|
                          DCD      billvaltdator
                  |L1.5268|
                          DCD      sysfactor
                  |L1.5272|
                          DCD      billfactor
                  |L1.5276|
                          DCD      typevalue
                  |L1.5280|
                          DCD      chkvalue
                  |L1.5284|
                          DCD      bill_cmd3
                  |L1.5288|
0014a8  1c48              ADDS     r0,r1,#1              ;991
0014aa  b2c1              UXTB     r1,r0                 ;991
                  |L1.5292|
0014ac  2910              CMP      r1,#0x10              ;991
0014ae  dbd8              BLT      |L1.5218|
                  |L1.5296|
0014b0  bf00              NOP                            ;994
0014b2  2100              MOVS     r1,#0                 ;997
0014b4  e00d              B        |L1.5330|
                  |L1.5302|
0014b6  4832              LDR      r0,|L1.5504|
0014b8  5c40              LDRB     r0,[r0,r1]            ;998
0014ba  b140              CBZ      r0,|L1.5326|
0014bc  4830              LDR      r0,|L1.5504|
0014be  3053              ADDS     r0,r0,#0x53           ;998
0014c0  5c40              LDRB     r0,[r0,r1]            ;998
0014c2  b120              CBZ      r0,|L1.5326|
0014c4  482e              LDR      r0,|L1.5504|
0014c6  3053              ADDS     r0,r0,#0x53           ;999
0014c8  5c40              LDRB     r0,[r0,r1]            ;999
0014ca  6020              STR      r0,[r4,#0]            ;999
0014cc  e003              B        |L1.5334|
                  |L1.5326|
0014ce  1c48              ADDS     r0,r1,#1              ;997
0014d0  b2c1              UXTB     r1,r0                 ;997
                  |L1.5330|
0014d2  2910              CMP      r1,#0x10              ;997
0014d4  dbef              BLT      |L1.5302|
                  |L1.5334|
0014d6  bf00              NOP                            ;1000
0014d8  2001              MOVS     r0,#1                 ;1003
0014da  e7b6              B        |L1.5194|
;;;1005   uint8_t exit_bill_onlyone(void){//找零函数,只用于有一个找零箱的情况
                          ENDP

                  exit_bill_onlyone PROC
0014dc  4829              LDR      r0,|L1.5508|
;;;1006   	uint8_t i,type;
;;;1007   	if(billequip.eqiu_status>1)
0014de  7900              LDRB     r0,[r0,#4]  ; billequip
0014e0  2801              CMP      r0,#1
0014e2  dd01              BLE      |L1.5352|
;;;1008   		return 2;
0014e4  2002              MOVS     r0,#2
                  |L1.5350|
;;;1009   	if(billvaltdator.alldisvalue==0)
;;;1010   		return 3;//这种可能是没来得急重新查找零箱
;;;1011   	type=15;
;;;1012   	for(i=0;i<16;i++){
;;;1013   		if(billvaltdator.disParNum[type]==0 \
;;;1014   		|| ((billvaltdator.recypath>>i)&0x01) == 0 )
;;;1015   			type--;
;;;1016   		else
;;;1017   			break;
;;;1018   	}
;;;1019   	if(type==0)//没找到可找金额
;;;1020   		return FALSE;
;;;1021   	bill_cmd3[0]=BILL_EXP;
;;;1022   	bill_cmd3[1]=0x06;
;;;1023   	bill_cmd3[2]=type;
;;;1024   	bill_cmd3[3]=0;
;;;1025   	bill_cmd3[4]=1;//一次只找一张
;;;1026   	billequip.cmd_type=M_BS_PAYOUT;
;;;1027   	billequip.cmd_status=cmd_status_need;
;;;1028   	return TRUE;
;;;1029   }
0014e6  4770              BX       lr
                  |L1.5352|
0014e8  4825              LDR      r0,|L1.5504|
0014ea  380d              SUBS     r0,r0,#0xd            ;1009
0014ec  6bc0              LDR      r0,[r0,#0x3c]         ;1009  ; billvaltdator
0014ee  b908              CBNZ     r0,|L1.5364|
0014f0  2003              MOVS     r0,#3                 ;1010
0014f2  e7f8              B        |L1.5350|
                  |L1.5364|
0014f4  210f              MOVS     r1,#0xf               ;1011
0014f6  2200              MOVS     r2,#0                 ;1012
0014f8  e011              B        |L1.5406|
                  |L1.5370|
0014fa  4821              LDR      r0,|L1.5504|
0014fc  3053              ADDS     r0,r0,#0x53           ;1013
0014fe  5c40              LDRB     r0,[r0,r1]            ;1013
001500  b138              CBZ      r0,|L1.5394|
001502  481f              LDR      r0,|L1.5504|
001504  380d              SUBS     r0,r0,#0xd            ;1014
001506  f8b00072          LDRH     r0,[r0,#0x72]         ;1014  ; billvaltdator
00150a  4110              ASRS     r0,r0,r2              ;1014
00150c  f0000001          AND      r0,r0,#1              ;1014
001510  b910              CBNZ     r0,|L1.5400|
                  |L1.5394|
001512  1e48              SUBS     r0,r1,#1              ;1015
001514  b2c1              UXTB     r1,r0                 ;1015
001516  e000              B        |L1.5402|
                  |L1.5400|
001518  e003              B        |L1.5410|
                  |L1.5402|
00151a  1c50              ADDS     r0,r2,#1              ;1012
00151c  b2c2              UXTB     r2,r0                 ;1012
                  |L1.5406|
00151e  2a10              CMP      r2,#0x10              ;1012
001520  dbeb              BLT      |L1.5370|
                  |L1.5410|
001522  bf00              NOP                            ;1017
001524  b909              CBNZ     r1,|L1.5418|
001526  2000              MOVS     r0,#0                 ;1020
001528  e7dd              B        |L1.5350|
                  |L1.5418|
00152a  2037              MOVS     r0,#0x37              ;1021
00152c  4b16              LDR      r3,|L1.5512|
00152e  7018              STRB     r0,[r3,#0]            ;1021
001530  2006              MOVS     r0,#6                 ;1022
001532  7058              STRB     r0,[r3,#1]            ;1022
001534  4618              MOV      r0,r3                 ;1023
001536  7081              STRB     r1,[r0,#2]            ;1023
001538  2000              MOVS     r0,#0                 ;1024
00153a  70d8              STRB     r0,[r3,#3]            ;1024
00153c  2001              MOVS     r0,#1                 ;1025
00153e  7118              STRB     r0,[r3,#4]            ;1025
001540  200c              MOVS     r0,#0xc               ;1026
001542  4b10              LDR      r3,|L1.5508|
001544  7198              STRB     r0,[r3,#6]            ;1026
001546  2000              MOVS     r0,#0                 ;1027
001548  7158              STRB     r0,[r3,#5]            ;1027
00154a  2001              MOVS     r0,#1                 ;1028
00154c  e7cb              B        |L1.5350|
;;;1030   
                          ENDP

                  ESCROW PROC
;;;1355   
;;;1356   uint8_t ESCROW(uint8_t direction){//暂存箱操作
00154e  4601              MOV      r1,r0
;;;1357   	bill_cmd2[0]=BILL_ESCROW;
001550  2035              MOVS     r0,#0x35
001552  4a0e              LDR      r2,|L1.5516|
001554  7010              STRB     r0,[r2,#0]
;;;1358   	bill_cmd2[1]=direction;
001556  4610              MOV      r0,r2
001558  7041              STRB     r1,[r0,#1]
;;;1359   	billequip.cmd_type=M_BS_ESCROW;
00155a  2002              MOVS     r0,#2
00155c  4a09              LDR      r2,|L1.5508|
00155e  7190              STRB     r0,[r2,#6]
;;;1360   	billequip.cmd_status=cmd_status_need;
001560  2000              MOVS     r0,#0
001562  7150              STRB     r0,[r2,#5]
;;;1361   	return TRUE;
001564  2001              MOVS     r0,#1
;;;1362   }
001566  4770              BX       lr
;;;1363   
                          ENDP

                  CE_BILL PROC
;;;1385   
;;;1386   uint8_t CE_BILL(uint8_t type){//禁使能
001568  4601              MOV      r1,r0
;;;1387   
;;;1388   	if(billset==1 || billset==0)
00156a  4809              LDR      r0,|L1.5520|
00156c  7800              LDRB     r0,[r0,#0]  ; billset
00156e  2801              CMP      r0,#1
001570  d002              BEQ      |L1.5496|
001572  4807              LDR      r0,|L1.5520|
001574  7800              LDRB     r0,[r0,#0]  ; billset
001576  b908              CBNZ     r0,|L1.5500|
                  |L1.5496|
;;;1389   		billset=type;
001578  4805              LDR      r0,|L1.5520|
00157a  7001              STRB     r1,[r0,#0]
                  |L1.5500|
;;;1390   	//billequip.cmd_type=COIN_TYPE;
;;;1391   	//billequip.cmd_status=cmd_status_need;
;;;1392   	return TRUE;
00157c  2001              MOVS     r0,#1
;;;1393   }
00157e  4770              BX       lr
;;;1394   
                          ENDP

                  |L1.5504|
                          DCD      billvaltdator+0xd
                  |L1.5508|
                          DCD      billequip
                  |L1.5512|
                          DCD      bill_cmd3
                  |L1.5516|
                          DCD      bill_cmd2
                  |L1.5520|
                          DCD      billset

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  billvaltdator
                          %        116
                  billequip
                          %        16
                  bill_cmd
                          %        16
                  bill_cmd2
                          %        16
                  bill_cmd3
                          %        10
                  typevalue
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  SEM_BILL_CMD
                          DCD      0x00000000
                  sem_bill_check
                          %        8
                  billset
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  bill_reset_time
                          DCD      0x00000000
                  resetflag
000014  00                DCB      0x00
                  billchangenum
000015  000000            DCB      0x00,0x00,0x00
                  billfactor
                          DCD      0x00000000
                  bill_timeout
                          DCD      0x00000000
                          DCD      0x00000000
                  chkvalue
000024  0000              DCB      0x00,0x00
                  setupCount
000026  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\USR\\Mdb\\bill.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_bill_c_billset____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_bill_c_billset____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_bill_c_billset____REVSH|
#line 144
|__asm___6_bill_c_billset____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

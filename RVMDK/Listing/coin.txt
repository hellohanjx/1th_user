; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\coin.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\coin.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\coin.crf ..\USR\Mdb\coin.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  enloughcoin PROC
;;;35     
;;;36     uint8_t enloughcoin(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;37     {
000004  b08c              SUB      sp,sp,#0x30
;;;38     	int i,j,k,num;
;;;39     	uint8_t a[16];
;;;40     	uint16_t b[16]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
000006  2120              MOVS     r1,#0x20
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       __aeabi_memclr4
;;;41     	uint32_t value;
;;;42     	//return TRUE;
;;;43     
;;;44     	if(billequip.eqiu_status<2)
00000e  48fe              LDR      r0,|L1.1032|
000010  7900              LDRB     r0,[r0,#4]  ; billequip
000012  2802              CMP      r0,#2
000014  da21              BGE      |L1.90|
;;;45     	{
;;;46     		//这里可加入对暂存开启的不同处理方式
;;;47     		for(i=15;i>=0;i--)
000016  240f              MOVS     r4,#0xf
000018  e00f              B        |L1.58|
                  |L1.26|
;;;48     		{
;;;49     			if(billvaltdator.par_value[i]!=0 && billvaltdator.par_value[i]!=0xFF && ((billvaltdator.par_enable>>i)&0x01)==1)
00001a  48fc              LDR      r0,|L1.1036|
00001c  5d00              LDRB     r0,[r0,r4]
00001e  b158              CBZ      r0,|L1.56|
000020  48fa              LDR      r0,|L1.1036|
000022  5d00              LDRB     r0,[r0,r4]
000024  28ff              CMP      r0,#0xff
000026  d007              BEQ      |L1.56|
000028  48f8              LDR      r0,|L1.1036|
00002a  380d              SUBS     r0,r0,#0xd
00002c  8ec0              LDRH     r0,[r0,#0x36]  ; billvaltdator
00002e  4120              ASRS     r0,r0,r4
000030  f0000001          AND      r0,r0,#1
000034  b100              CBZ      r0,|L1.56|
;;;50     			break;
000036  e002              B        |L1.62|
                  |L1.56|
000038  1e64              SUBS     r4,r4,#1              ;47
                  |L1.58|
00003a  2c00              CMP      r4,#0                 ;47
00003c  daed              BGE      |L1.26|
                  |L1.62|
00003e  bf00              NOP      
;;;51     		}
;;;52     		if(coinchanger.allvalue<(billvaltdator.par_value[i]*billfactor))
000040  48f3              LDR      r0,|L1.1040|
000042  8d41              LDRH     r1,[r0,#0x2a]  ; coinchanger
000044  48f1              LDR      r0,|L1.1036|
000046  5d00              LDRB     r0,[r0,r4]
000048  4af2              LDR      r2,|L1.1044|
00004a  6812              LDR      r2,[r2,#0]  ; billfactor
00004c  4350              MULS     r0,r2,r0
00004e  4281              CMP      r1,r0
000050  d203              BCS      |L1.90|
;;;53     			return FALSE;
000052  2000              MOVS     r0,#0
                  |L1.84|
;;;54     	}
;;;55     	if(credit_get()+billvaltdator.escvalue>coinchanger.allvalue)
;;;56     		return FALSE;
;;;57     	if(coinchanger.lowest==coinchanger.highest)
;;;58     		return TRUE;
;;;59     	k=0;
;;;60     	a[0]=coinchanger.par_value[coinchanger.lowest];
;;;61     	b[0]+=coinchanger.store[coinchanger.lowest];
;;;62     	for(i=coinchanger.lowest+1;i<=coinchanger.highest;i++)
;;;63     	{
;;;64     		if(coinchanger.par_value[i]!=a[k])
;;;65     		{
;;;66     			k++;
;;;67     			a[k]=coinchanger.par_value[i];
;;;68     		}
;;;69     		b[k]+=coinchanger.store[i];
;;;70     	}
;;;71     	if(k==0)//如果只有一种硬币则返回OK。
;;;72     	return TRUE;
;;;73     	if(b[0]==0)//如果不只一种硬币，但是最小的硬币为空则返回FALSE.
;;;74     	return FALSE;
;;;75     	for(i=0;i<k;i++)
;;;76     	{
;;;77     		value=a[i+1];
;;;78     		j=i;
;;;79     		while(value!=0 && j>=0)
;;;80     		{
;;;81     			num=value/a[j];
;;;82     			if(num>b[j])
;;;83     				num=b[j];
;;;84     			value-=a[j]*num;
;;;85     			j--;
;;;86     		}
;;;87     		if(value!=0)
;;;88     			return FALSE;
;;;89     	}
;;;90     	return TRUE;
;;;91     }
000054  b00c              ADD      sp,sp,#0x30
000056  e8bd81f0          POP      {r4-r8,pc}
                  |L1.90|
00005a  f7fffffe          BL       credit_get
00005e  49eb              LDR      r1,|L1.1036|
000060  390d              SUBS     r1,r1,#0xd            ;55
000062  8c09              LDRH     r1,[r1,#0x20]         ;55  ; billvaltdator
000064  4408              ADD      r0,r0,r1              ;55
000066  49ea              LDR      r1,|L1.1040|
000068  8d49              LDRH     r1,[r1,#0x2a]         ;55  ; coinchanger
00006a  4288              CMP      r0,r1                 ;55
00006c  d901              BLS      |L1.114|
00006e  2000              MOVS     r0,#0                 ;56
000070  e7f0              B        |L1.84|
                  |L1.114|
000072  48e7              LDR      r0,|L1.1040|
000074  f890002c          LDRB     r0,[r0,#0x2c]         ;57  ; coinchanger
000078  49e5              LDR      r1,|L1.1040|
00007a  f891102d          LDRB     r1,[r1,#0x2d]         ;57  ; coinchanger
00007e  4288              CMP      r0,r1                 ;57
000080  d101              BNE      |L1.134|
000082  2001              MOVS     r0,#1                 ;58
000084  e7e6              B        |L1.84|
                  |L1.134|
000086  2500              MOVS     r5,#0                 ;59
000088  48e1              LDR      r0,|L1.1040|
00008a  f890102c          LDRB     r1,[r0,#0x2c]         ;60  ; coinchanger
00008e  3008              ADDS     r0,r0,#8              ;60
000090  5c40              LDRB     r0,[r0,r1]            ;60
000092  f88d0020          STRB     r0,[sp,#0x20]         ;60
000096  f8bd1000          LDRH     r1,[sp,#0]            ;61
00009a  48dd              LDR      r0,|L1.1040|
00009c  f890202c          LDRB     r2,[r0,#0x2c]         ;61  ; coinchanger
0000a0  301a              ADDS     r0,r0,#0x1a           ;61
0000a2  5c80              LDRB     r0,[r0,r2]            ;61
0000a4  4408              ADD      r0,r0,r1              ;61
0000a6  b280              UXTH     r0,r0                 ;61
0000a8  f8ad0000          STRH     r0,[sp,#0]            ;61
0000ac  48d8              LDR      r0,|L1.1040|
0000ae  f890002c          LDRB     r0,[r0,#0x2c]         ;62  ; coinchanger
0000b2  1c44              ADDS     r4,r0,#1              ;62
0000b4  e016              B        |L1.228|
                  |L1.182|
0000b6  48d6              LDR      r0,|L1.1040|
0000b8  3008              ADDS     r0,r0,#8              ;64
0000ba  5d00              LDRB     r0,[r0,r4]            ;64
0000bc  a908              ADD      r1,sp,#0x20           ;64
0000be  5d49              LDRB     r1,[r1,r5]            ;64
0000c0  4288              CMP      r0,r1                 ;64
0000c2  d005              BEQ      |L1.208|
0000c4  1c6d              ADDS     r5,r5,#1              ;66
0000c6  48d2              LDR      r0,|L1.1040|
0000c8  3008              ADDS     r0,r0,#8              ;67
0000ca  5d00              LDRB     r0,[r0,r4]            ;67
0000cc  a908              ADD      r1,sp,#0x20           ;67
0000ce  5548              STRB     r0,[r1,r5]            ;67
                  |L1.208|
0000d0  f83d1015          LDRH     r1,[sp,r5,LSL #1]     ;69
0000d4  48ce              LDR      r0,|L1.1040|
0000d6  301a              ADDS     r0,r0,#0x1a           ;69
0000d8  5d00              LDRB     r0,[r0,r4]            ;69
0000da  4408              ADD      r0,r0,r1              ;69
0000dc  b280              UXTH     r0,r0                 ;69
0000de  f82d0015          STRH     r0,[sp,r5,LSL #1]     ;69
0000e2  1c64              ADDS     r4,r4,#1              ;62
                  |L1.228|
0000e4  48ca              LDR      r0,|L1.1040|
0000e6  f890002d          LDRB     r0,[r0,#0x2d]         ;62  ; coinchanger
0000ea  42a0              CMP      r0,r4                 ;62
0000ec  dae3              BGE      |L1.182|
0000ee  b90d              CBNZ     r5,|L1.244|
0000f0  2001              MOVS     r0,#1                 ;72
0000f2  e7af              B        |L1.84|
                  |L1.244|
0000f4  f8bd0000          LDRH     r0,[sp,#0]            ;73
0000f8  b908              CBNZ     r0,|L1.254|
0000fa  2000              MOVS     r0,#0                 ;74
0000fc  e7aa              B        |L1.84|
                  |L1.254|
0000fe  2400              MOVS     r4,#0                 ;75
000100  e01a              B        |L1.312|
                  |L1.258|
000102  a908              ADD      r1,sp,#0x20           ;77
000104  1c60              ADDS     r0,r4,#1              ;77
000106  5c0f              LDRB     r7,[r1,r0]            ;77
000108  4626              MOV      r6,r4                 ;78
00010a  e00e              B        |L1.298|
                  |L1.268|
00010c  a808              ADD      r0,sp,#0x20           ;81
00010e  5d80              LDRB     r0,[r0,r6]            ;81
000110  fbb7f8f0          UDIV     r8,r7,r0              ;81
000114  f83d0016          LDRH     r0,[sp,r6,LSL #1]     ;82
000118  4540              CMP      r0,r8                 ;82
00011a  da01              BGE      |L1.288|
00011c  f83d8016          LDRH     r8,[sp,r6,LSL #1]     ;83
                  |L1.288|
000120  a808              ADD      r0,sp,#0x20           ;84
000122  5d80              LDRB     r0,[r0,r6]            ;84
000124  fb007718          MLS      r7,r0,r8,r7           ;84
000128  1e76              SUBS     r6,r6,#1              ;85
                  |L1.298|
00012a  b10f              CBZ      r7,|L1.304|
00012c  2e00              CMP      r6,#0                 ;79
00012e  daed              BGE      |L1.268|
                  |L1.304|
000130  b10f              CBZ      r7,|L1.310|
000132  2000              MOVS     r0,#0                 ;88
000134  e78e              B        |L1.84|
                  |L1.310|
000136  1c64              ADDS     r4,r4,#1              ;75
                  |L1.312|
000138  42ac              CMP      r4,r5                 ;75
00013a  dbe2              BLT      |L1.258|
00013c  2001              MOVS     r0,#1                 ;90
00013e  e789              B        |L1.84|
;;;92     uint8_t readcoinset()
                          ENDP

                  readcoinset PROC
000140  48b5              LDR      r0,|L1.1048|
;;;93     {
;;;94     //	I2C_ReadNByte(CAT24WC256,TWO_BYTE_SUBA,CA10,coin_buff,CA11_LENTH);
;;;95     	return coin_buff[0];
000142  7800              LDRB     r0,[r0,#0]  ; coin_buff
;;;96     }
000144  4770              BX       lr
;;;97     
                          ENDP

                  setcoinCE PROC
;;;98     void setcoinCE(uint8_t num)
000146  49b4              LDR      r1,|L1.1048|
;;;99     {
;;;100    	coin_buff[0]=num;
000148  7008              STRB     r0,[r1,#0]
;;;101    //	I2C_WriteNByte(CAT24WC256,TWO_BYTE_SUBA,CA10,coin_buff,CA11_LENTH);
;;;102    }
00014a  4770              BX       lr
;;;103    
                          ENDP

                  set_coin_status PROC
;;;115    
;;;116    void set_coin_status(uint8_t num)
00014c  b570              PUSH     {r4-r6,lr}
;;;117    {
00014e  4604              MOV      r4,r0
;;;118       FSMMSG * coinmsg;
;;;119       if(coinequip.eqiu_status!=num)
000150  48b2              LDR      r0,|L1.1052|
000152  7900              LDRB     r0,[r0,#4]  ; coinequip
000154  42a0              CMP      r0,r4
000156  d046              BEQ      |L1.486|
;;;120       {
;;;121       	//添加对状态转换频繁的处理
;;;122    //   	if(day!=DOM)
;;;123    //   	{
;;;124    //	   	day=DOM;
;;;125    //	   	coinchangenum=0;
;;;126    //   	}
;;;127    	
;;;128       	if(coinchangenum<50)
000158  48b1              LDR      r0,|L1.1056|
00015a  7800              LDRB     r0,[r0,#0]  ; coinchangenum
00015c  2832              CMP      r0,#0x32
00015e  da28              BGE      |L1.434|
;;;129       	{
;;;130    		coinchangenum++;
000160  48af              LDR      r0,|L1.1056|
000162  7800              LDRB     r0,[r0,#0]  ; coinchangenum
000164  1c40              ADDS     r0,r0,#1
000166  49ae              LDR      r1,|L1.1056|
000168  7008              STRB     r0,[r1,#0]
;;;131    		if(num>1)
00016a  2c01              CMP      r4,#1
00016c  dd05              BLE      |L1.378|
;;;132    			status_equip_msg(1,0xFF,num);
00016e  4622              MOV      r2,r4
000170  21ff              MOVS     r1,#0xff
000172  2001              MOVS     r0,#1
000174  f7fffffe          BL       status_equip_msg
000178  e01b              B        |L1.434|
                  |L1.378|
;;;133    		else
;;;134    		if(num==1 && coinequip.eqiu_status>1)
00017a  2c01              CMP      r4,#1
00017c  d109              BNE      |L1.402|
00017e  48a7              LDR      r0,|L1.1052|
000180  7900              LDRB     r0,[r0,#4]  ; coinequip
000182  2801              CMP      r0,#1
000184  dd05              BLE      |L1.402|
;;;135    			status_equip_msg(1,0xFF,2);
000186  2202              MOVS     r2,#2
000188  21ff              MOVS     r1,#0xff
00018a  2001              MOVS     r0,#1
00018c  f7fffffe          BL       status_equip_msg
000190  e00f              B        |L1.434|
                  |L1.402|
;;;136    		else
;;;137    		if(num==0 && coinequip.eqiu_status>1)
000192  b94c              CBNZ     r4,|L1.424|
000194  48a1              LDR      r0,|L1.1052|
000196  7900              LDRB     r0,[r0,#4]  ; coinequip
000198  2801              CMP      r0,#1
00019a  dd05              BLE      |L1.424|
;;;138    			status_equip_msg(1,0xFF,2);
00019c  2202              MOVS     r2,#2
00019e  21ff              MOVS     r1,#0xff
0001a0  2001              MOVS     r0,#1
0001a2  f7fffffe          BL       status_equip_msg
0001a6  e004              B        |L1.434|
                  |L1.424|
;;;139    		else
;;;140    			coinchangenum--;
0001a8  489d              LDR      r0,|L1.1056|
0001aa  7800              LDRB     r0,[r0,#0]  ; coinchangenum
0001ac  1e40              SUBS     r0,r0,#1
0001ae  499c              LDR      r1,|L1.1056|
0001b0  7008              STRB     r0,[r1,#0]
                  |L1.434|
;;;141    	}
;;;142    	coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
0001b2  2000              MOVS     r0,#0
0001b4  f7fffffe          BL       apply_fsm_msg
0001b8  4605              MOV      r5,r0
;;;143    	assert_param(coinmsg);
;;;144    	coinmsg->type=MsgCOIN;
0001ba  2002              MOVS     r0,#2
0001bc  7028              STRB     r0,[r5,#0]
;;;145    	if(coinequip.eqiu_status==0xFE)
0001be  4897              LDR      r0,|L1.1052|
0001c0  7900              LDRB     r0,[r0,#4]  ; coinequip
0001c2  28fe              CMP      r0,#0xfe
0001c4  d102              BNE      |L1.460|
;;;146    		coinmsg->stype=M_CS_INIT;
0001c6  2007              MOVS     r0,#7
0001c8  7068              STRB     r0,[r5,#1]
0001ca  e001              B        |L1.464|
                  |L1.460|
;;;147    	else
;;;148    		coinmsg->stype=M_CS_STATUS;
0001cc  2006              MOVS     r0,#6
0001ce  7068              STRB     r0,[r5,#1]
                  |L1.464|
;;;149    	coinmsg->value=num;
0001d0  606c              STR      r4,[r5,#4]
;;;150    	coinequip.eqiu_status=num;
0001d2  4892              LDR      r0,|L1.1052|
0001d4  7104              STRB     r4,[r0,#4]
;;;151    	if(send_fsm_msg(coinmsg)!=TRUE)
0001d6  4628              MOV      r0,r5
0001d8  f7fffffe          BL       send_fsm_msg
0001dc  2801              CMP      r0,#1
0001de  d002              BEQ      |L1.486|
;;;152    		release_fsm_msg(coinmsg);
0001e0  4628              MOV      r0,r5
0001e2  f7fffffe          BL       release_fsm_msg
                  |L1.486|
;;;153       }
;;;154    }
0001e6  bd70              POP      {r4-r6,pc}
;;;155    
                          ENDP

                  savedispense PROC
;;;157    
;;;158    void savedispense(uint16_t num,uint8_t count)//记录硬币的找零
0001e8  4770              BX       lr
;;;159    {
;;;160    //	send_moneydispence_msg(DATA_CC,num,count);
;;;161    //	CA401 +=num*count; //总找零金额
;;;162    //	CA403 +=num*count;
;;;163    //	CA901 +=num*count;
;;;164    //	CA902 +=num*count;
;;;165    
;;;166    //	switch(num)
;;;167    //	{
;;;168    //		case 5:
;;;169    //		CA1202(0)+=count;
;;;170    //		CA1203(0)+=count;
;;;171    //		CA1204(0)+=count;
;;;172    //		CA1205(0)+=count;
;;;173    //		break;
;;;174    //		case 10:
;;;175    //		CA1202(1)+=count;
;;;176    //		CA1203(1)+=count;
;;;177    //		CA1204(1)+=count;
;;;178    //		CA1205(1)+=count;
;;;179    //		break;
;;;180    //		case 25:
;;;181    //		CA1202(2)+=count;
;;;182    //		CA1203(2)+=count;
;;;183    //		CA1204(2)+=count;
;;;184    //		CA1205(2)+=count;
;;;185    //		break;
;;;186    //		case 50:
;;;187    //		CA1202(3)+=count;
;;;188    //		CA1203(3)+=count;
;;;189    //		CA1204(3)+=count;
;;;190    //		CA1205(3)+=count;
;;;191    //		break;
;;;192    //		case 75:
;;;193    //		CA1202(4)+=count;
;;;194    //		CA1203(4)+=count;
;;;195    //		CA1204(4)+=count;
;;;196    //		CA1205(4)+=count;
;;;197    //		break;
;;;198    //		case 100:
;;;199    //		CA1202(5)+=count;
;;;200    //		CA1203(5)+=count;
;;;201    //		CA1204(5)+=count;
;;;202    //		CA1205(5)+=count;
;;;203    //		break;
;;;204    //		case 200:
;;;205    //		CA1202(6)+=count;
;;;206    //		CA1203(6)+=count;
;;;207    //		CA1204(6)+=count;
;;;208    //		CA1205(6)+=count;
;;;209    //		break;
;;;210    //		case 500:
;;;211    //		CA1202(7)+=count;
;;;212    //		CA1203(7)+=count;
;;;213    //		CA1204(7)+=count;
;;;214    //		CA1205(7)+=count;
;;;215    //		break;
;;;216    //		case 1000:
;;;217    //		CA1202(8)+=count;
;;;218    //		CA1203(8)+=count;
;;;219    //		CA1204(8)+=count;
;;;220    //		CA1205(8)+=count;
;;;221    //		break;
;;;222    //		default:
;;;223    //		break;
;;;224    //	}
;;;225    }
;;;226    
                          ENDP

                  Coin_Poll PROC
;;;824    
;;;825    void Coin_Poll(void)//POLL循环
0001ea  e92d5fff          PUSH     {r0-r12,lr}
;;;826    {
;;;827    	uint8_t err,rt,path,type,num,i;
;;;828    	uint16_t *rx, rx_len;
;;;829    	FSMMSG * coinmsg;
;;;830    		
;;;831    	/*if(coinequip.cmd_status==cmd_status_need)//有别的命令需要执行
;;;832    	{
;;;833    		if(coinequip.cmd_type==M_CS_PAYOUT)
;;;834    		{
;;;835    			coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;836    			coin_timeout[0]=OSTimeGet();
;;;837    		}
;;;838    	}*/
;;;839    	
;;;840    	coin_cmd[0]=COIN_POLL;
0001ee  200b              MOVS     r0,#0xb
0001f0  498c              LDR      r1,|L1.1060|
0001f2  7008              STRB     r0,[r1,#0]
;;;841    	rx = mdb_send_cmd(coin_cmd,1,1,COIN_NO_RESPENSE, &err, &rx_len);
0001f4  a802              ADD      r0,sp,#8
0001f6  a903              ADD      r1,sp,#0xc
0001f8  230a              MOVS     r3,#0xa
0001fa  2201              MOVS     r2,#1
0001fc  e9cd1000          STRD     r1,r0,[sp,#0]
000200  4611              MOV      r1,r2
000202  4888              LDR      r0,|L1.1060|
000204  f7fffffe          BL       mdb_send_cmd
000208  4605              MOV      r5,r0
;;;842    	if(err!=MDB_RECEIVE_ACK && err!=MDB_RECEIVE_DATA)
00020a  f89d000c          LDRB     r0,[sp,#0xc]
00020e  2878              CMP      r0,#0x78
000210  d014              BEQ      |L1.572|
000212  f89d000c          LDRB     r0,[sp,#0xc]
000216  2879              CMP      r0,#0x79
000218  d010              BEQ      |L1.572|
;;;843    	{
;;;844    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)//达到最大超时时间
00021a  f7fffffe          BL       OSTimeGet
00021e  4982              LDR      r1,|L1.1064|
000220  6809              LDR      r1,[r1,#0]  ; coin_timeout
000222  1a40              SUBS     r0,r0,r1
000224  f64031b8          MOV      r1,#0xbb8
000228  4288              CMP      r0,r1
00022a  d905              BLS      |L1.568|
;;;845    		{
;;;846    			set_coin_status(0xFF);
00022c  20ff              MOVS     r0,#0xff
00022e  f7fffffe          BL       set_coin_status
;;;847    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000232  487e              LDR      r0,|L1.1068|
000234  4979              LDR      r1,|L1.1052|
000236  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.568|
;;;848    		}
;;;849    		return;
;;;850    	}
;;;851    	else
;;;852    	if(err==MDB_RECEIVE_ACK)
;;;853    	{
;;;854    		if(coinequip.cmd_status==cmd_status_start)//如果POLL正在监视某个命令的完成情况
;;;855    		{
;;;856    			coinequip.cmd_status=cmd_status_complete;
;;;857    			if(coinequip.cmd_type==M_CS_PAYOUT)//如果是退币任务
;;;858    			{
;;;859    				coinchanger.allvalue=0;//金额清零
;;;860    				coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;861    				assert_param(coinmsg);
;;;862    				coinmsg->type=MsgCOIN;
;;;863    				coinmsg->stype=coinequip.cmd_type;
;;;864    				num=coin_cmd2[1]>>4;
;;;865    				type=coin_cmd2[1]&0x0F;
;;;866    				coinmsg->value=num*coinchanger.par_value[type]*coinfactor;
;;;867    				if(send_fsm_msg(coinmsg)!=TRUE)
;;;868    					release_fsm_msg(coinmsg);
;;;869    					
;;;870    				credit_set(credit_get() - coinmsg->value);//找零后余额
;;;871    
;;;872    				savedispense(coinmsg->value,1);
;;;873    				
;;;874    				coinequip.cmd_status=cmd_status_complete;	
;;;875    				coinequip.cmd_type=M_CS_POLL;//改变命令状态，使退币命令可以接收
;;;876    				coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;877    			}		
;;;878    		}
;;;879    		else
;;;880    		{
;;;881    			coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;882    		}
;;;883    		coin_timeout[0]=OSTimeGet();
;;;884    		return;
;;;885    	}
;;;886    	//对POLL命令的返回数据包结果的处理
;;;887    	else
;;;888    	if(err==MDB_RECEIVE_DATA)
;;;889    	{   
;;;890    		for(i=0;i<rx_len;i++)//处理收到的所有字节
;;;891    		{
;;;892    			rt=(rx[i] & 0xC0)>>6;
;;;893    			if(rt==1)//如果是接收硬币
;;;894    			{
;;;895    				path=(rx[i] &0x30)>>4;
;;;896    				type=(rx[i] &0x0F);
;;;897    				if(path<2)//如果被硬币器接收
;;;898    				{
;;;899    					//计算金额:硬币的面值*比例因子*10的（全局金额比例常数-硬币器金额比例常数)次方
;;;900    					coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;901    					assert_param(coinmsg);
;;;902    					coinmsg->type=MsgCOIN;
;;;903    					coinmsg->stype=M_CS_ACCEPT;
;;;904    					coinmsg->value=coinchanger.par_value[type]*coinfactor;
;;;905    		    		if(send_fsm_msg(coinmsg)!=TRUE)
;;;906    		    			release_fsm_msg(coinmsg);
;;;907    		    		if(path==0)CA306+=coinmsg->value;//进入溢币盒
;;;908    					credit_set(credit_get() + coinmsg->value);
;;;909    		    		//savecoinaccept(coinmsg->value);
;;;910    		    		
;;;911    					if(path==1)
;;;912    					{
;;;913    						coinchanger.allvalue-=coinchanger.par_value[type]*coinfactor*coinchanger.store[type];
;;;914    						coinchanger.store[type]=rx[i+1];//跟新储币管数量。
;;;915    						coinchanger.allvalue+=coinchanger.par_value[type]*coinfactor*coinchanger.store[type];
;;;916    					}
;;;917    				}
;;;918    				coinchanger.store[type]=rx[i+1];
;;;919    				i++; //该消息占用两字节，所以再加1.
;;;920    			}
;;;921    			else
;;;922    			if(rt==0)//如果是其他硬币器事件
;;;923    			{
;;;924    				if(rx[i]==0x01)//按下退币按钮
;;;925    				{
;;;926    					coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;927    					assert_param(coinmsg);
;;;928    					coinmsg->type=MsgCOIN;
;;;929    					coinmsg->stype=M_CS_OTHER;
;;;930    					coinmsg->value=rx[i];
;;;931    					send_fsm_msg(coinmsg);
;;;932    				}
;;;933    				else
;;;934    				if(rx[i]==0x04||rx[i]==0x05||rx[i]==0x07\
;;;935    				||rx[i]==0x08||rx[i]==0x09||rx[i]==0x0C)
;;;936    				{
;;;937    					if(coinchangenum<20)
;;;938    				    {	     
;;;939    				  		status_equip_msg(1,0xFF,1);
;;;940    				  		coinchangenum++;
;;;941    				   	}
;;;942    				}
;;;943    				else
;;;944    				if(rx[i]==0x03)//一个硬币被接收但是系统没有给值
;;;945    				{
;;;946    					//send_moneydelete_msg(DATA_CC,0);
;;;947    				}
;;;948    				else
;;;949    				if(rx[i]==0x06)//找不到硬币识别头
;;;950    				{
;;;951    					set_coin_status(8);
;;;952    				}
;;;953    				else
;;;954    				if(rx[i]==0x0B)//收到一个复位信号
;;;955    				{
;;;956    					coinequip.EQIU_FUNC=CoinChanger_Reset;
;;;957    				}
;;;958    			}
;;;959    			else  //人工按键退币事件
;;;960    			{
;;;961    				type=(rx[i] &0x0F);//硬币种类
;;;962    				num=(rx[i] & 0x70)>>4;//硬币数量
;;;963    				coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;964    				assert_param(coinmsg);
;;;965    				coinmsg->type=MsgCOIN;
;;;966    				coinmsg->stype=M_CS_MANUAL_DIS;
;;;967    				coinmsg->value=coinchanger.par_value[type]*coinfactor*num;
;;;968    				coinchanger.allvalue-=coinchanger.par_value[type]*coinfactor*coinchanger.store[type];
;;;969    				coinchanger.store[type]=rx[i+1];//跟新储币管数量。
;;;970    				coinchanger.allvalue+=coinchanger.par_value[type]*coinfactor*coinchanger.store[type];
;;;971    	    		if(send_fsm_msg(coinmsg)!=TRUE)
;;;972    	    			release_fsm_msg(coinmsg);
;;;973    				i++; //该消息占用两字节，所以再加1.
;;;974    			}
;;;975    		}
;;;976    		coin_timeout[0]=OSTimeGet();
;;;977    		return;
;;;978    	}
;;;979    }
000238  e8bd9fff          POP      {r0-r12,pc}
                  |L1.572|
00023c  f89d000c          LDRB     r0,[sp,#0xc]          ;852
000240  2878              CMP      r0,#0x78              ;852
000242  d14b              BNE      |L1.732|
000244  4875              LDR      r0,|L1.1052|
000246  7940              LDRB     r0,[r0,#5]            ;854  ; coinequip
000248  2801              CMP      r0,#1                 ;854
00024a  d13f              BNE      |L1.716|
00024c  2003              MOVS     r0,#3                 ;856
00024e  4973              LDR      r1,|L1.1052|
000250  7148              STRB     r0,[r1,#5]            ;856
000252  4608              MOV      r0,r1                 ;857
000254  7980              LDRB     r0,[r0,#6]            ;857  ; coinequip
000256  2802              CMP      r0,#2                 ;857
000258  d13b              BNE      |L1.722|
00025a  2000              MOVS     r0,#0                 ;859
00025c  496c              LDR      r1,|L1.1040|
00025e  8548              STRH     r0,[r1,#0x2a]         ;859
000260  f7fffffe          BL       apply_fsm_msg
000264  4606              MOV      r6,r0                 ;860
000266  2002              MOVS     r0,#2                 ;862
000268  7030              STRB     r0,[r6,#0]            ;862
00026a  486c              LDR      r0,|L1.1052|
00026c  7980              LDRB     r0,[r0,#6]            ;863  ; coinequip
00026e  7070              STRB     r0,[r6,#1]            ;863
000270  486f              LDR      r0,|L1.1072|
000272  7840              LDRB     r0,[r0,#1]            ;864  ; coin_cmd2
000274  ea4f1920          ASR      r9,r0,#4              ;864
000278  486d              LDR      r0,|L1.1072|
00027a  7840              LDRB     r0,[r0,#1]            ;865  ; coin_cmd2
00027c  f000070f          AND      r7,r0,#0xf            ;865
000280  4863              LDR      r0,|L1.1040|
000282  3008              ADDS     r0,r0,#8              ;866
000284  5dc0              LDRB     r0,[r0,r7]            ;866
000286  fb00f009          MUL      r0,r0,r9              ;866
00028a  496a              LDR      r1,|L1.1076|
00028c  6809              LDR      r1,[r1,#0]            ;866  ; coinfactor
00028e  4348              MULS     r0,r1,r0              ;866
000290  6070              STR      r0,[r6,#4]            ;866
000292  4630              MOV      r0,r6                 ;867
000294  f7fffffe          BL       send_fsm_msg
000298  2801              CMP      r0,#1                 ;867
00029a  d002              BEQ      |L1.674|
00029c  4630              MOV      r0,r6                 ;868
00029e  f7fffffe          BL       release_fsm_msg
                  |L1.674|
0002a2  f7fffffe          BL       credit_get
0002a6  6871              LDR      r1,[r6,#4]            ;870
0002a8  eba00b01          SUB      r11,r0,r1             ;870
0002ac  4658              MOV      r0,r11                ;870
0002ae  f7fffffe          BL       credit_set
0002b2  88b1              LDRH     r1,[r6,#4]            ;872
0002b4  b288              UXTH     r0,r1                 ;872
0002b6  2101              MOVS     r1,#1                 ;872
0002b8  f7fffffe          BL       savedispense
0002bc  2003              MOVS     r0,#3                 ;874
0002be  4957              LDR      r1,|L1.1052|
0002c0  7148              STRB     r0,[r1,#5]            ;874
0002c2  2004              MOVS     r0,#4                 ;875
0002c4  7188              STRB     r0,[r1,#6]            ;875
0002c6  485c              LDR      r0,|L1.1080|
0002c8  6008              STR      r0,[r1,#0]            ;876  ; coinequip
0002ca  e002              B        |L1.722|
                  |L1.716|
0002cc  485a              LDR      r0,|L1.1080|
0002ce  4953              LDR      r1,|L1.1052|
0002d0  6008              STR      r0,[r1,#0]            ;881  ; coinequip
                  |L1.722|
0002d2  f7fffffe          BL       OSTimeGet
0002d6  4954              LDR      r1,|L1.1064|
0002d8  6008              STR      r0,[r1,#0]            ;883  ; coin_timeout
0002da  e7ad              B        |L1.568|
                  |L1.732|
0002dc  f89d000c          LDRB     r0,[sp,#0xc]          ;888
0002e0  2879              CMP      r0,#0x79              ;888
0002e2  d17d              BNE      |L1.992|
0002e4  2400              MOVS     r4,#0                 ;890
0002e6  e120              B        |L1.1322|
                  |L1.744|
0002e8  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;892
0002ec  f3c01a81          UBFX     r10,r0,#6,#2          ;892
0002f0  f1ba0f01          CMP      r10,#1                ;893
0002f4  d160              BNE      |L1.952|
0002f6  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;895
0002fa  f3c01801          UBFX     r8,r0,#4,#2           ;895
0002fe  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;896
000302  f000070f          AND      r7,r0,#0xf            ;896
000306  f1b80f02          CMP      r8,#2                 ;897
00030a  da4c              BGE      |L1.934|
00030c  2000              MOVS     r0,#0                 ;900
00030e  f7fffffe          BL       apply_fsm_msg
000312  4606              MOV      r6,r0                 ;900
000314  2002              MOVS     r0,#2                 ;902
000316  7030              STRB     r0,[r6,#0]            ;902
000318  2000              MOVS     r0,#0                 ;903
00031a  7070              STRB     r0,[r6,#1]            ;903
00031c  483c              LDR      r0,|L1.1040|
00031e  3008              ADDS     r0,r0,#8              ;904
000320  5dc0              LDRB     r0,[r0,r7]            ;904
000322  4944              LDR      r1,|L1.1076|
000324  6809              LDR      r1,[r1,#0]            ;904  ; coinfactor
000326  4348              MULS     r0,r1,r0              ;904
000328  6070              STR      r0,[r6,#4]            ;904
00032a  4630              MOV      r0,r6                 ;905
00032c  f7fffffe          BL       send_fsm_msg
000330  2801              CMP      r0,#1                 ;905
000332  d002              BEQ      |L1.826|
000334  4630              MOV      r0,r6                 ;906
000336  f7fffffe          BL       release_fsm_msg
                  |L1.826|
00033a  f1b80f00          CMP      r8,#0                 ;907
00033e  d105              BNE      |L1.844|
000340  7930              LDRB     r0,[r6,#4]            ;907
000342  493e              LDR      r1,|L1.1084|
000344  7809              LDRB     r1,[r1,#0]            ;907  ; CA306
000346  4408              ADD      r0,r0,r1              ;907
000348  493c              LDR      r1,|L1.1084|
00034a  7008              STRB     r0,[r1,#0]            ;907
                  |L1.844|
00034c  f7fffffe          BL       credit_get
000350  6871              LDR      r1,[r6,#4]            ;908
000352  eb000b01          ADD      r11,r0,r1             ;908
000356  4658              MOV      r0,r11                ;908
000358  f7fffffe          BL       credit_set
00035c  f1b80f01          CMP      r8,#1                 ;911
000360  d121              BNE      |L1.934|
000362  482b              LDR      r0,|L1.1040|
000364  8d42              LDRH     r2,[r0,#0x2a]         ;913  ; coinchanger
000366  3008              ADDS     r0,r0,#8              ;913
000368  5dc0              LDRB     r0,[r0,r7]            ;913
00036a  4932              LDR      r1,|L1.1076|
00036c  6809              LDR      r1,[r1,#0]            ;913  ; coinfactor
00036e  4348              MULS     r0,r1,r0              ;913
000370  4927              LDR      r1,|L1.1040|
000372  311a              ADDS     r1,r1,#0x1a           ;913
000374  5dc9              LDRB     r1,[r1,r7]            ;913
000376  fb002011          MLS      r0,r0,r1,r2           ;913
00037a  4925              LDR      r1,|L1.1040|
00037c  8548              STRH     r0,[r1,#0x2a]         ;913
00037e  1c60              ADDS     r0,r4,#1              ;914
000380  f8151010          LDRB     r1,[r5,r0,LSL #1]     ;914
000384  4822              LDR      r0,|L1.1040|
000386  301a              ADDS     r0,r0,#0x1a           ;914
000388  55c1              STRB     r1,[r0,r7]            ;914
00038a  381a              SUBS     r0,r0,#0x1a           ;915
00038c  8d42              LDRH     r2,[r0,#0x2a]         ;915  ; coinchanger
00038e  3008              ADDS     r0,r0,#8              ;915
000390  5dc0              LDRB     r0,[r0,r7]            ;915
000392  4928              LDR      r1,|L1.1076|
000394  6809              LDR      r1,[r1,#0]            ;915  ; coinfactor
000396  4348              MULS     r0,r1,r0              ;915
000398  491d              LDR      r1,|L1.1040|
00039a  311a              ADDS     r1,r1,#0x1a           ;915
00039c  5dc9              LDRB     r1,[r1,r7]            ;915
00039e  fb002001          MLA      r0,r0,r1,r2           ;915
0003a2  491b              LDR      r1,|L1.1040|
0003a4  8548              STRH     r0,[r1,#0x2a]         ;915
                  |L1.934|
0003a6  1c60              ADDS     r0,r4,#1              ;918
0003a8  f8151010          LDRB     r1,[r5,r0,LSL #1]     ;918
0003ac  4818              LDR      r0,|L1.1040|
0003ae  301a              ADDS     r0,r0,#0x1a           ;918
0003b0  55c1              STRB     r1,[r0,r7]            ;918
0003b2  1c60              ADDS     r0,r4,#1              ;919
0003b4  b2c4              UXTB     r4,r0                 ;919
0003b6  e0b6              B        |L1.1318|
                  |L1.952|
0003b8  f1ba0f00          CMP      r10,#0                ;922
0003bc  d16c              BNE      |L1.1176|
0003be  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;924
0003c2  2801              CMP      r0,#1                 ;924
0003c4  d110              BNE      |L1.1000|
0003c6  2000              MOVS     r0,#0                 ;926
0003c8  f7fffffe          BL       apply_fsm_msg
0003cc  4606              MOV      r6,r0                 ;926
0003ce  2002              MOVS     r0,#2                 ;928
0003d0  7030              STRB     r0,[r6,#0]            ;928
0003d2  2003              MOVS     r0,#3                 ;929
0003d4  7070              STRB     r0,[r6,#1]            ;929
0003d6  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;930
0003da  6070              STR      r0,[r6,#4]            ;930
0003dc  4630              MOV      r0,r6                 ;931
0003de  e000              B        |L1.994|
                  |L1.992|
0003e0  e0ad              B        |L1.1342|
                  |L1.994|
0003e2  f7fffffe          BL       send_fsm_msg
0003e6  e09e              B        |L1.1318|
                  |L1.1000|
0003e8  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;934
0003ec  2804              CMP      r0,#4                 ;934
0003ee  d030              BEQ      |L1.1106|
0003f0  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;934
0003f4  2805              CMP      r0,#5                 ;934
0003f6  d02c              BEQ      |L1.1106|
0003f8  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;934
0003fc  2807              CMP      r0,#7                 ;934
0003fe  d028              BEQ      |L1.1106|
000400  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;935
000404  2808              CMP      r0,#8                 ;935
000406  e01b              B        |L1.1088|
                  |L1.1032|
                          DCD      billequip
                  |L1.1036|
                          DCD      billvaltdator+0xd
                  |L1.1040|
                          DCD      coinchanger
                  |L1.1044|
                          DCD      billfactor
                  |L1.1048|
                          DCD      coin_buff
                  |L1.1052|
                          DCD      coinequip
                  |L1.1056|
                          DCD      coinchangenum
                  |L1.1060|
                          DCD      coin_cmd
                  |L1.1064|
                          DCD      coin_timeout
                  |L1.1068|
                          DCD      CoinChanger_Reset
                  |L1.1072|
                          DCD      coin_cmd2
                  |L1.1076|
                          DCD      coinfactor
                  |L1.1080|
                          DCD      Coin_TubeStatus
                  |L1.1084|
                          DCD      CA306
                  |L1.1088|
000440  d007              BEQ      |L1.1106|
000442  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;935
000446  2809              CMP      r0,#9                 ;935
000448  d003              BEQ      |L1.1106|
00044a  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;935
00044e  280c              CMP      r0,#0xc               ;935
000450  d10e              BNE      |L1.1136|
                  |L1.1106|
000452  48fb              LDR      r0,|L1.2112|
000454  7800              LDRB     r0,[r0,#0]            ;937  ; coinchangenum
000456  2814              CMP      r0,#0x14              ;937
000458  da65              BGE      |L1.1318|
00045a  2201              MOVS     r2,#1                 ;939
00045c  21ff              MOVS     r1,#0xff              ;939
00045e  4610              MOV      r0,r2                 ;939
000460  f7fffffe          BL       status_equip_msg
000464  48f6              LDR      r0,|L1.2112|
000466  7800              LDRB     r0,[r0,#0]            ;940  ; coinchangenum
000468  1c40              ADDS     r0,r0,#1              ;940
00046a  49f5              LDR      r1,|L1.2112|
00046c  7008              STRB     r0,[r1,#0]            ;940
00046e  e05a              B        |L1.1318|
                  |L1.1136|
000470  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;944
000474  2803              CMP      r0,#3                 ;944
000476  d056              BEQ      |L1.1318|
000478  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;949
00047c  2806              CMP      r0,#6                 ;949
00047e  d103              BNE      |L1.1160|
000480  2008              MOVS     r0,#8                 ;951
000482  f7fffffe          BL       set_coin_status
000486  e04e              B        |L1.1318|
                  |L1.1160|
000488  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;954
00048c  280b              CMP      r0,#0xb               ;954
00048e  d14a              BNE      |L1.1318|
000490  48ec              LDR      r0,|L1.2116|
000492  49ed              LDR      r1,|L1.2120|
000494  6008              STR      r0,[r1,#0]            ;956  ; coinequip
000496  e046              B        |L1.1318|
                  |L1.1176|
000498  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;961
00049c  f000070f          AND      r7,r0,#0xf            ;961
0004a0  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;962
0004a4  f3c01902          UBFX     r9,r0,#4,#3           ;962
0004a8  2000              MOVS     r0,#0                 ;963
0004aa  f7fffffe          BL       apply_fsm_msg
0004ae  4606              MOV      r6,r0                 ;963
0004b0  2002              MOVS     r0,#2                 ;965
0004b2  7030              STRB     r0,[r6,#0]            ;965
0004b4  200a              MOVS     r0,#0xa               ;966
0004b6  7070              STRB     r0,[r6,#1]            ;966
0004b8  48e4              LDR      r0,|L1.2124|
0004ba  5dc0              LDRB     r0,[r0,r7]            ;967
0004bc  49e4              LDR      r1,|L1.2128|
0004be  6809              LDR      r1,[r1,#0]            ;967  ; coinfactor
0004c0  4348              MULS     r0,r1,r0              ;967
0004c2  fb00f009          MUL      r0,r0,r9              ;967
0004c6  6070              STR      r0,[r6,#4]            ;967
0004c8  48e0              LDR      r0,|L1.2124|
0004ca  3808              SUBS     r0,r0,#8              ;968
0004cc  8d42              LDRH     r2,[r0,#0x2a]         ;968  ; coinchanger
0004ce  3008              ADDS     r0,r0,#8              ;968
0004d0  5dc0              LDRB     r0,[r0,r7]            ;968
0004d2  49df              LDR      r1,|L1.2128|
0004d4  6809              LDR      r1,[r1,#0]            ;968  ; coinfactor
0004d6  4348              MULS     r0,r1,r0              ;968
0004d8  49dc              LDR      r1,|L1.2124|
0004da  3112              ADDS     r1,r1,#0x12           ;968
0004dc  5dc9              LDRB     r1,[r1,r7]            ;968
0004de  fb002011          MLS      r0,r0,r1,r2           ;968
0004e2  49da              LDR      r1,|L1.2124|
0004e4  3908              SUBS     r1,r1,#8              ;968
0004e6  8548              STRH     r0,[r1,#0x2a]         ;968
0004e8  1c60              ADDS     r0,r4,#1              ;969
0004ea  f8151010          LDRB     r1,[r5,r0,LSL #1]     ;969
0004ee  48d7              LDR      r0,|L1.2124|
0004f0  3012              ADDS     r0,r0,#0x12           ;969
0004f2  55c1              STRB     r1,[r0,r7]            ;969
0004f4  381a              SUBS     r0,r0,#0x1a           ;970
0004f6  8d42              LDRH     r2,[r0,#0x2a]         ;970  ; coinchanger
0004f8  3008              ADDS     r0,r0,#8              ;970
0004fa  5dc0              LDRB     r0,[r0,r7]            ;970
0004fc  49d4              LDR      r1,|L1.2128|
0004fe  6809              LDR      r1,[r1,#0]            ;970  ; coinfactor
000500  4348              MULS     r0,r1,r0              ;970
000502  49d2              LDR      r1,|L1.2124|
000504  3112              ADDS     r1,r1,#0x12           ;970
000506  5dc9              LDRB     r1,[r1,r7]            ;970
000508  fb002001          MLA      r0,r0,r1,r2           ;970
00050c  49cf              LDR      r1,|L1.2124|
00050e  3908              SUBS     r1,r1,#8              ;970
000510  8548              STRH     r0,[r1,#0x2a]         ;970
000512  4630              MOV      r0,r6                 ;971
000514  f7fffffe          BL       send_fsm_msg
000518  2801              CMP      r0,#1                 ;971
00051a  d002              BEQ      |L1.1314|
00051c  4630              MOV      r0,r6                 ;972
00051e  f7fffffe          BL       release_fsm_msg
                  |L1.1314|
000522  1c60              ADDS     r0,r4,#1              ;973
000524  b2c4              UXTB     r4,r0                 ;973
                  |L1.1318|
000526  1c60              ADDS     r0,r4,#1              ;890
000528  b2c4              UXTB     r4,r0                 ;890
                  |L1.1322|
00052a  f8bd0008          LDRH     r0,[sp,#8]            ;890
00052e  4284              CMP      r4,r0                 ;890
000530  f6ffaeda          BLT      |L1.744|
000534  f7fffffe          BL       OSTimeGet
000538  49c6              LDR      r1,|L1.2132|
00053a  6008              STR      r0,[r1,#0]            ;976  ; coin_timeout
00053c  e67c              B        |L1.568|
                  |L1.1342|
00053e  bf00              NOP      
000540  e67a              B        |L1.568|
;;;980    #ifndef COINHOPPER//***硬币器
                          ENDP

                  Coin_Diagnostic_Status PROC
;;;675    
;;;676    void Coin_Diagnostic_Status(void)//扩展指令查询硬币器状态
000542  b530              PUSH     {r4,r5,lr}
;;;677    {
000544  b089              SUB      sp,sp,#0x24
;;;678    	uint8_t err,i;
;;;679    	uint16_t *rx, rx_len;
;;;680    	
;;;681    	coin_cmd[0]=COIN_EXP;
000546  200f              MOVS     r0,#0xf
000548  49c3              LDR      r1,|L1.2136|
00054a  7008              STRB     r0,[r1,#0]
;;;682    	coin_cmd[1]=0x05;
00054c  2005              MOVS     r0,#5
00054e  7048              STRB     r0,[r1,#1]
;;;683    	rx = mdb_send_cmd(coin_cmd,2,1,COIN_NO_RESPENSE*10, &err, &rx_len);
000550  a807              ADD      r0,sp,#0x1c
000552  a908              ADD      r1,sp,#0x20
000554  2364              MOVS     r3,#0x64
000556  2201              MOVS     r2,#1
000558  e9cd1000          STRD     r1,r0,[sp,#0]
00055c  2102              MOVS     r1,#2
00055e  48be              LDR      r0,|L1.2136|
000560  f7fffffe          BL       mdb_send_cmd
000564  4605              MOV      r5,r0
;;;684    	if(err!=MDB_RECEIVE_DATA)
000566  f89d0020          LDRB     r0,[sp,#0x20]
00056a  2879              CMP      r0,#0x79
00056c  d010              BEQ      |L1.1424|
;;;685    	{
;;;686    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
00056e  f7fffffe          BL       OSTimeGet
000572  49b8              LDR      r1,|L1.2132|
000574  6809              LDR      r1,[r1,#0]  ; coin_timeout
000576  1a40              SUBS     r0,r0,r1
000578  f64031b8          MOV      r1,#0xbb8
00057c  4288              CMP      r0,r1
00057e  d905              BLS      |L1.1420|
;;;687    		{
;;;688    			set_coin_status(0xFF);
000580  20ff              MOVS     r0,#0xff
000582  f7fffffe          BL       set_coin_status
;;;689    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000586  48af              LDR      r0,|L1.2116|
000588  49af              LDR      r1,|L1.2120|
00058a  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.1420|
;;;690    		}
;;;691    		return;
;;;692    	}
;;;693    	else
;;;694    	{
;;;695    		if(err==MDB_RECEIVE_DATA)
;;;696    		{
;;;697    			uint8_t ggerr[24];
;;;698    			for(i=0;i<24;i++)
;;;699    				ggerr[i]=0;
;;;700    			for(i=0;i<rx_len;i+=2)//每两个字节表示一个状态
;;;701    				ggerr[rx[i]]=rx[i+1];
;;;702    			if(coinchanger.extenderr[0x15]==0 && ggerr[0x15]!=0)
;;;703    				coinset=0xFB;
;;;704    			if(coinchanger.extenderr[0x15]!=0 && ggerr[0x15]==0)
;;;705    				coinset=1;
;;;706    			set_coin_status(coinset);
;;;707    			for(i=0;i<24;i++)
;;;708    				coinchanger.extenderr[i]=ggerr[i];
;;;709    		}
;;;710    		coinequip.EQIU_FUNC=Coin_Setup;
;;;711    		coin_timeout[0]=OSTimeGet();
;;;712    	}
;;;713    }
00058c  b009              ADD      sp,sp,#0x24
00058e  bd30              POP      {r4,r5,pc}
                  |L1.1424|
000590  f89d0020          LDRB     r0,[sp,#0x20]         ;695
000594  2879              CMP      r0,#0x79              ;695
000596  d13e              BNE      |L1.1558|
000598  2400              MOVS     r4,#0                 ;698
00059a  e004              B        |L1.1446|
                  |L1.1436|
00059c  2000              MOVS     r0,#0                 ;699
00059e  a901              ADD      r1,sp,#4              ;699
0005a0  5508              STRB     r0,[r1,r4]            ;699
0005a2  1c60              ADDS     r0,r4,#1              ;698
0005a4  b2c4              UXTB     r4,r0                 ;698
                  |L1.1446|
0005a6  2c18              CMP      r4,#0x18              ;698
0005a8  dbf8              BLT      |L1.1436|
0005aa  2400              MOVS     r4,#0                 ;700
0005ac  e008              B        |L1.1472|
                  |L1.1454|
0005ae  1c60              ADDS     r0,r4,#1              ;701
0005b0  f8150010          LDRB     r0,[r5,r0,LSL #1]     ;701
0005b4  f8351014          LDRH     r1,[r5,r4,LSL #1]     ;701
0005b8  aa01              ADD      r2,sp,#4              ;701
0005ba  5450              STRB     r0,[r2,r1]            ;701
0005bc  1ca0              ADDS     r0,r4,#2              ;700
0005be  b2c4              UXTB     r4,r0                 ;700
                  |L1.1472|
0005c0  f8bd001c          LDRH     r0,[sp,#0x1c]         ;700
0005c4  4284              CMP      r4,r0                 ;700
0005c6  dbf2              BLT      |L1.1454|
0005c8  48a0              LDR      r0,|L1.2124|
0005ca  3808              SUBS     r0,r0,#8              ;702
0005cc  f8b00058          LDRH     r0,[r0,#0x58]         ;702
0005d0  b928              CBNZ     r0,|L1.1502|
0005d2  f89d0019          LDRB     r0,[sp,#0x19]         ;702
0005d6  b110              CBZ      r0,|L1.1502|
0005d8  20fb              MOVS     r0,#0xfb              ;703
0005da  49a0              LDR      r1,|L1.2140|
0005dc  7008              STRB     r0,[r1,#0]            ;703
                  |L1.1502|
0005de  489b              LDR      r0,|L1.2124|
0005e0  3808              SUBS     r0,r0,#8              ;704
0005e2  f8b00058          LDRH     r0,[r0,#0x58]         ;704
0005e6  b128              CBZ      r0,|L1.1524|
0005e8  f89d0019          LDRB     r0,[sp,#0x19]         ;704
0005ec  b910              CBNZ     r0,|L1.1524|
0005ee  2001              MOVS     r0,#1                 ;705
0005f0  499a              LDR      r1,|L1.2140|
0005f2  7008              STRB     r0,[r1,#0]            ;705
                  |L1.1524|
0005f4  4899              LDR      r0,|L1.2140|
0005f6  7800              LDRB     r0,[r0,#0]            ;706  ; coinset
0005f8  f7fffffe          BL       set_coin_status
0005fc  2400              MOVS     r4,#0                 ;707
0005fe  e007              B        |L1.1552|
                  |L1.1536|
000600  a801              ADD      r0,sp,#4              ;708
000602  5d01              LDRB     r1,[r0,r4]            ;708
000604  4891              LDR      r0,|L1.2124|
000606  3026              ADDS     r0,r0,#0x26           ;708
000608  f8201014          STRH     r1,[r0,r4,LSL #1]     ;708
00060c  1c60              ADDS     r0,r4,#1              ;707
00060e  b2c4              UXTB     r4,r0                 ;707
                  |L1.1552|
000610  2c18              CMP      r4,#0x18              ;707
000612  dbf5              BLT      |L1.1536|
000614  bf00              NOP                            ;709
                  |L1.1558|
000616  4892              LDR      r0,|L1.2144|
000618  498b              LDR      r1,|L1.2120|
00061a  6008              STR      r0,[r1,#0]            ;710  ; coinequip
00061c  f7fffffe          BL       OSTimeGet
000620  498c              LDR      r1,|L1.2132|
000622  6008              STR      r0,[r1,#0]            ;711  ; coin_timeout
000624  bf00              NOP      
000626  e7b1              B        |L1.1420|
;;;714    	
                          ENDP

                  Payout_Status PROC
;;;531    
;;;532    void Payout_Status(void)
000628  e92d47ff          PUSH     {r0-r10,lr}
;;;533    {
;;;534    	uint8_t err;
;;;535    	uint16_t *rx, rx_len;
;;;536    	FSMMSG *coinmsg;
;;;537    	
;;;538    	coin_cmd[0]=COIN_EXP;
00062c  200f              MOVS     r0,#0xf
00062e  498a              LDR      r1,|L1.2136|
000630  7008              STRB     r0,[r1,#0]
;;;539    	coin_cmd[1]=0x03;
000632  2003              MOVS     r0,#3
000634  7048              STRB     r0,[r1,#1]
;;;540    	rx = mdb_send_cmd(coin_cmd,2,1,COIN_NO_RESPENSE*5, &err, &rx_len);
000636  a802              ADD      r0,sp,#8
000638  a903              ADD      r1,sp,#0xc
00063a  2332              MOVS     r3,#0x32
00063c  2201              MOVS     r2,#1
00063e  e9cd1000          STRD     r1,r0,[sp,#0]
000642  2102              MOVS     r1,#2
000644  4884              LDR      r0,|L1.2136|
000646  f7fffffe          BL       mdb_send_cmd
00064a  4680              MOV      r8,r0
;;;541    	if(err!=MDB_RECEIVE_DATA && err!=MDB_RECEIVE_ACK)
00064c  f89d000c          LDRB     r0,[sp,#0xc]
000650  2879              CMP      r0,#0x79
000652  d014              BEQ      |L1.1662|
000654  f89d000c          LDRB     r0,[sp,#0xc]
000658  2878              CMP      r0,#0x78
00065a  d010              BEQ      |L1.1662|
;;;542    	{
;;;543    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
00065c  f7fffffe          BL       OSTimeGet
000660  497c              LDR      r1,|L1.2132|
000662  6809              LDR      r1,[r1,#0]  ; coin_timeout
000664  1a40              SUBS     r0,r0,r1
000666  f64031b8          MOV      r1,#0xbb8
00066a  4288              CMP      r0,r1
00066c  d905              BLS      |L1.1658|
;;;544    		{
;;;545    			set_coin_status(0xFF);
00066e  20ff              MOVS     r0,#0xff
000670  f7fffffe          BL       set_coin_status
;;;546    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000674  4873              LDR      r0,|L1.2116|
000676  4974              LDR      r1,|L1.2120|
000678  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.1658|
;;;547    		}
;;;548    		return;
;;;549    	}
;;;550    	else
;;;551    	{
;;;552    		if(err==MDB_RECEIVE_DATA)
;;;553    		{
;;;554    			uint8_t i,num;
;;;555    			uint32_t value;
;;;556    			
;;;557    			coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;558    			assert_param(coinmsg);
;;;559    			coinmsg->type=MsgCOIN;
;;;560    			coinmsg->stype=M_CS_PAYRESULT_LEV3;
;;;561    			for(i=0;i<16;i++)
;;;562    			{
;;;563    				num=rx[i];//数量
;;;564    				if(num!=0)//这里允许返回枚数为0	
;;;565    				{			
;;;566    					value=coinchanger.par_value[i]*coinfactor;//面值
;;;567    					if(value!=0)
;;;568    					{
;;;569    						savedispense(value,num);
;;;570    						if(credit_get()>=value*num)
;;;571    						credit_set(credit_get() - value*num);//找零后余额
;;;572    					}
;;;573    				}		
;;;574    			}
;;;575    			if(send_fsm_msg(coinmsg)!=TRUE)
;;;576    				release_fsm_msg(coinmsg);
;;;577    			
;;;578    			coinchanger.allvalue=0;//金额清零
;;;579    			coinequip.cmd_status=cmd_status_complete;
;;;580    			coinequip.cmd_type=M_CS_POLL;
;;;581    			coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;582    			coin_timeout[0]=OSTimeGet();
;;;583    		}
;;;584    		else
;;;585    		if(err==MDB_RECEIVE_ACK)//硬币器忙
;;;586    		{
;;;587    			coin_timeout[0]=OSTimeGet();
;;;588    			return;
;;;589    		}
;;;590    	}
;;;591    }
00067a  e8bd87ff          POP      {r0-r10,pc}
                  |L1.1662|
00067e  f89d000c          LDRB     r0,[sp,#0xc]          ;552
000682  2879              CMP      r0,#0x79              ;552
000684  d140              BNE      |L1.1800|
000686  2000              MOVS     r0,#0                 ;557
000688  f7fffffe          BL       apply_fsm_msg
00068c  4606              MOV      r6,r0                 ;557
00068e  2002              MOVS     r0,#2                 ;559
000690  7030              STRB     r0,[r6,#0]            ;559
000692  200b              MOVS     r0,#0xb               ;560
000694  7070              STRB     r0,[r6,#1]            ;560
000696  2700              MOVS     r7,#0                 ;561
000698  e01c              B        |L1.1748|
                  |L1.1690|
00069a  f8184017          LDRB     r4,[r8,r7,LSL #1]     ;563
00069e  b1bc              CBZ      r4,|L1.1744|
0006a0  486a              LDR      r0,|L1.2124|
0006a2  5dc0              LDRB     r0,[r0,r7]            ;566
0006a4  496a              LDR      r1,|L1.2128|
0006a6  6809              LDR      r1,[r1,#0]            ;566  ; coinfactor
0006a8  fb00f501          MUL      r5,r0,r1              ;566
0006ac  b185              CBZ      r5,|L1.1744|
0006ae  b2a8              UXTH     r0,r5                 ;569
0006b0  4621              MOV      r1,r4                 ;569
0006b2  f7fffffe          BL       savedispense
0006b6  f7fffffe          BL       credit_get
0006ba  fb05f104          MUL      r1,r5,r4              ;570
0006be  4288              CMP      r0,r1                 ;570
0006c0  d306              BCC      |L1.1744|
0006c2  f7fffffe          BL       credit_get
0006c6  fb050914          MLS      r9,r5,r4,r0           ;571
0006ca  4648              MOV      r0,r9                 ;571
0006cc  f7fffffe          BL       credit_set
                  |L1.1744|
0006d0  1c78              ADDS     r0,r7,#1              ;561
0006d2  b2c7              UXTB     r7,r0                 ;561
                  |L1.1748|
0006d4  2f10              CMP      r7,#0x10              ;561
0006d6  dbe0              BLT      |L1.1690|
0006d8  4630              MOV      r0,r6                 ;575
0006da  f7fffffe          BL       send_fsm_msg
0006de  2801              CMP      r0,#1                 ;575
0006e0  d002              BEQ      |L1.1768|
0006e2  4630              MOV      r0,r6                 ;576
0006e4  f7fffffe          BL       release_fsm_msg
                  |L1.1768|
0006e8  2000              MOVS     r0,#0                 ;578
0006ea  4958              LDR      r1,|L1.2124|
0006ec  3908              SUBS     r1,r1,#8              ;578
0006ee  8548              STRH     r0,[r1,#0x2a]         ;578
0006f0  2003              MOVS     r0,#3                 ;579
0006f2  4955              LDR      r1,|L1.2120|
0006f4  7148              STRB     r0,[r1,#5]            ;579
0006f6  2004              MOVS     r0,#4                 ;580
0006f8  7188              STRB     r0,[r1,#6]            ;580
0006fa  485a              LDR      r0,|L1.2148|
0006fc  6008              STR      r0,[r1,#0]            ;581  ; coinequip
0006fe  f7fffffe          BL       OSTimeGet
000702  4954              LDR      r1,|L1.2132|
000704  6008              STR      r0,[r1,#0]            ;582  ; coin_timeout
000706  e008              B        |L1.1818|
                  |L1.1800|
000708  f89d000c          LDRB     r0,[sp,#0xc]          ;585
00070c  2878              CMP      r0,#0x78              ;585
00070e  d104              BNE      |L1.1818|
000710  f7fffffe          BL       OSTimeGet
000714  494f              LDR      r1,|L1.2132|
000716  6008              STR      r0,[r1,#0]            ;587  ; coin_timeout
000718  e7af              B        |L1.1658|
                  |L1.1818|
00071a  bf00              NOP      
00071c  e7ad              B        |L1.1658|
;;;592    
                          ENDP

                  Payout_Value PROC
;;;593    void Payout_Value(void)
00071e  b57f              PUSH     {r0-r6,lr}
;;;594    {
;;;595    	uint8_t err;
;;;596    	uint16_t *rx, rx_len;
;;;597    	FSMMSG *coinmsg;
;;;598    	
;;;599    	coin_cmd[0]=COIN_EXP;
000720  200f              MOVS     r0,#0xf
000722  494d              LDR      r1,|L1.2136|
000724  7008              STRB     r0,[r1,#0]
;;;600    	coin_cmd[1]=0x04;
000726  2004              MOVS     r0,#4
000728  7048              STRB     r0,[r1,#1]
;;;601    	//while(err!=MDB_RECEIVE_ACK && i<200)//加快退币速度
;;;602    	{
;;;603    		rx = mdb_send_cmd(coin_cmd,2,1,COIN_NO_RESPENSE, &err, &rx_len);
00072a  a802              ADD      r0,sp,#8
00072c  a903              ADD      r1,sp,#0xc
00072e  230a              MOVS     r3,#0xa
000730  2201              MOVS     r2,#1
000732  e9cd1000          STRD     r1,r0,[sp,#0]
000736  2102              MOVS     r1,#2
000738  4847              LDR      r0,|L1.2136|
00073a  f7fffffe          BL       mdb_send_cmd
00073e  4605              MOV      r5,r0
;;;604    		if(err!=MDB_RECEIVE_DATA && err!=MDB_RECEIVE_ACK)
000740  f89d000c          LDRB     r0,[sp,#0xc]
000744  2879              CMP      r0,#0x79
000746  d013              BEQ      |L1.1904|
000748  f89d000c          LDRB     r0,[sp,#0xc]
00074c  2878              CMP      r0,#0x78
00074e  d00f              BEQ      |L1.1904|
;;;605    		{
;;;606    			if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
000750  f7fffffe          BL       OSTimeGet
000754  493f              LDR      r1,|L1.2132|
000756  6809              LDR      r1,[r1,#0]  ; coin_timeout
000758  1a40              SUBS     r0,r0,r1
00075a  f64031b8          MOV      r1,#0xbb8
00075e  4288              CMP      r0,r1
000760  d905              BLS      |L1.1902|
;;;607    			{
;;;608    				set_coin_status(0xFF);
000762  20ff              MOVS     r0,#0xff
000764  f7fffffe          BL       set_coin_status
;;;609    				coinequip.EQIU_FUNC=CoinChanger_Reset;
000768  4836              LDR      r0,|L1.2116|
00076a  4937              LDR      r1,|L1.2120|
00076c  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.1902|
;;;610    			}
;;;611    			return;
;;;612    		}
;;;613    		else
;;;614    		{
;;;615    			if(err==MDB_RECEIVE_DATA)
;;;616    			{
;;;617    				if(rx[0]==0)//没有退币
;;;618    				{
;;;619    					coin_timeout[0]=OSTimeGet();
;;;620    					return;
;;;621    				}
;;;622    				coinmsg=apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
;;;623    				assert_param(coinmsg);
;;;624    				coinmsg->type=MsgCOIN;
;;;625    				coinmsg->stype=M_CS_DISPENSED;
;;;626    				coinmsg->value=rx[0]*coinfactor;
;;;627    				if(send_fsm_msg(coinmsg)!=TRUE)
;;;628    					release_fsm_msg(coinmsg);
;;;629    				//credit-=coinmsg->value;//找零后余额
;;;630    			}
;;;631    			else
;;;632    			if(err==MDB_RECEIVE_ACK)//退币完成
;;;633    			{
;;;634    				coinequip.EQIU_FUNC=Payout_Status;
;;;635    				coin_timeout[0]=OSTimeGet();
;;;636    			}
;;;637    		}
;;;638    	}
;;;639    }
00076e  bd7f              POP      {r0-r6,pc}
                  |L1.1904|
000770  f89d000c          LDRB     r0,[sp,#0xc]          ;615
000774  2879              CMP      r0,#0x79              ;615
000776  d11c              BNE      |L1.1970|
000778  8828              LDRH     r0,[r5,#0]            ;617
00077a  b920              CBNZ     r0,|L1.1926|
00077c  f7fffffe          BL       OSTimeGet
000780  4934              LDR      r1,|L1.2132|
000782  6008              STR      r0,[r1,#0]            ;619  ; coin_timeout
000784  e7f3              B        |L1.1902|
                  |L1.1926|
000786  2000              MOVS     r0,#0                 ;622
000788  f7fffffe          BL       apply_fsm_msg
00078c  4604              MOV      r4,r0                 ;622
00078e  2002              MOVS     r0,#2                 ;624
000790  7020              STRB     r0,[r4,#0]            ;624
000792  2001              MOVS     r0,#1                 ;625
000794  7060              STRB     r0,[r4,#1]            ;625
000796  8828              LDRH     r0,[r5,#0]            ;626
000798  492d              LDR      r1,|L1.2128|
00079a  6809              LDR      r1,[r1,#0]            ;626  ; coinfactor
00079c  4348              MULS     r0,r1,r0              ;626
00079e  6060              STR      r0,[r4,#4]            ;626
0007a0  4620              MOV      r0,r4                 ;627
0007a2  f7fffffe          BL       send_fsm_msg
0007a6  2801              CMP      r0,#1                 ;627
0007a8  d00f              BEQ      |L1.1994|
0007aa  4620              MOV      r0,r4                 ;628
0007ac  f7fffffe          BL       release_fsm_msg
0007b0  e00b              B        |L1.1994|
                  |L1.1970|
0007b2  f89d000c          LDRB     r0,[sp,#0xc]          ;632
0007b6  2878              CMP      r0,#0x78              ;632
0007b8  d107              BNE      |L1.1994|
0007ba  f2af1093          ADR      r0,Payout_Status + 1
0007be  4922              LDR      r1,|L1.2120|
0007c0  6008              STR      r0,[r1,#0]            ;634  ; coinequip
0007c2  f7fffffe          BL       OSTimeGet
0007c6  4923              LDR      r1,|L1.2132|
0007c8  6008              STR      r0,[r1,#0]            ;635  ; coin_timeout
                  |L1.1994|
0007ca  bf00              NOP      
0007cc  e7cf              B        |L1.1902|
;;;640    
                          ENDP

                  Coin_Dispense_CMD PROC
;;;641    void Coin_Dispense_CMD(void)
0007ce  b51f              PUSH     {r0-r4,lr}
;;;642    {
;;;643     	uint8_t err;
;;;644     	uint16_t *rx, rx_len;
;;;645    	rx = rx;//防止编译器报错
0007d0  bf00              NOP      
;;;646    	
;;;647    	if(coinchanger.level>2 && coinchanger.changetype==1)//层级3且支持扩展找零
0007d2  481e              LDR      r0,|L1.2124|
0007d4  3808              SUBS     r0,r0,#8
0007d6  7800              LDRB     r0,[r0,#0]  ; coinchanger
0007d8  2802              CMP      r0,#2
0007da  dd11              BLE      |L1.2048|
0007dc  481b              LDR      r0,|L1.2124|
0007de  3808              SUBS     r0,r0,#8
0007e0  f890005e          LDRB     r0,[r0,#0x5e]  ; coinchanger
0007e4  2801              CMP      r0,#1
0007e6  d10b              BNE      |L1.2048|
;;;648    		rx = mdb_send_cmd(coin_cmd2,3,1,COIN_NO_RESPENSE, &err, &rx_len);
0007e8  a802              ADD      r0,sp,#8
0007ea  a903              ADD      r1,sp,#0xc
0007ec  230a              MOVS     r3,#0xa
0007ee  2201              MOVS     r2,#1
0007f0  e9cd1000          STRD     r1,r0,[sp,#0]
0007f4  2103              MOVS     r1,#3
0007f6  481c              LDR      r0,|L1.2152|
0007f8  f7fffffe          BL       mdb_send_cmd
0007fc  4604              MOV      r4,r0
0007fe  e00a              B        |L1.2070|
                  |L1.2048|
;;;649    	else
;;;650    		rx = mdb_send_cmd(coin_cmd2,2,1,COIN_NO_RESPENSE, &err, &rx_len);
000800  a802              ADD      r0,sp,#8
000802  a903              ADD      r1,sp,#0xc
000804  230a              MOVS     r3,#0xa
000806  2201              MOVS     r2,#1
000808  e9cd1000          STRD     r1,r0,[sp,#0]
00080c  2102              MOVS     r1,#2
00080e  4816              LDR      r0,|L1.2152|
000810  f7fffffe          BL       mdb_send_cmd
000814  4604              MOV      r4,r0
                  |L1.2070|
;;;651    	if(err!=MDB_RECEIVE_ACK)
000816  f89d000c          LDRB     r0,[sp,#0xc]
00081a  2878              CMP      r0,#0x78
00081c  d026              BEQ      |L1.2156|
;;;652    	{
;;;653    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
00081e  f7fffffe          BL       OSTimeGet
000822  490c              LDR      r1,|L1.2132|
000824  6809              LDR      r1,[r1,#0]  ; coin_timeout
000826  1a40              SUBS     r0,r0,r1
000828  f64031b8          MOV      r1,#0xbb8
00082c  4288              CMP      r0,r1
00082e  d905              BLS      |L1.2108|
;;;654    		{
;;;655    			set_coin_status(0xFF);
000830  20ff              MOVS     r0,#0xff
000832  f7fffffe          BL       set_coin_status
;;;656    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000836  4803              LDR      r0,|L1.2116|
000838  4903              LDR      r1,|L1.2120|
00083a  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.2108|
;;;657    		}
;;;658    		return;
;;;659    	}
;;;660    	else
;;;661    	if(err==MDB_RECEIVE_ACK)
;;;662    	{
;;;663    		if(coinchanger.level>2 && coinchanger.changetype==1)
;;;664    		{
;;;665    			coinequip.EQIU_FUNC=Payout_Value;
;;;666    		}
;;;667    		else
;;;668    		{
;;;669    			coinequip.cmd_status=cmd_status_start;//需要poll监控
;;;670    			coinequip.EQIU_FUNC=Coin_Poll;
;;;671    		}
;;;672    		coin_timeout[0]=OSTimeGet();
;;;673    	}
;;;674    }
00083c  bd1f              POP      {r0-r4,pc}
00083e  0000              DCW      0x0000
                  |L1.2112|
                          DCD      coinchangenum
                  |L1.2116|
                          DCD      CoinChanger_Reset
                  |L1.2120|
                          DCD      coinequip
                  |L1.2124|
                          DCD      coinchanger+0x8
                  |L1.2128|
                          DCD      coinfactor
                  |L1.2132|
                          DCD      coin_timeout
                  |L1.2136|
                          DCD      coin_cmd
                  |L1.2140|
                          DCD      coinset
                  |L1.2144|
                          DCD      Coin_Setup
                  |L1.2148|
                          DCD      Coin_TubeStatus
                  |L1.2152|
                          DCD      coin_cmd2
                  |L1.2156|
00086c  f89d000c          LDRB     r0,[sp,#0xc]          ;661
000870  2878              CMP      r0,#0x78              ;661
000872  d117              BNE      |L1.2212|
000874  48fe              LDR      r0,|L1.3184|
000876  7800              LDRB     r0,[r0,#0]            ;663  ; coinchanger
000878  2802              CMP      r0,#2                 ;663
00087a  dd09              BLE      |L1.2192|
00087c  48fc              LDR      r0,|L1.3184|
00087e  f890005e          LDRB     r0,[r0,#0x5e]         ;663  ; coinchanger
000882  2801              CMP      r0,#1                 ;663
000884  d104              BNE      |L1.2192|
000886  f2af1069          ADR      r0,Payout_Value + 1
00088a  49fa              LDR      r1,|L1.3188|
00088c  6008              STR      r0,[r1,#0]            ;665  ; coinequip
00088e  e005              B        |L1.2204|
                  |L1.2192|
000890  2001              MOVS     r0,#1                 ;669
000892  49f8              LDR      r1,|L1.3188|
000894  7148              STRB     r0,[r1,#5]            ;669
000896  f2af60ad          ADR      r0,Coin_Poll + 1
00089a  6008              STR      r0,[r1,#0]            ;670  ; coinequip
                  |L1.2204|
00089c  f7fffffe          BL       OSTimeGet
0008a0  49f5              LDR      r1,|L1.3192|
0008a2  6008              STR      r0,[r1,#0]            ;672  ; coin_timeout
                  |L1.2212|
0008a4  bf00              NOP      
0008a6  bd1f              POP      {r0-r4,pc}
;;;675    
                          ENDP

                  Coin_Type PROC
;;;753    
;;;754    void Coin_Type(void)//禁/使能硬币器
0008a8  b51f              PUSH     {r0-r4,lr}
;;;755    {
;;;756    	uint8_t err;
;;;757    	uint16_t *rx, rx_len;
;;;758    	rx = rx;//防止编译器报错
0008aa  bf00              NOP      
;;;759    	
;;;760    	if(coinset==1)//只有正常状态才使能，其他都认为是非正常状态
0008ac  48f3              LDR      r0,|L1.3196|
0008ae  7800              LDRB     r0,[r0,#0]  ; coinset
0008b0  2801              CMP      r0,#1
0008b2  d108              BNE      |L1.2246|
;;;761    	{
;;;762    		coin_cmd[0]=COIN_TYPE;
0008b4  200c              MOVS     r0,#0xc
0008b6  49f2              LDR      r1,|L1.3200|
0008b8  7008              STRB     r0,[r1,#0]
;;;763    		//添加对各币种的支持
;;;764    		coin_cmd[1]=0xFF;
0008ba  20ff              MOVS     r0,#0xff
0008bc  7048              STRB     r0,[r1,#1]
;;;765    		coin_cmd[2]=0xFF;
0008be  7088              STRB     r0,[r1,#2]
;;;766    		coin_cmd[3]=0xFF;
0008c0  70c8              STRB     r0,[r1,#3]
;;;767    		coin_cmd[4]=0xFF;
0008c2  7108              STRB     r0,[r1,#4]
0008c4  e007              B        |L1.2262|
                  |L1.2246|
;;;768    	}
;;;769    	else
;;;770    	{
;;;771    		coin_cmd[0]=COIN_TYPE;
0008c6  200c              MOVS     r0,#0xc
0008c8  49ed              LDR      r1,|L1.3200|
0008ca  7008              STRB     r0,[r1,#0]
;;;772    		coin_cmd[1]=0;
0008cc  2000              MOVS     r0,#0
0008ce  7048              STRB     r0,[r1,#1]
;;;773    		coin_cmd[2]=0;
0008d0  7088              STRB     r0,[r1,#2]
;;;774    		coin_cmd[3]=0;
0008d2  70c8              STRB     r0,[r1,#3]
;;;775    		coin_cmd[4]=0;
0008d4  7108              STRB     r0,[r1,#4]
                  |L1.2262|
;;;776    	}
;;;777    	rx = mdb_send_cmd(coin_cmd,5,1,COIN_NO_RESPENSE, &err, &rx_len);
0008d6  a802              ADD      r0,sp,#8
0008d8  a903              ADD      r1,sp,#0xc
0008da  230a              MOVS     r3,#0xa
0008dc  2201              MOVS     r2,#1
0008de  e9cd1000          STRD     r1,r0,[sp,#0]
0008e2  2105              MOVS     r1,#5
0008e4  48e6              LDR      r0,|L1.3200|
0008e6  f7fffffe          BL       mdb_send_cmd
0008ea  4604              MOV      r4,r0
;;;778    	if(err!=MDB_RECEIVE_ACK)
0008ec  f89d000c          LDRB     r0,[sp,#0xc]
0008f0  2878              CMP      r0,#0x78
0008f2  d00f              BEQ      |L1.2324|
;;;779    	{
;;;780    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
0008f4  f7fffffe          BL       OSTimeGet
0008f8  49df              LDR      r1,|L1.3192|
0008fa  6809              LDR      r1,[r1,#0]  ; coin_timeout
0008fc  1a40              SUBS     r0,r0,r1
0008fe  f64031b8          MOV      r1,#0xbb8
000902  4288              CMP      r0,r1
000904  d905              BLS      |L1.2322|
;;;781    		{
;;;782    			set_coin_status(0xFF);
000906  20ff              MOVS     r0,#0xff
000908  f7fffffe          BL       set_coin_status
;;;783    			coinequip.EQIU_FUNC=CoinChanger_Reset;
00090c  48dd              LDR      r0,|L1.3204|
00090e  49d9              LDR      r1,|L1.3188|
000910  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.2322|
;;;784    		}
;;;785    		return;
;;;786    	}
;;;787    	//TUBESTATUS命令后续流程
;;;788    	if(coinequip.cmd_status==cmd_status_need)//有其他命令
;;;789    	{
;;;790    		if(coinequip.cmd_type==M_CS_PAYOUT)//退币
;;;791    		{
;;;792    			coinequip.EQIU_FUNC=Coin_Dispense_CMD;
;;;793    			coin_timeout[0]=OSTimeGet();
;;;794    		}
;;;795    		return;//这里退出就不发状态转换
;;;796    	}
;;;797    	if(coinset==1)
;;;798    		set_coin_status(1);
;;;799    	else
;;;800    	if(coinset==0)
;;;801    		set_coin_status(0);
;;;802    	else
;;;803    		set_coin_status(coinset);
;;;804    		
;;;805    	if(coinchanger.level>2 \
;;;806    	&& coinchanger.diagnostic==1 \
;;;807    	&& (OSTimeGet()-coin_timeout[1]>OS_TICKS_PER_SEC*5))
;;;808    	{
;;;809    		coin_timeout[1]=OSTimeGet();
;;;810    		coinequip.EQIU_FUNC=Coin_Diagnostic_Status;
;;;811    	}
;;;812    	else
;;;813    	{
;;;814    		if(OSTimeGet()-coin_timeout[1]>OS_TICKS_PER_SEC*5)
;;;815    		{
;;;816    			coin_timeout[1]=OSTimeGet();
;;;817    			coinequip.EQIU_FUNC=Coin_Setup;
;;;818    		}
;;;819    		else
;;;820    			coinequip.EQIU_FUNC=Coin_Poll;
;;;821    	}
;;;822    	coin_timeout[0]=OSTimeGet();
;;;823    }
000912  bd1f              POP      {r0-r4,pc}
                  |L1.2324|
000914  48d7              LDR      r0,|L1.3188|
000916  7940              LDRB     r0,[r0,#5]            ;788  ; coinequip
000918  b960              CBNZ     r0,|L1.2356|
00091a  48d6              LDR      r0,|L1.3188|
00091c  7980              LDRB     r0,[r0,#6]            ;790  ; coinequip
00091e  2802              CMP      r0,#2                 ;790
000920  d107              BNE      |L1.2354|
000922  f2af1055          ADR      r0,Coin_Dispense_CMD + 1
000926  49d3              LDR      r1,|L1.3188|
000928  6008              STR      r0,[r1,#0]            ;792  ; coinequip
00092a  f7fffffe          BL       OSTimeGet
00092e  49d2              LDR      r1,|L1.3192|
000930  6008              STR      r0,[r1,#0]            ;793  ; coin_timeout
                  |L1.2354|
000932  e7ee              B        |L1.2322|
                  |L1.2356|
000934  48d1              LDR      r0,|L1.3196|
000936  7800              LDRB     r0,[r0,#0]            ;797  ; coinset
000938  2801              CMP      r0,#1                 ;797
00093a  d102              BNE      |L1.2370|
00093c  f7fffffe          BL       set_coin_status
000940  e00a              B        |L1.2392|
                  |L1.2370|
000942  48ce              LDR      r0,|L1.3196|
000944  7800              LDRB     r0,[r0,#0]            ;800  ; coinset
000946  b918              CBNZ     r0,|L1.2384|
000948  2000              MOVS     r0,#0                 ;801
00094a  f7fffffe          BL       set_coin_status
00094e  e003              B        |L1.2392|
                  |L1.2384|
000950  48ca              LDR      r0,|L1.3196|
000952  7800              LDRB     r0,[r0,#0]            ;803  ; coinset
000954  f7fffffe          BL       set_coin_status
                  |L1.2392|
000958  48c5              LDR      r0,|L1.3184|
00095a  7800              LDRB     r0,[r0,#0]            ;805  ; coinchanger
00095c  2802              CMP      r0,#2                 ;805
00095e  dd16              BLE      |L1.2446|
000960  48c3              LDR      r0,|L1.3184|
000962  f890005f          LDRB     r0,[r0,#0x5f]         ;806  ; coinchanger
000966  2801              CMP      r0,#1                 ;806
000968  d111              BNE      |L1.2446|
00096a  f7fffffe          BL       OSTimeGet
00096e  49c2              LDR      r1,|L1.3192|
000970  6849              LDR      r1,[r1,#4]            ;807  ; coin_timeout
000972  1a40              SUBS     r0,r0,r1              ;807
000974  f2413188          MOV      r1,#0x1388            ;807
000978  4288              CMP      r0,r1                 ;807
00097a  d908              BLS      |L1.2446|
00097c  f7fffffe          BL       OSTimeGet
000980  49bd              LDR      r1,|L1.3192|
000982  6048              STR      r0,[r1,#4]            ;809  ; coin_timeout
000984  f2af4045          ADR      r0,Coin_Diagnostic_Status + 1
000988  49ba              LDR      r1,|L1.3188|
00098a  6008              STR      r0,[r1,#0]            ;810  ; coinequip
00098c  e014              B        |L1.2488|
                  |L1.2446|
00098e  f7fffffe          BL       OSTimeGet
000992  49b9              LDR      r1,|L1.3192|
000994  6849              LDR      r1,[r1,#4]            ;814  ; coin_timeout
000996  1a40              SUBS     r0,r0,r1              ;814
000998  f2413188          MOV      r1,#0x1388            ;814
00099c  4288              CMP      r0,r1                 ;814
00099e  d907              BLS      |L1.2480|
0009a0  f7fffffe          BL       OSTimeGet
0009a4  49b4              LDR      r1,|L1.3192|
0009a6  6048              STR      r0,[r1,#4]            ;816  ; coin_timeout
0009a8  48b7              LDR      r0,|L1.3208|
0009aa  49b2              LDR      r1,|L1.3188|
0009ac  6008              STR      r0,[r1,#0]            ;817  ; coinequip
0009ae  e003              B        |L1.2488|
                  |L1.2480|
0009b0  f2af70c9          ADR      r0,Coin_Poll + 1
0009b4  49af              LDR      r1,|L1.3188|
0009b6  6008              STR      r0,[r1,#0]            ;820  ; coinequip
                  |L1.2488|
0009b8  f7fffffe          BL       OSTimeGet
0009bc  49ae              LDR      r1,|L1.3192|
0009be  6008              STR      r0,[r1,#0]            ;822  ; coin_timeout
0009c0  bf00              NOP      
0009c2  e7a6              B        |L1.2322|
;;;824    
                          ENDP

                  Coin_TubeStatus PROC
;;;714    	
;;;715    void Coin_TubeStatus(void)//储币管状态查询命令
0009c4  b57f              PUSH     {r0-r6,lr}
;;;716    {
;;;717    	uint8_t err,i;
;;;718    	uint16_t *rx, rx_len;
;;;719    	
;;;720    	if(coinequip.cmd_type==M_CS_INIT)//reset后第一次TUBESTATUS,等待500ms
0009c6  48ab              LDR      r0,|L1.3188|
0009c8  7980              LDRB     r0,[r0,#6]  ; coinequip
0009ca  2807              CMP      r0,#7
0009cc  d10b              BNE      |L1.2534|
;;;721    	{
;;;722    		if(OSTimeGet()-coin_timeout[1]<COIN_NO_RESPENSE*50)
0009ce  f7fffffe          BL       OSTimeGet
0009d2  49a9              LDR      r1,|L1.3192|
0009d4  6849              LDR      r1,[r1,#4]  ; coin_timeout
0009d6  1a40              SUBS     r0,r0,r1
0009d8  f5b07ffa          CMP      r0,#0x1f4
0009dc  d200              BCS      |L1.2528|
                  |L1.2526|
;;;723    			return;
;;;724    		coinequip.cmd_type=M_CS_POLL;
;;;725    	}
;;;726    		
;;;727    	coin_cmd[0]=COIN_TUBESTATUS;//储币管查询
;;;728    	rx = mdb_send_cmd(coin_cmd,1,1,COIN_NO_RESPENSE*5, &err, &rx_len);
;;;729    	if(err!=MDB_RECEIVE_DATA)
;;;730    	{
;;;731    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
;;;732    		{
;;;733    			set_coin_status(0xFF);
;;;734    			coinequip.EQIU_FUNC=CoinChanger_Reset;
;;;735    		}
;;;736    		return;
;;;737    	}
;;;738    	//对TUBESTATUS命令返回的结果的处理
;;;739    	coinchanger.allvalue=0;
;;;740    	coinchanger.full=(rx[0]<<8) | rx[1];
;;;741    	i=0;
;;;742    	while(coinchanger.par_value[i]!=0 && i<16)
;;;743    	{
;;;744    		coinchanger.store[i]=rx[i+2];
;;;745    		coinchanger.allvalue+=coinchanger.par_value[i]*coinchanger.store[i]*coinfactor;
;;;746    		i++;
;;;747    	}
;;;748    	
;;;749    	coinequip.EQIU_FUNC=Coin_Type;
;;;750    	coin_timeout[0]=OSTimeGet();
;;;751    }
0009de  bd7f              POP      {r0-r6,pc}
                  |L1.2528|
0009e0  2004              MOVS     r0,#4                 ;724
0009e2  49a4              LDR      r1,|L1.3188|
0009e4  7188              STRB     r0,[r1,#6]            ;724
                  |L1.2534|
0009e6  200a              MOVS     r0,#0xa               ;727
0009e8  49a5              LDR      r1,|L1.3200|
0009ea  7008              STRB     r0,[r1,#0]            ;727
0009ec  a802              ADD      r0,sp,#8              ;728
0009ee  a903              ADD      r1,sp,#0xc            ;728
0009f0  2332              MOVS     r3,#0x32              ;728
0009f2  2201              MOVS     r2,#1                 ;728
0009f4  e9cd1000          STRD     r1,r0,[sp,#0]         ;728
0009f8  4611              MOV      r1,r2                 ;728
0009fa  48a1              LDR      r0,|L1.3200|
0009fc  f7fffffe          BL       mdb_send_cmd
000a00  4605              MOV      r5,r0                 ;728
000a02  f89d000c          LDRB     r0,[sp,#0xc]          ;729
000a06  2879              CMP      r0,#0x79              ;729
000a08  d00f              BEQ      |L1.2602|
000a0a  f7fffffe          BL       OSTimeGet
000a0e  499a              LDR      r1,|L1.3192|
000a10  6809              LDR      r1,[r1,#0]            ;731  ; coin_timeout
000a12  1a40              SUBS     r0,r0,r1              ;731
000a14  f64031b8          MOV      r1,#0xbb8             ;731
000a18  4288              CMP      r0,r1                 ;731
000a1a  d905              BLS      |L1.2600|
000a1c  20ff              MOVS     r0,#0xff              ;733
000a1e  f7fffffe          BL       set_coin_status
000a22  4898              LDR      r0,|L1.3204|
000a24  4993              LDR      r1,|L1.3188|
000a26  6008              STR      r0,[r1,#0]            ;734  ; coinequip
                  |L1.2600|
000a28  e7d9              B        |L1.2526|
                  |L1.2602|
000a2a  2000              MOVS     r0,#0                 ;739
000a2c  4990              LDR      r1,|L1.3184|
000a2e  8548              STRH     r0,[r1,#0x2a]         ;739
000a30  8868              LDRH     r0,[r5,#2]            ;740
000a32  7829              LDRB     r1,[r5,#0]            ;740
000a34  ea402001          ORR      r0,r0,r1,LSL #8       ;740
000a38  498d              LDR      r1,|L1.3184|
000a3a  8308              STRH     r0,[r1,#0x18]         ;740
000a3c  2400              MOVS     r4,#0                 ;741
000a3e  e015              B        |L1.2668|
                  |L1.2624|
000a40  1ca0              ADDS     r0,r4,#2              ;744
000a42  f8151010          LDRB     r1,[r5,r0,LSL #1]     ;744
000a46  488a              LDR      r0,|L1.3184|
000a48  301a              ADDS     r0,r0,#0x1a           ;744
000a4a  5501              STRB     r1,[r0,r4]            ;744
000a4c  3812              SUBS     r0,r0,#0x12           ;745
000a4e  5d00              LDRB     r0,[r0,r4]            ;745
000a50  4987              LDR      r1,|L1.3184|
000a52  311a              ADDS     r1,r1,#0x1a           ;745
000a54  5d09              LDRB     r1,[r1,r4]            ;745
000a56  4348              MULS     r0,r1,r0              ;745
000a58  4985              LDR      r1,|L1.3184|
000a5a  8d49              LDRH     r1,[r1,#0x2a]         ;745  ; coinchanger
000a5c  4a8b              LDR      r2,|L1.3212|
000a5e  6812              LDR      r2,[r2,#0]            ;745  ; coinfactor
000a60  fb001002          MLA      r0,r0,r2,r1           ;745
000a64  4982              LDR      r1,|L1.3184|
000a66  8548              STRH     r0,[r1,#0x2a]         ;745
000a68  1c60              ADDS     r0,r4,#1              ;746
000a6a  b2c4              UXTB     r4,r0                 ;746
                  |L1.2668|
000a6c  4880              LDR      r0,|L1.3184|
000a6e  3008              ADDS     r0,r0,#8              ;742
000a70  5d00              LDRB     r0,[r0,r4]            ;742
000a72  b108              CBZ      r0,|L1.2680|
000a74  2c10              CMP      r4,#0x10              ;742
000a76  dbe3              BLT      |L1.2624|
                  |L1.2680|
000a78  f2af10d3          ADR      r0,Coin_Type + 1
000a7c  497d              LDR      r1,|L1.3188|
000a7e  6008              STR      r0,[r1,#0]            ;749  ; coinequip
000a80  f7fffffe          BL       OSTimeGet
000a84  497c              LDR      r1,|L1.3192|
000a86  6008              STR      r0,[r1,#0]            ;750  ; coin_timeout
000a88  bf00              NOP      
000a8a  e7a8              B        |L1.2526|
;;;752    
                          ENDP

                  Coin_Exp_Feature PROC
;;;456    
;;;457    void Coin_Exp_Feature(void)//扩展指令的功能使能
000a8c  b51f              PUSH     {r0-r4,lr}
;;;458    {
;;;459    	uint8_t err;
;;;460    	uint16_t *rx, rx_len;
;;;461    	rx = rx;//防止编译器报错
000a8e  bf00              NOP      
;;;462    	
;;;463    	coin_cmd[0]=0x0F;
000a90  200f              MOVS     r0,#0xf
000a92  497b              LDR      r1,|L1.3200|
000a94  7008              STRB     r0,[r1,#0]
;;;464    	coin_cmd[1]=0x01;
000a96  2001              MOVS     r0,#1
000a98  7048              STRB     r0,[r1,#1]
;;;465    	coin_cmd[2]=0x00;
000a9a  2000              MOVS     r0,#0
000a9c  7088              STRB     r0,[r1,#2]
;;;466    	coin_cmd[3]=0x00;
000a9e  70c8              STRB     r0,[r1,#3]
;;;467    	coin_cmd[4]=0x00;
000aa0  7108              STRB     r0,[r1,#4]
;;;468    	coin_cmd[5]=0x00;
000aa2  7148              STRB     r0,[r1,#5]
;;;469    	if(coinchanger.changetype==1)//如果有扩展找零方式
000aa4  4872              LDR      r0,|L1.3184|
000aa6  f890005e          LDRB     r0,[r0,#0x5e]  ; coinchanger
000aaa  2801              CMP      r0,#1
000aac  d104              BNE      |L1.2744|
;;;470    		coin_cmd[5]|=0x01;
000aae  4608              MOV      r0,r1
000ab0  7940              LDRB     r0,[r0,#5]  ; coin_cmd
000ab2  f0400001          ORR      r0,r0,#1
000ab6  7148              STRB     r0,[r1,#5]
                  |L1.2744|
;;;471    	if(coinchanger.diagnostic==1)//如果有扩展统计方式
000ab8  486d              LDR      r0,|L1.3184|
000aba  f890005f          LDRB     r0,[r0,#0x5f]  ; coinchanger
000abe  2801              CMP      r0,#1
000ac0  d105              BNE      |L1.2766|
;;;472    		coin_cmd[5]|=0x02;
000ac2  486f              LDR      r0,|L1.3200|
000ac4  7940              LDRB     r0,[r0,#5]  ; coin_cmd
000ac6  f0400002          ORR      r0,r0,#2
000aca  496d              LDR      r1,|L1.3200|
000acc  7148              STRB     r0,[r1,#5]
                  |L1.2766|
;;;473    	if(coinchanger.fill==1)//如果有扩展补币方式
000ace  4868              LDR      r0,|L1.3184|
000ad0  f8900060          LDRB     r0,[r0,#0x60]  ; coinchanger
000ad4  2801              CMP      r0,#1
000ad6  d103              BNE      |L1.2784|
;;;474    		coin_cmd[5]|=0x00;//暂时不用
000ad8  4869              LDR      r0,|L1.3200|
000ada  7940              LDRB     r0,[r0,#5]  ; coin_cmd
000adc  4968              LDR      r1,|L1.3200|
000ade  7148              STRB     r0,[r1,#5]
                  |L1.2784|
;;;475    	if(coinchanger.ftl==1)//如果有扩展补币方式
000ae0  4863              LDR      r0,|L1.3184|
000ae2  f8900061          LDRB     r0,[r0,#0x61]  ; coinchanger
000ae6  2801              CMP      r0,#1
000ae8  d103              BNE      |L1.2802|
;;;476    		coin_cmd[5]|=0x00;//暂时不用
000aea  4865              LDR      r0,|L1.3200|
000aec  7940              LDRB     r0,[r0,#5]  ; coin_cmd
000aee  4964              LDR      r1,|L1.3200|
000af0  7148              STRB     r0,[r1,#5]
                  |L1.2802|
;;;477    	rx = mdb_send_cmd(coin_cmd,6,1,COIN_NO_RESPENSE*5, &err, &rx_len);//发送扩展功能使能命令
000af2  a802              ADD      r0,sp,#8
000af4  a903              ADD      r1,sp,#0xc
000af6  2332              MOVS     r3,#0x32
000af8  2201              MOVS     r2,#1
000afa  e9cd1000          STRD     r1,r0,[sp,#0]
000afe  2106              MOVS     r1,#6
000b00  485f              LDR      r0,|L1.3200|
000b02  f7fffffe          BL       mdb_send_cmd
000b06  4604              MOV      r4,r0
;;;478    	if(err!=MDB_RECEIVE_ACK)
000b08  f89d000c          LDRB     r0,[sp,#0xc]
000b0c  2878              CMP      r0,#0x78
000b0e  d00f              BEQ      |L1.2864|
;;;479    	{
;;;480    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
000b10  f7fffffe          BL       OSTimeGet
000b14  4958              LDR      r1,|L1.3192|
000b16  6809              LDR      r1,[r1,#0]  ; coin_timeout
000b18  1a40              SUBS     r0,r0,r1
000b1a  f64031b8          MOV      r1,#0xbb8
000b1e  4288              CMP      r0,r1
000b20  d905              BLS      |L1.2862|
;;;481    		{
;;;482    			//DisplayLT("4",0,3,0);
;;;483    			set_coin_status(0xFF);
000b22  20ff              MOVS     r0,#0xff
000b24  f7fffffe          BL       set_coin_status
;;;484    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000b28  4856              LDR      r0,|L1.3204|
000b2a  4952              LDR      r1,|L1.3188|
000b2c  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.2862|
;;;485    		}
;;;486    		return;
;;;487    	}
;;;488    	coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;489    	coin_timeout[0]=OSTimeGet();
;;;490    }
000b2e  bd1f              POP      {r0-r4,pc}
                  |L1.2864|
000b30  f2af106f          ADR      r0,Coin_TubeStatus + 1
000b34  494f              LDR      r1,|L1.3188|
000b36  6008              STR      r0,[r1,#0]            ;488  ; coinequip
000b38  f7fffffe          BL       OSTimeGet
000b3c  494e              LDR      r1,|L1.3192|
000b3e  6008              STR      r0,[r1,#0]            ;489  ; coin_timeout
000b40  bf00              NOP      
000b42  e7f4              B        |L1.2862|
;;;491    
                          ENDP

                  Coin_Exp_Id PROC
;;;492    void Coin_Exp_Id(void)//扩展指令获取ID
000b44  b51f              PUSH     {r0-r4,lr}
;;;493    {
;;;494    	uint8_t err;
;;;495    	uint16_t *rx, rx_len;
;;;496    	
;;;497    	coin_cmd[0]=COIN_EXP;
000b46  200f              MOVS     r0,#0xf
000b48  494d              LDR      r1,|L1.3200|
000b4a  7008              STRB     r0,[r1,#0]
;;;498    	coin_cmd[1]=0x00;
000b4c  2000              MOVS     r0,#0
000b4e  7048              STRB     r0,[r1,#1]
;;;499    	rx = mdb_send_cmd(coin_cmd,2,1,COIN_NO_RESPENSE*10, &err, &rx_len);//发送扩展ID命令
000b50  a802              ADD      r0,sp,#8
000b52  a903              ADD      r1,sp,#0xc
000b54  2364              MOVS     r3,#0x64
000b56  2201              MOVS     r2,#1
000b58  e9cd1000          STRD     r1,r0,[sp,#0]
000b5c  2102              MOVS     r1,#2
000b5e  4848              LDR      r0,|L1.3200|
000b60  f7fffffe          BL       mdb_send_cmd
000b64  4604              MOV      r4,r0
;;;500    	if(err!=MDB_RECEIVE_DATA)
000b66  f89d000c          LDRB     r0,[sp,#0xc]
000b6a  2879              CMP      r0,#0x79
000b6c  d00f              BEQ      |L1.2958|
;;;501    	{
;;;502    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
000b6e  f7fffffe          BL       OSTimeGet
000b72  4941              LDR      r1,|L1.3192|
000b74  6809              LDR      r1,[r1,#0]  ; coin_timeout
000b76  1a40              SUBS     r0,r0,r1
000b78  f64031b8          MOV      r1,#0xbb8
000b7c  4288              CMP      r0,r1
000b7e  d905              BLS      |L1.2956|
;;;503    		{
;;;504    			//DisplayLT("3",0,2,0);
;;;505    			set_coin_status(0xFF);
000b80  20ff              MOVS     r0,#0xff
000b82  f7fffffe          BL       set_coin_status
;;;506    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000b86  483f              LDR      r0,|L1.3204|
000b88  493a              LDR      r1,|L1.3188|
000b8a  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.2956|
;;;507    		}
;;;508    		return;
;;;509    	}
;;;510    	else
;;;511    	{
;;;512    		//处理ID命令的返回
;;;513    		coinchanger.changetype=rx[32] & 0x01;		//找零方式
;;;514    		coinchanger.diagnostic=(rx[32]>>1) & 0x01;	//扩展状态查询
;;;515    		coinchanger.fill=(rx[32]>>2) & 0x01;			//补币
;;;516    		coinchanger.ftl=(rx[32]>>3) & 0x01; 			//ftl传输
;;;517    		
;;;518    		if(coinchanger.changetype \
;;;519    			|coinchanger.diagnostic \
;;;520    			|coinchanger.fill \
;;;521    			|coinchanger.ftl!=0)//虽然是level3,但是不支持所有扩展指令
;;;522    			coinequip.EQIU_FUNC=Coin_Exp_Feature;
;;;523    		else
;;;524    		{
;;;525    			//DisplayLT("7",0,6,0);
;;;526    			coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;527    		}
;;;528    		coin_timeout[0]=OSTimeGet();//计算超时时间
;;;529    	}
;;;530    }
000b8c  bd1f              POP      {r0-r4,pc}
                  |L1.2958|
000b8e  f8140f40          LDRB     r0,[r4,#0x40]!        ;513
000b92  f0000001          AND      r0,r0,#1              ;513
000b96  4936              LDR      r1,|L1.3184|
000b98  f881005e          STRB     r0,[r1,#0x5e]         ;513
000b9c  7820              LDRB     r0,[r4,#0]            ;514
000b9e  f3c00040          UBFX     r0,r0,#1,#1           ;514
000ba2  f881005f          STRB     r0,[r1,#0x5f]         ;514
000ba6  7820              LDRB     r0,[r4,#0]            ;515
000ba8  f3c00080          UBFX     r0,r0,#2,#1           ;515
000bac  f8810060          STRB     r0,[r1,#0x60]         ;515
000bb0  f8140940          LDRB     r0,[r4],#-0x40        ;516
000bb4  f3c000c0          UBFX     r0,r0,#3,#1           ;516
000bb8  f8810061          STRB     r0,[r1,#0x61]         ;516
000bbc  4608              MOV      r0,r1                 ;518
000bbe  f890005e          LDRB     r0,[r0,#0x5e]         ;518  ; coinchanger
000bc2  f891105f          LDRB     r1,[r1,#0x5f]         ;518  ; coinchanger
000bc6  4308              ORRS     r0,r0,r1              ;518
000bc8  4929              LDR      r1,|L1.3184|
000bca  f8911060          LDRB     r1,[r1,#0x60]         ;518  ; coinchanger
000bce  4308              ORRS     r0,r0,r1              ;518
000bd0  4927              LDR      r1,|L1.3184|
000bd2  f8911061          LDRB     r1,[r1,#0x61]         ;518  ; coinchanger
000bd6  b109              CBZ      r1,|L1.3036|
000bd8  2101              MOVS     r1,#1                 ;518
000bda  e000              B        |L1.3038|
                  |L1.3036|
000bdc  2100              MOVS     r1,#0                 ;518
                  |L1.3038|
000bde  4308              ORRS     r0,r0,r1              ;518
000be0  b120              CBZ      r0,|L1.3052|
000be2  f2af1057          ADR      r0,Coin_Exp_Feature + 1
000be6  4923              LDR      r1,|L1.3188|
000be8  6008              STR      r0,[r1,#0]            ;522  ; coinequip
000bea  e003              B        |L1.3060|
                  |L1.3052|
000bec  f2af202b          ADR      r0,Coin_TubeStatus + 1
000bf0  4920              LDR      r1,|L1.3188|
000bf2  6008              STR      r0,[r1,#0]            ;526  ; coinequip
                  |L1.3060|
000bf4  f7fffffe          BL       OSTimeGet
000bf8  491f              LDR      r1,|L1.3192|
000bfa  6008              STR      r0,[r1,#0]            ;528  ; coin_timeout
000bfc  bf00              NOP      
000bfe  e7c5              B        |L1.2956|
;;;531    
                          ENDP

                  Coin_Setup PROC
;;;362    
;;;363    void Coin_Setup(void)
000c00  b57f              PUSH     {r0-r6,lr}
;;;364    {
;;;365    	uint8_t err,i,flg=FALSE;
000c02  2600              MOVS     r6,#0
;;;366    	uint16_t *rx, rx_len;
;;;367    	
;;;368    	coin_cmd[0]=COIN_SETUP;
000c04  2009              MOVS     r0,#9
000c06  491e              LDR      r1,|L1.3200|
000c08  7008              STRB     r0,[r1,#0]
;;;369    	rx = mdb_send_cmd(coin_cmd,1,1,COIN_NO_RESPENSE*5, &err, &rx_len);//他妈的，居然要等30ms什么玩意啊
000c0a  a802              ADD      r0,sp,#8
000c0c  a903              ADD      r1,sp,#0xc
000c0e  2332              MOVS     r3,#0x32
000c10  2201              MOVS     r2,#1
000c12  e9cd1000          STRD     r1,r0,[sp,#0]
000c16  4611              MOV      r1,r2
000c18  4819              LDR      r0,|L1.3200|
000c1a  f7fffffe          BL       mdb_send_cmd
000c1e  4605              MOV      r5,r0
;;;370    	if(err!=MDB_RECEIVE_DATA)
000c20  f89d000c          LDRB     r0,[sp,#0xc]
000c24  2879              CMP      r0,#0x79
000c26  d00f              BEQ      |L1.3144|
;;;371    	{
;;;372    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)
000c28  f7fffffe          BL       OSTimeGet
000c2c  4912              LDR      r1,|L1.3192|
000c2e  6809              LDR      r1,[r1,#0]  ; coin_timeout
000c30  1a40              SUBS     r0,r0,r1
000c32  f64031b8          MOV      r1,#0xbb8
000c36  4288              CMP      r0,r1
000c38  d905              BLS      |L1.3142|
;;;373    		{
;;;374    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000c3a  4812              LDR      r0,|L1.3204|
000c3c  490d              LDR      r1,|L1.3188|
000c3e  6008              STR      r0,[r1,#0]  ; coinequip
;;;375    			set_coin_status(0xFF);
000c40  20ff              MOVS     r0,#0xff
000c42  f7fffffe          BL       set_coin_status
                  |L1.3142|
;;;376    		}
;;;377    		return;
;;;378    	}
;;;379    	//对SETUP命令返回的结果的处理
;;;380    	coinchanger.level=rx[0];
;;;381    	if(coin_level != 2)coinchanger.level=1;//金码硬币器,可能有问题
;;;382    	coinchanger.BCD=rx[2];
;;;383    	coinchanger.BCD+=rx[1]<<8;
;;;384    	coinchanger.factor=rx[3];
;;;385    	coinchanger.point=rx[4];
;;;386    	coinfactor=sysfactor;
;;;387    	for(i=0;i<coinchanger.point;i++)
;;;388    		coinfactor=coinfactor/10;
;;;389    	coinfactor=coinfactor*coinchanger.factor;
;;;390    	coinchanger.path=(rx[5]<<8)|rx[6];
;;;391    	for(i=0;i<16;i++)
;;;392    	{
;;;393    		if((coinchanger.path>>i)%2==1)
;;;394    			break;
;;;395    	}
;;;396    	coinchanger.lowest=i;
;;;397    	for(i=15;i>0;i--)
;;;398    	{
;;;399    		if((coinchanger.path>>i)%2==1)
;;;400    		break;
;;;401    	} 
;;;402    	coinchanger.highest=i;
;;;403    	
;;;404    	for(i=7;i<rx_len;i++)
;;;405    	{
;;;406    		if(flg==TRUE)
;;;407    		{
;;;408    			if(coinchanger.par_value[i-7-1]>rx[i] \
;;;409    			&& coinchanger.par_value[i-7-1]!=0 \
;;;410    			&& coinchanger.par_value[i-7-1]!=0xFF \
;;;411    			&& rx[i]!=0 \
;;;412    			&& rx[i]!=0xFF)//如果前面的面值大于后面的面值
;;;413    			{
;;;414    				return;
;;;415    			}
;;;416    		}
;;;417    		flg=TRUE;
;;;418    		coinchanger.par_value[i-7]=rx[i];
;;;419    	}
;;;420    	
;;;421    	if(coinchanger.level>2)//支持层级3
;;;422    	{
;;;423    		coinequip.EQIU_FUNC=Coin_Exp_Id;
;;;424    	}
;;;425    	else//支持层级3以下
;;;426    	{
;;;427    		coinequip.EQIU_FUNC=Coin_TubeStatus;
;;;428    	}
;;;429    	coin_timeout[0]=OSTimeGet();
;;;430    }
000c46  bd7f              POP      {r0-r6,pc}
                  |L1.3144|
000c48  7828              LDRB     r0,[r5,#0]            ;380
000c4a  4909              LDR      r1,|L1.3184|
000c4c  7008              STRB     r0,[r1,#0]            ;380
000c4e  4810              LDR      r0,|L1.3216|
000c50  7800              LDRB     r0,[r0,#0]            ;381  ; coin_level
000c52  2802              CMP      r0,#2                 ;381
000c54  d001              BEQ      |L1.3162|
000c56  2001              MOVS     r0,#1                 ;381
000c58  7008              STRB     r0,[r1,#0]            ;381
                  |L1.3162|
000c5a  88a8              LDRH     r0,[r5,#4]            ;382
000c5c  4904              LDR      r1,|L1.3184|
000c5e  8048              STRH     r0,[r1,#2]            ;382
000c60  4608              MOV      r0,r1                 ;383
000c62  8840              LDRH     r0,[r0,#2]            ;383  ; coinchanger
000c64  78a9              LDRB     r1,[r5,#2]            ;383
000c66  eb002001          ADD      r0,r0,r1,LSL #8       ;383
000c6a  4901              LDR      r1,|L1.3184|
000c6c  8048              STRH     r0,[r1,#2]            ;383
000c6e  e011              B        |L1.3220|
                  |L1.3184|
                          DCD      coinchanger
                  |L1.3188|
                          DCD      coinequip
                  |L1.3192|
                          DCD      coin_timeout
                  |L1.3196|
                          DCD      coinset
                  |L1.3200|
                          DCD      coin_cmd
                  |L1.3204|
                          DCD      CoinChanger_Reset
                  |L1.3208|
                          DCD      Coin_Setup
                  |L1.3212|
                          DCD      coinfactor
                  |L1.3216|
                          DCD      coin_level
                  |L1.3220|
000c94  79a8              LDRB     r0,[r5,#6]            ;384
000c96  7108              STRB     r0,[r1,#4]            ;384
000c98  7a28              LDRB     r0,[r5,#8]            ;385
000c9a  7148              STRB     r0,[r1,#5]            ;385
000c9c  48fe              LDR      r0,|L1.4248|
000c9e  6800              LDR      r0,[r0,#0]            ;386  ; sysfactor
000ca0  49fe              LDR      r1,|L1.4252|
000ca2  6008              STR      r0,[r1,#0]            ;386  ; coinfactor
000ca4  2400              MOVS     r4,#0                 ;387
000ca6  e008              B        |L1.3258|
                  |L1.3240|
000ca8  48fc              LDR      r0,|L1.4252|
000caa  6800              LDR      r0,[r0,#0]            ;388  ; coinfactor
000cac  210a              MOVS     r1,#0xa               ;388
000cae  fbb0f0f1          UDIV     r0,r0,r1              ;388
000cb2  49fa              LDR      r1,|L1.4252|
000cb4  6008              STR      r0,[r1,#0]            ;388  ; coinfactor
000cb6  1c60              ADDS     r0,r4,#1              ;387
000cb8  b2c4              UXTB     r4,r0                 ;387
                  |L1.3258|
000cba  48f9              LDR      r0,|L1.4256|
000cbc  7940              LDRB     r0,[r0,#5]            ;387  ; coinchanger
000cbe  42a0              CMP      r0,r4                 ;387
000cc0  dcf2              BGT      |L1.3240|
000cc2  48f7              LDR      r0,|L1.4256|
000cc4  7900              LDRB     r0,[r0,#4]            ;389  ; coinchanger
000cc6  49f5              LDR      r1,|L1.4252|
000cc8  6809              LDR      r1,[r1,#0]            ;389  ; coinfactor
000cca  4348              MULS     r0,r1,r0              ;389
000ccc  49f3              LDR      r1,|L1.4252|
000cce  6008              STR      r0,[r1,#0]            ;389  ; coinfactor
000cd0  89a8              LDRH     r0,[r5,#0xc]          ;390
000cd2  7aa9              LDRB     r1,[r5,#0xa]          ;390
000cd4  ea402001          ORR      r0,r0,r1,LSL #8       ;390
000cd8  49f1              LDR      r1,|L1.4256|
000cda  80c8              STRH     r0,[r1,#6]            ;390
000cdc  2400              MOVS     r4,#0                 ;391
000cde  e00d              B        |L1.3324|
                  |L1.3296|
000ce0  49ef              LDR      r1,|L1.4256|
000ce2  88c9              LDRH     r1,[r1,#6]            ;393  ; coinchanger
000ce4  fa41f004          ASR      r0,r1,r4              ;393
000ce8  eb0071d0          ADD      r1,r0,r0,LSR #31      ;393
000cec  1049              ASRS     r1,r1,#1              ;393
000cee  eba00141          SUB      r1,r0,r1,LSL #1       ;393
000cf2  2901              CMP      r1,#1                 ;393
000cf4  d100              BNE      |L1.3320|
000cf6  e003              B        |L1.3328|
                  |L1.3320|
000cf8  1c60              ADDS     r0,r4,#1              ;391
000cfa  b2c4              UXTB     r4,r0                 ;391
                  |L1.3324|
000cfc  2c10              CMP      r4,#0x10              ;391
000cfe  dbef              BLT      |L1.3296|
                  |L1.3328|
000d00  bf00              NOP                            ;394
000d02  48e7              LDR      r0,|L1.4256|
000d04  f880402c          STRB     r4,[r0,#0x2c]         ;396
000d08  240f              MOVS     r4,#0xf               ;397
000d0a  e00d              B        |L1.3368|
                  |L1.3340|
000d0c  49e4              LDR      r1,|L1.4256|
000d0e  88c9              LDRH     r1,[r1,#6]            ;399  ; coinchanger
000d10  fa41f004          ASR      r0,r1,r4              ;399
000d14  eb0071d0          ADD      r1,r0,r0,LSR #31      ;399
000d18  1049              ASRS     r1,r1,#1              ;399
000d1a  eba00141          SUB      r1,r0,r1,LSL #1       ;399
000d1e  2901              CMP      r1,#1                 ;399
000d20  d100              BNE      |L1.3364|
000d22  e003              B        |L1.3372|
                  |L1.3364|
000d24  1e60              SUBS     r0,r4,#1              ;397
000d26  b2c4              UXTB     r4,r0                 ;397
                  |L1.3368|
000d28  2c00              CMP      r4,#0                 ;397
000d2a  dcef              BGT      |L1.3340|
                  |L1.3372|
000d2c  bf00              NOP                            ;400
000d2e  48dc              LDR      r0,|L1.4256|
000d30  f880402d          STRB     r4,[r0,#0x2d]         ;402
000d34  2407              MOVS     r4,#7                 ;404
000d36  e026              B        |L1.3462|
                  |L1.3384|
000d38  2e01              CMP      r6,#1                 ;406
000d3a  d11b              BNE      |L1.3444|
000d3c  f1a40008          SUB      r0,r4,#8              ;408
000d40  49d7              LDR      r1,|L1.4256|
000d42  3108              ADDS     r1,r1,#8              ;408
000d44  5c08              LDRB     r0,[r1,r0]            ;408
000d46  f8351014          LDRH     r1,[r5,r4,LSL #1]     ;408
000d4a  4288              CMP      r0,r1                 ;408
000d4c  dd12              BLE      |L1.3444|
000d4e  f1a40008          SUB      r0,r4,#8              ;409
000d52  49d3              LDR      r1,|L1.4256|
000d54  3108              ADDS     r1,r1,#8              ;409
000d56  5c08              LDRB     r0,[r1,r0]            ;409
000d58  b160              CBZ      r0,|L1.3444|
000d5a  f1a40008          SUB      r0,r4,#8              ;410
000d5e  5c08              LDRB     r0,[r1,r0]            ;410
000d60  28ff              CMP      r0,#0xff              ;410
000d62  d007              BEQ      |L1.3444|
000d64  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;411
000d68  b120              CBZ      r0,|L1.3444|
000d6a  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;412
000d6e  28ff              CMP      r0,#0xff              ;412
000d70  d000              BEQ      |L1.3444|
000d72  e768              B        |L1.3142|
                  |L1.3444|
000d74  2601              MOVS     r6,#1                 ;417
000d76  f8152014          LDRB     r2,[r5,r4,LSL #1]     ;418
000d7a  1fe0              SUBS     r0,r4,#7              ;418
000d7c  49c8              LDR      r1,|L1.4256|
000d7e  3108              ADDS     r1,r1,#8              ;418
000d80  540a              STRB     r2,[r1,r0]            ;418
000d82  1c60              ADDS     r0,r4,#1              ;404
000d84  b2c4              UXTB     r4,r0                 ;404
                  |L1.3462|
000d86  f8bd0008          LDRH     r0,[sp,#8]            ;404
000d8a  4284              CMP      r4,r0                 ;404
000d8c  dbd4              BLT      |L1.3384|
000d8e  48c4              LDR      r0,|L1.4256|
000d90  7800              LDRB     r0,[r0,#0]            ;421  ; coinchanger
000d92  2802              CMP      r0,#2                 ;421
000d94  dd04              BLE      |L1.3488|
000d96  f2af2053          ADR      r0,Coin_Exp_Id + 1
000d9a  49c2              LDR      r1,|L1.4260|
000d9c  6008              STR      r0,[r1,#0]            ;423  ; coinequip
000d9e  e003              B        |L1.3496|
                  |L1.3488|
000da0  f2af30df          ADR      r0,Coin_TubeStatus + 1
000da4  49bf              LDR      r1,|L1.4260|
000da6  6008              STR      r0,[r1,#0]            ;427  ; coinequip
                  |L1.3496|
000da8  f7fffffe          BL       OSTimeGet
000dac  49be              LDR      r1,|L1.4264|
000dae  6008              STR      r0,[r1,#0]            ;429  ; coin_timeout
000db0  bf00              NOP      
000db2  e748              B        |L1.3142|
;;;431    
                          ENDP

                  CoinReset_Poll PROC
;;;313    
;;;314    void CoinReset_Poll(void)
000db4  b570              PUSH     {r4-r6,lr}
;;;315    {
000db6  b086              SUB      sp,sp,#0x18
;;;316    	uint8_t err;
;;;317    	uint16_t *rx, rx_len;
;;;318    	
;;;319    	coin_cmd[0]=COIN_POLL;
000db8  200b              MOVS     r0,#0xb
000dba  49bc              LDR      r1,|L1.4268|
000dbc  7008              STRB     r0,[r1,#0]
;;;320    	rx = mdb_send_cmd(coin_cmd,1,1,COIN_NO_RESPENSE, &err, &rx_len);
000dbe  a804              ADD      r0,sp,#0x10
000dc0  a905              ADD      r1,sp,#0x14
000dc2  230a              MOVS     r3,#0xa
000dc4  2201              MOVS     r2,#1
000dc6  e9cd1000          STRD     r1,r0,[sp,#0]
000dca  4611              MOV      r1,r2
000dcc  48b7              LDR      r0,|L1.4268|
000dce  f7fffffe          BL       mdb_send_cmd
000dd2  4605              MOV      r5,r0
;;;321    	
;;;322    	if(err!=MDB_RECEIVE_ACK && err!=MDB_RECEIVE_DATA)
000dd4  f89d0014          LDRB     r0,[sp,#0x14]
000dd8  2878              CMP      r0,#0x78
000dda  d014              BEQ      |L1.3590|
000ddc  f89d0014          LDRB     r0,[sp,#0x14]
000de0  2879              CMP      r0,#0x79
000de2  d010              BEQ      |L1.3590|
;;;323    	{
;;;324    		if(OSTimeGet()-coin_timeout[0]>MAX_COIN_TIMEOUT)//超时
000de4  f7fffffe          BL       OSTimeGet
000de8  49af              LDR      r1,|L1.4264|
000dea  6809              LDR      r1,[r1,#0]  ; coin_timeout
000dec  1a40              SUBS     r0,r0,r1
000dee  f64031b8          MOV      r1,#0xbb8
000df2  4288              CMP      r0,r1
000df4  d905              BLS      |L1.3586|
;;;325    		{
;;;326    			set_coin_status(0xFF);
000df6  20ff              MOVS     r0,#0xff
000df8  f7fffffe          BL       set_coin_status
;;;327    			coinequip.EQIU_FUNC=CoinChanger_Reset;
000dfc  48ac              LDR      r0,|L1.4272|
000dfe  49a9              LDR      r1,|L1.4260|
000e00  6008              STR      r0,[r1,#0]  ; coinequip
                  |L1.3586|
;;;328    		}
;;;329    		return;
;;;330    	}
;;;331    	else
;;;332    	{
;;;333    		if(err == MDB_RECEIVE_DATA)
;;;334    		{
;;;335    			uint8_t i,err=FALSE;
;;;336    			for(i=0;i<rx_len;i++)
;;;337    			{
;;;338    				if(rx[i]==0x02)//硬币器忙
;;;339    				{
;;;340    					//coin_timeout[0]=OSTimeGet();
;;;341    				}
;;;342    				else
;;;343    				if(rx[i]==COIN_JUST_RESET)
;;;344    				{
;;;345    					err = TRUE;
;;;346    				}
;;;347    			}
;;;348    			if(err != TRUE)
;;;349    			{
;;;350    				lcd_show_string("2", 0, 0, RED, WHITE, font48);//没有just reset老款硬币器
;;;351    			}
;;;352    		}
;;;353    		else
;;;354    		if(err==MDB_RECEIVE_ACK)
;;;355    		{
;;;356    			lcd_show_string("1", 50, 0, RED, WHITE, font48);//没有just reset老款硬币器直接回的ack
;;;357    		}
;;;358    	}
;;;359    	coinequip.EQIU_FUNC=Coin_Setup;
;;;360    	coin_timeout[0]=OSTimeGet();
;;;361    }
000e02  b006              ADD      sp,sp,#0x18
000e04  bd70              POP      {r4-r6,pc}
                  |L1.3590|
000e06  f89d0014          LDRB     r0,[sp,#0x14]         ;333
000e0a  2879              CMP      r0,#0x79              ;333
000e0c  d122              BNE      |L1.3668|
000e0e  2600              MOVS     r6,#0                 ;335
000e10  2400              MOVS     r4,#0                 ;336
000e12  e00a              B        |L1.3626|
                  |L1.3604|
000e14  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;338
000e18  2802              CMP      r0,#2                 ;338
000e1a  d004              BEQ      |L1.3622|
000e1c  f8350014          LDRH     r0,[r5,r4,LSL #1]     ;343
000e20  280b              CMP      r0,#0xb               ;343
000e22  d100              BNE      |L1.3622|
000e24  2601              MOVS     r6,#1                 ;345
                  |L1.3622|
000e26  1c60              ADDS     r0,r4,#1              ;336
000e28  b2c4              UXTB     r4,r0                 ;336
                  |L1.3626|
000e2a  f8bd0010          LDRH     r0,[sp,#0x10]         ;336
000e2e  4284              CMP      r4,r0                 ;336
000e30  dbf0              BLT      |L1.3604|
000e32  2e01              CMP      r6,#1                 ;348
000e34  d00d              BEQ      |L1.3666|
000e36  4a9f              LDR      r2,|L1.4276|
000e38  ca07              LDM      r2,{r0-r2}            ;350
000e3a  ab01              ADD      r3,sp,#4              ;350
000e3c  c307              STM      r3!,{r0-r2}           ;350
000e3e  f64f70ff          MOV      r0,#0xffff            ;350
000e42  f44f4378          MOV      r3,#0xf800            ;350
000e46  2200              MOVS     r2,#0                 ;350
000e48  4611              MOV      r1,r2                 ;350
000e4a  9000              STR      r0,[sp,#0]            ;350
000e4c  a09a              ADR      r0,|L1.4280|
000e4e  f7fffffe          BL       lcd_show_string
                  |L1.3666|
000e52  e014              B        |L1.3710|
                  |L1.3668|
000e54  f89d0014          LDRB     r0,[sp,#0x14]         ;354
000e58  2878              CMP      r0,#0x78              ;354
000e5a  d110              BNE      |L1.3710|
000e5c  4a95              LDR      r2,|L1.4276|
000e5e  e9d21000          LDRD     r1,r0,[r2,#0]         ;356
000e62  6892              LDR      r2,[r2,#8]            ;356  ; font48
000e64  e9cd0202          STRD     r0,r2,[sp,#8]         ;356
000e68  9101              STR      r1,[sp,#4]            ;356
000e6a  f64f70ff          MOV      r0,#0xffff            ;356
000e6e  f44f4378          MOV      r3,#0xf800            ;356
000e72  2200              MOVS     r2,#0                 ;356
000e74  2132              MOVS     r1,#0x32              ;356
000e76  9000              STR      r0,[sp,#0]            ;356
000e78  a090              ADR      r0,|L1.4284|
000e7a  f7fffffe          BL       lcd_show_string
                  |L1.3710|
000e7e  f2af207f          ADR      r0,Coin_Setup + 1
000e82  4988              LDR      r1,|L1.4260|
000e84  6008              STR      r0,[r1,#0]            ;359  ; coinequip
000e86  f7fffffe          BL       OSTimeGet
000e8a  4987              LDR      r1,|L1.4264|
000e8c  6008              STR      r0,[r1,#0]            ;360  ; coin_timeout
000e8e  bf00              NOP      
000e90  e7b7              B        |L1.3586|
;;;362    
                          ENDP

                  CoinChanger_Reset PROC
;;;285    
;;;286    void CoinChanger_Reset(void)
000e92  b57f              PUSH     {r0-r6,lr}
;;;287    {
;;;288    	uint8_t err,i;
;;;289    	uint16_t *rx, rx_len;
;;;290    	rx = rx;//防止编译器报错
000e94  bf00              NOP      
;;;291    	
;;;292    	if((OSTimeGet()-coin_reset_time)>OS_TICKS_PER_SEC*2)//2.5秒复位一次
000e96  f7fffffe          BL       OSTimeGet
000e9a  4989              LDR      r1,|L1.4288|
000e9c  6809              LDR      r1,[r1,#0]  ; coin_reset_time
000e9e  1a40              SUBS     r0,r0,r1
000ea0  f5b06ffa          CMP      r0,#0x7d0
000ea4  d93e              BLS      |L1.3876|
;;;293        {
;;;294    		coinequip.cmd_type=M_CS_INIT;
000ea6  2007              MOVS     r0,#7
000ea8  497e              LDR      r1,|L1.4260|
000eaa  7188              STRB     r0,[r1,#6]
;;;295    		for(i=0;i<24;i++)
000eac  2400              MOVS     r4,#0
000eae  e006              B        |L1.3774|
                  |L1.3760|
;;;296    			coinchanger.extenderr[i]=0;
000eb0  2100              MOVS     r1,#0
000eb2  487b              LDR      r0,|L1.4256|
000eb4  302e              ADDS     r0,r0,#0x2e
000eb6  f8201014          STRH     r1,[r0,r4,LSL #1]
000eba  1c60              ADDS     r0,r4,#1              ;295
000ebc  b2c4              UXTB     r4,r0                 ;295
                  |L1.3774|
000ebe  2c18              CMP      r4,#0x18              ;295
000ec0  dbf6              BLT      |L1.3760|
;;;297    		coin_timeout[1]=OSTimeGet();
000ec2  f7fffffe          BL       OSTimeGet
000ec6  4978              LDR      r1,|L1.4264|
000ec8  6048              STR      r0,[r1,#4]  ; coin_timeout
;;;298    		coin_timeout[0]=OSTimeGet();
000eca  f7fffffe          BL       OSTimeGet
000ece  4976              LDR      r1,|L1.4264|
000ed0  6008              STR      r0,[r1,#0]  ; coin_timeout
;;;299    		coinequip.cmd_status=cmd_status_complete;
000ed2  2003              MOVS     r0,#3
000ed4  4973              LDR      r1,|L1.4260|
000ed6  7148              STRB     r0,[r1,#5]
;;;300    		coin_cmd[0]=COIN_RESET;
000ed8  2008              MOVS     r0,#8
000eda  4974              LDR      r1,|L1.4268|
000edc  7008              STRB     r0,[r1,#0]
;;;301    		coin_reset_time=OSTimeGet();
000ede  f7fffffe          BL       OSTimeGet
000ee2  4977              LDR      r1,|L1.4288|
000ee4  6008              STR      r0,[r1,#0]  ; coin_reset_time
;;;302    		rx = mdb_send_cmd(coin_cmd, 1, 1, COIN_NO_RESPENSE, &err, &rx_len);//超过10ms认为是silence 
000ee6  a802              ADD      r0,sp,#8
000ee8  a903              ADD      r1,sp,#0xc
000eea  230a              MOVS     r3,#0xa
000eec  2201              MOVS     r2,#1
000eee  e9cd1000          STRD     r1,r0,[sp,#0]
000ef2  4611              MOV      r1,r2
000ef4  486d              LDR      r0,|L1.4268|
000ef6  f7fffffe          BL       mdb_send_cmd
000efa  4605              MOV      r5,r0
;;;303    		if(err == MDB_RECEIVE_ACK)
000efc  f89d000c          LDRB     r0,[sp,#0xc]
000f00  2878              CMP      r0,#0x78
000f02  d10c              BNE      |L1.3870|
;;;304    		{
;;;305    			coinequip.EQIU_FUNC = CoinReset_Poll;
000f04  f2af1053          ADR      r0,CoinReset_Poll + 1
000f08  4966              LDR      r1,|L1.4260|
000f0a  6008              STR      r0,[r1,#0]  ; coinequip
;;;306    			coin_timeout[1] = OSTimeGet();//记录第一个reset后的时间
000f0c  f7fffffe          BL       OSTimeGet
000f10  4965              LDR      r1,|L1.4264|
000f12  6048              STR      r0,[r1,#4]  ; coin_timeout
;;;307    			coin_timeout[0] = OSTimeGet();//记录要监控的流程超时起始时间
000f14  f7fffffe          BL       OSTimeGet
000f18  4963              LDR      r1,|L1.4264|
000f1a  6008              STR      r0,[r1,#0]  ; coin_timeout
000f1c  e002              B        |L1.3876|
                  |L1.3870|
;;;308    		}
;;;309    		else
;;;310    			set_coin_status(0xFF);
000f1e  20ff              MOVS     r0,#0xff
000f20  f7fffffe          BL       set_coin_status
                  |L1.3876|
;;;311    	}
;;;312    }
000f24  bd7f              POP      {r0-r6,pc}
;;;313    
                          ENDP

                  CoinChangerInit PROC
;;;103    
;;;104    void CoinChangerInit(void)
000f26  b510              PUSH     {r4,lr}
;;;105    {
;;;106    	coinequip.EQIU_FUNC=CoinChanger_Reset;
000f28  f2af0099          ADR      r0,CoinChanger_Reset + 1
000f2c  495d              LDR      r1,|L1.4260|
000f2e  6008              STR      r0,[r1,#0]  ; coinequip
;;;107    	coinequip.cmd_type=COIN_RESET;
000f30  2008              MOVS     r0,#8
000f32  7188              STRB     r0,[r1,#6]
;;;108    	coinequip.cmd_status=cmd_status_complete;
000f34  2003              MOVS     r0,#3
000f36  7148              STRB     r0,[r1,#5]
;;;109    	coinequip.eqiu_status=0xFE;
000f38  20fe              MOVS     r0,#0xfe
000f3a  7108              STRB     r0,[r1,#4]
;;;110    	register_mdb_equ(&coinequip);
000f3c  4608              MOV      r0,r1
000f3e  f7fffffe          BL       register_mdb_equ
;;;111    	coin_reset_time=1000;
000f42  f44f707a          MOV      r0,#0x3e8
000f46  495e              LDR      r1,|L1.4288|
000f48  6008              STR      r0,[r1,#0]  ; coin_reset_time
;;;112    	coinset=0;
000f4a  2000              MOVS     r0,#0
000f4c  495d              LDR      r1,|L1.4292|
000f4e  7008              STRB     r0,[r1,#0]
;;;113    	coinchangenum=0;
000f50  495d              LDR      r1,|L1.4296|
000f52  7008              STRB     r0,[r1,#0]
;;;114    }
000f54  bd10              POP      {r4,pc}
;;;115    
                          ENDP

                  savecoinaccept PROC
;;;226    
;;;227    void savecoinaccept(uint16_t num)//记录硬币的接收
000f56  4770              BX       lr
;;;228    {
;;;229    	
;;;230    //  #ifdef COINHOPPER
;;;231    //	if(coinacceptflag==0)
;;;232    //		return;
;;;233    //   	coinacceptflag--;
;;;234    //  #endif
;;;235    
;;;236    
;;;237    //	send_moneyaccept_msg(DATA_CC,num,1);
;;;238    //	CA301+=num;
;;;239    //	CA305+=num;
;;;240    //	//CA306+=num
;;;241    //	//CA307++;
;;;242    //	switch(num)
;;;243    //	{
;;;244    //		case 5:
;;;245    //		CA1102(0)++;
;;;246    //		CA1105(0)++;
;;;247    //		break;
;;;248    //		case 10:
;;;249    //		CA1102(1)++;
;;;250    //		CA1105(1)++;
;;;251    //		break;
;;;252    //		case 25:
;;;253    //		CA1102(2)++;
;;;254    //		CA1105(2)++;
;;;255    //		break;
;;;256    //		case 50:
;;;257    //		CA1102(3)++;
;;;258    //		CA1105(3)++;
;;;259    //		break;
;;;260    //		case 75:
;;;261    //		CA1102(4)++;
;;;262    //		CA1105(4)++;
;;;263    //		break;
;;;264    //		case 100:
;;;265    //		CA1102(5)++;
;;;266    //		CA1105(5)++;
;;;267    //		break;
;;;268    //		case 200:
;;;269    //		CA1102(6)++;
;;;270    //		CA1105(6)++;
;;;271    //		break;
;;;272    //		case 500:
;;;273    //		CA1102(7)++;
;;;274    //		CA1105(7)++;
;;;275    //		break;
;;;276    //		case 1000:
;;;277    //		CA1102(8)++;
;;;278    //		CA1105(8)++;
;;;279    //		break;
;;;280    //		default:
;;;281    //		break;
;;;282    //	}
;;;283    }
;;;284    
                          ENDP

                  Coin_Exp_Dignostic PROC
;;;432    
;;;433    void Coin_Exp_Dignostic(void)//扩展指令的状态查询
000f58  b530              PUSH     {r4,r5,lr}
;;;434    {
000f5a  b089              SUB      sp,sp,#0x24
;;;435    	uint8_t err,i;
;;;436    	uint16_t *rx, rx_len;
;;;437    	
;;;438    	coin_cmd[0]=0x0F;
000f5c  200f              MOVS     r0,#0xf
000f5e  4953              LDR      r1,|L1.4268|
000f60  7008              STRB     r0,[r1,#0]
;;;439    	coin_cmd[1]=0x05;
000f62  2005              MOVS     r0,#5
000f64  7048              STRB     r0,[r1,#1]
;;;440    	rx = mdb_send_cmd(coin_cmd,2,1,COIN_NO_RESPENSE*5, &err, &rx_len);//发送扩展命令	
000f66  a807              ADD      r0,sp,#0x1c
000f68  a908              ADD      r1,sp,#0x20
000f6a  2332              MOVS     r3,#0x32
000f6c  2201              MOVS     r2,#1
000f6e  e9cd1000          STRD     r1,r0,[sp,#0]
000f72  2102              MOVS     r1,#2
000f74  484d              LDR      r0,|L1.4268|
000f76  f7fffffe          BL       mdb_send_cmd
000f7a  4605              MOV      r5,r0
;;;441    	if(err==MDB_RECEIVE_DATA)
000f7c  f89d0020          LDRB     r0,[sp,#0x20]
000f80  2879              CMP      r0,#0x79
000f82  d139              BNE      |L1.4088|
;;;442    	{
;;;443    		uint8_t ggerr[24];
;;;444    		for(i=0;i<24;i++)
000f84  2400              MOVS     r4,#0
000f86  e004              B        |L1.3986|
                  |L1.3976|
;;;445    			ggerr[i]=0;
000f88  2000              MOVS     r0,#0
000f8a  a901              ADD      r1,sp,#4
000f8c  5508              STRB     r0,[r1,r4]
000f8e  1c60              ADDS     r0,r4,#1              ;444
000f90  b2c4              UXTB     r4,r0                 ;444
                  |L1.3986|
000f92  2c18              CMP      r4,#0x18              ;444
000f94  dbf8              BLT      |L1.3976|
;;;446    		for(i=0;i<rx_len;i+=2)
000f96  2400              MOVS     r4,#0
000f98  e008              B        |L1.4012|
                  |L1.3994|
;;;447    			ggerr[rx[i]]=rx[i+1];
000f9a  1c60              ADDS     r0,r4,#1
000f9c  f8150010          LDRB     r0,[r5,r0,LSL #1]
000fa0  f8351014          LDRH     r1,[r5,r4,LSL #1]
000fa4  aa01              ADD      r2,sp,#4
000fa6  5450              STRB     r0,[r2,r1]
000fa8  1ca0              ADDS     r0,r4,#2              ;446
000faa  b2c4              UXTB     r4,r0                 ;446
                  |L1.4012|
000fac  f8bd001c          LDRH     r0,[sp,#0x1c]         ;446
000fb0  4284              CMP      r4,r0                 ;446
000fb2  dbf2              BLT      |L1.3994|
;;;448    		if(coinchanger.extenderr[21]==0 && ggerr[21]!=0)
000fb4  483a              LDR      r0,|L1.4256|
000fb6  f8b00058          LDRH     r0,[r0,#0x58]
000fba  b928              CBNZ     r0,|L1.4040|
000fbc  f89d0019          LDRB     r0,[sp,#0x19]
000fc0  b110              CBZ      r0,|L1.4040|
;;;449    			set_coin_status(0xFB);
000fc2  20fb              MOVS     r0,#0xfb
000fc4  f7fffffe          BL       set_coin_status
                  |L1.4040|
;;;450    		if(coinchanger.extenderr[21]!=0 && ggerr[21]==0)//用来判断状态的转换
000fc8  4835              LDR      r0,|L1.4256|
000fca  f8b00058          LDRH     r0,[r0,#0x58]
000fce  b130              CBZ      r0,|L1.4062|
000fd0  f89d0019          LDRB     r0,[sp,#0x19]
000fd4  b918              CBNZ     r0,|L1.4062|
;;;451    			set_coin_status(coinset);
000fd6  483b              LDR      r0,|L1.4292|
000fd8  7800              LDRB     r0,[r0,#0]  ; coinset
000fda  f7fffffe          BL       set_coin_status
                  |L1.4062|
;;;452    		for(i=0;i<24;i++)
000fde  2400              MOVS     r4,#0
000fe0  e007              B        |L1.4082|
                  |L1.4066|
;;;453    			coinchanger.extenderr[i]=ggerr[i];
000fe2  a801              ADD      r0,sp,#4
000fe4  5d01              LDRB     r1,[r0,r4]
000fe6  482e              LDR      r0,|L1.4256|
000fe8  302e              ADDS     r0,r0,#0x2e
000fea  f8201014          STRH     r1,[r0,r4,LSL #1]
000fee  1c60              ADDS     r0,r4,#1              ;452
000ff0  b2c4              UXTB     r4,r0                 ;452
                  |L1.4082|
000ff2  2c18              CMP      r4,#0x18              ;452
000ff4  dbf5              BLT      |L1.4066|
;;;454    	}
000ff6  bf00              NOP      
                  |L1.4088|
;;;455    }
000ff8  b009              ADD      sp,sp,#0x24
000ffa  bd30              POP      {r4,r5,pc}
;;;456    
                          ENDP

                  CheckDispense PROC
;;;980    #ifndef COINHOPPER//***硬币器
;;;981    uint8_t CheckDispense(uint32_t money)//计算是否可找零
000ffc  b5f8              PUSH     {r3-r7,lr}
;;;982    {
000ffe  4604              MOV      r4,r0
;;;983    	uint8_t type,num;
;;;984    	uint32_t tmp=0;
001000  2000              MOVS     r0,#0
001002  9000              STR      r0,[sp,#0]
;;;985    	Check_Dispen_Bill(money,&tmp);
001004  4669              MOV      r1,sp
001006  4620              MOV      r0,r4
001008  f7fffffe          BL       Check_Dispen_Bill
;;;986    	money-=tmp;
00100c  9800              LDR      r0,[sp,#0]
00100e  1a24              SUBS     r4,r4,r0
;;;987    	if(money==0)
001010  b90c              CBNZ     r4,|L1.4118|
;;;988    		return TRUE;
001012  2001              MOVS     r0,#1
                  |L1.4116|
;;;989    	if(coinequip.eqiu_status>1)
;;;990    		return FALSE;
;;;991    	if(coinchanger.allvalue<money)
;;;992    		return FALSE;
;;;993    	if((money%coinfactor)!=0)
;;;994    		return FALSE;
;;;995    	money=money/coinfactor;
;;;996    	type=16;
;;;997    	while(type>0 && money>0)
;;;998    	{
;;;999    		if(money<coinchanger.par_value[type-1] || coinchanger.store[type-1]==0)
;;;1000   			type--;
;;;1001   		else
;;;1002   		{
;;;1003   			num=money/coinchanger.par_value[type-1];
;;;1004   			if(num>coinchanger.store[type-1])
;;;1005   				num=coinchanger.store[type-1];
;;;1006   			money-=coinchanger.par_value[type-1]*num;
;;;1007   			type--;
;;;1008   		}
;;;1009   	}
;;;1010   	if(money==0)
;;;1011   	{
;;;1012   		if(coinequip.eqiu_status>1)
;;;1013   			return 2;
;;;1014   		else
;;;1015   			return TRUE;
;;;1016   	}
;;;1017   	else
;;;1018   	return FALSE;
;;;1019   }
001014  bdf8              POP      {r3-r7,pc}
                  |L1.4118|
001016  4823              LDR      r0,|L1.4260|
001018  7900              LDRB     r0,[r0,#4]            ;989  ; coinequip
00101a  2801              CMP      r0,#1                 ;989
00101c  dd01              BLE      |L1.4130|
00101e  2000              MOVS     r0,#0                 ;990
001020  e7f8              B        |L1.4116|
                  |L1.4130|
001022  481f              LDR      r0,|L1.4256|
001024  8d40              LDRH     r0,[r0,#0x2a]         ;991  ; coinchanger
001026  42a0              CMP      r0,r4                 ;991
001028  d201              BCS      |L1.4142|
00102a  2000              MOVS     r0,#0                 ;992
00102c  e7f2              B        |L1.4116|
                  |L1.4142|
00102e  481b              LDR      r0,|L1.4252|
001030  6800              LDR      r0,[r0,#0]            ;993  ; coinfactor
001032  fbb4f1f0          UDIV     r1,r4,r0              ;993
001036  fb004011          MLS      r0,r0,r1,r4           ;993
00103a  b108              CBZ      r0,|L1.4160|
00103c  2000              MOVS     r0,#0                 ;994
00103e  e7e9              B        |L1.4116|
                  |L1.4160|
001040  4816              LDR      r0,|L1.4252|
001042  6800              LDR      r0,[r0,#0]            ;995  ; coinfactor
001044  fbb4f4f0          UDIV     r4,r4,r0              ;995
001048  2510              MOVS     r5,#0x10              ;996
00104a  e022              B        |L1.4242|
                  |L1.4172|
00104c  1e68              SUBS     r0,r5,#1              ;999
00104e  4914              LDR      r1,|L1.4256|
001050  3108              ADDS     r1,r1,#8              ;999
001052  5c08              LDRB     r0,[r1,r0]            ;999
001054  42a0              CMP      r0,r4                 ;999
001056  d803              BHI      |L1.4192|
001058  1e68              SUBS     r0,r5,#1              ;999
00105a  3112              ADDS     r1,r1,#0x12           ;999
00105c  5c08              LDRB     r0,[r1,r0]            ;999
00105e  b910              CBNZ     r0,|L1.4198|
                  |L1.4192|
001060  1e68              SUBS     r0,r5,#1              ;1000
001062  b2c5              UXTB     r5,r0                 ;1000
001064  e015              B        |L1.4242|
                  |L1.4198|
001066  1e68              SUBS     r0,r5,#1              ;1003
001068  490d              LDR      r1,|L1.4256|
00106a  3108              ADDS     r1,r1,#8              ;1003
00106c  5c08              LDRB     r0,[r1,r0]            ;1003
00106e  fbb4f0f0          UDIV     r0,r4,r0              ;1003
001072  b2c6              UXTB     r6,r0                 ;1003
001074  1e68              SUBS     r0,r5,#1              ;1004
001076  3112              ADDS     r1,r1,#0x12           ;1004
001078  5c08              LDRB     r0,[r1,r0]            ;1004
00107a  42b0              CMP      r0,r6                 ;1004
00107c  da01              BGE      |L1.4226|
00107e  1e68              SUBS     r0,r5,#1              ;1005
001080  5c0e              LDRB     r6,[r1,r0]            ;1005
                  |L1.4226|
001082  1e68              SUBS     r0,r5,#1              ;1006
001084  4906              LDR      r1,|L1.4256|
001086  3108              ADDS     r1,r1,#8              ;1006
001088  5c08              LDRB     r0,[r1,r0]            ;1006
00108a  fb004416          MLS      r4,r0,r6,r4           ;1006
00108e  1e68              SUBS     r0,r5,#1              ;1007
001090  b2c5              UXTB     r5,r0                 ;1007
                  |L1.4242|
001092  2d00              CMP      r5,#0                 ;997
001094  dd1c              BLE      |L1.4304|
001096  e019              B        |L1.4300|
                  |L1.4248|
                          DCD      sysfactor
                  |L1.4252|
                          DCD      coinfactor
                  |L1.4256|
                          DCD      coinchanger
                  |L1.4260|
                          DCD      coinequip
                  |L1.4264|
                          DCD      coin_timeout
                  |L1.4268|
                          DCD      coin_cmd
                  |L1.4272|
                          DCD      CoinChanger_Reset
                  |L1.4276|
                          DCD      font48
                  |L1.4280|
0010b8  3200              DCB      "2",0
0010ba  00                DCB      0
0010bb  00                DCB      0
                  |L1.4284|
0010bc  3100              DCB      "1",0
0010be  00                DCB      0
0010bf  00                DCB      0
                  |L1.4288|
                          DCD      coin_reset_time
                  |L1.4292|
                          DCD      coinset
                  |L1.4296|
                          DCD      coinchangenum
                  |L1.4300|
0010cc  2c00              CMP      r4,#0                 ;997
0010ce  d1bd              BNE      |L1.4172|
                  |L1.4304|
0010d0  b93c              CBNZ     r4,|L1.4322|
0010d2  48af              LDR      r0,|L1.5008|
0010d4  7900              LDRB     r0,[r0,#4]            ;1012  ; coinequip
0010d6  2801              CMP      r0,#1                 ;1012
0010d8  dd01              BLE      |L1.4318|
0010da  2002              MOVS     r0,#2                 ;1013
0010dc  e79a              B        |L1.4116|
                  |L1.4318|
0010de  2001              MOVS     r0,#1                 ;1015
0010e0  e798              B        |L1.4116|
                  |L1.4322|
0010e2  2000              MOVS     r0,#0                 ;1018
0010e4  e796              B        |L1.4116|
;;;1020   #endif
                          ENDP

                  DISPENSE PROC
;;;1021   uint8_t DISPENSE(void)//退币
0010e6  e92d41f0          PUSH     {r4-r8,lr}
;;;1022   {
;;;1023   	uint8_t num,type,i;//退币数量，退币硬币类型
;;;1024   	
;;;1025   	if(coinequip.cmd_type!=M_CS_PAYOUT)
0010ea  48a9              LDR      r0,|L1.5008|
0010ec  7980              LDRB     r0,[r0,#6]  ; coinequip
0010ee  2802              CMP      r0,#2
0010f0  d06e              BEQ      |L1.4560|
;;;1026   	{
;;;1027   		if(coinchanger.level>2 && coinchanger.changetype==1)//层级3与支持扩展指令
0010f2  48a8              LDR      r0,|L1.5012|
0010f4  7800              LDRB     r0,[r0,#0]  ; coinchanger
0010f6  2802              CMP      r0,#2
0010f8  dd16              BLE      |L1.4392|
0010fa  48a6              LDR      r0,|L1.5012|
0010fc  f890005e          LDRB     r0,[r0,#0x5e]  ; coinchanger
001100  2801              CMP      r0,#1
001102  d111              BNE      |L1.4392|
;;;1028   		{
;;;1029   			uint32_t mm=0;
001104  2600              MOVS     r6,#0
;;;1030   			mm=credit_get()/coinfactor;
001106  f7fffffe          BL       credit_get
00110a  49a3              LDR      r1,|L1.5016|
00110c  6809              LDR      r1,[r1,#0]  ; coinfactor
00110e  fbb0f6f1          UDIV     r6,r0,r1
;;;1031   			while(mm>255)
001112  e000              B        |L1.4374|
                  |L1.4372|
;;;1032   			{	
;;;1033   				mm-=255;
001114  3eff              SUBS     r6,r6,#0xff
                  |L1.4374|
001116  2eff              CMP      r6,#0xff              ;1031
001118  d8fc              BHI      |L1.4372|
;;;1034   			}
;;;1035   			coin_cmd2[0]=COIN_EXP;
00111a  200f              MOVS     r0,#0xf
00111c  499f              LDR      r1,|L1.5020|
00111e  7008              STRB     r0,[r1,#0]
;;;1036   			coin_cmd2[1]=0x02;
001120  2002              MOVS     r0,#2
001122  7048              STRB     r0,[r1,#1]
;;;1037   			coin_cmd2[2]=mm;
001124  708e              STRB     r6,[r1,#2]
;;;1038   			//coin_cmd2[2]=credit/coinfactor;
;;;1039   		}
001126  e04c              B        |L1.4546|
                  |L1.4392|
;;;1040   		else//层级3以下
;;;1041   		{
;;;1042   			type=15;
001128  240f              MOVS     r4,#0xf
;;;1043   			//if(coinequip.eqiu_status!=1)//禁能不能退币？？？？？？
;;;1044   				//return 2;
;;;1045   			//首先需要找到一个有存储的，面值比余额小的但是是符合前面条件中面值最大的硬币。
;;;1046   			while(type>0)
00112a  e012              B        |L1.4434|
                  |L1.4396|
;;;1047   			{
;;;1048   				//从大面额开始寻找可找零硬币
;;;1049   				//添加设置的保底枚数
;;;1050   				if(credit_get()<(coinchanger.par_value[type]*coinfactor) || coinchanger.store[type]<7)
00112c  f7fffffe          BL       credit_get
001130  4998              LDR      r1,|L1.5012|
001132  3108              ADDS     r1,r1,#8
001134  5d09              LDRB     r1,[r1,r4]
001136  4a98              LDR      r2,|L1.5016|
001138  6812              LDR      r2,[r2,#0]  ; coinfactor
00113a  4351              MULS     r1,r2,r1
00113c  4288              CMP      r0,r1
00113e  d304              BCC      |L1.4426|
001140  4894              LDR      r0,|L1.5012|
001142  301a              ADDS     r0,r0,#0x1a
001144  5d00              LDRB     r0,[r0,r4]
001146  2807              CMP      r0,#7
001148  da02              BGE      |L1.4432|
                  |L1.4426|
;;;1051   					type--;
00114a  1e60              SUBS     r0,r4,#1
00114c  b2c4              UXTB     r4,r0
00114e  e000              B        |L1.4434|
                  |L1.4432|
;;;1052   				else
;;;1053   					break;
001150  e001              B        |L1.4438|
                  |L1.4434|
001152  2c00              CMP      r4,#0                 ;1046
001154  dcea              BGT      |L1.4396|
                  |L1.4438|
001156  bf00              NOP      
;;;1054   			}
;;;1055   			
;;;1056   			if(type==0)//如果等于0 则证明找遍了硬币器也没找到适合找零的硬币开始寻找那些存储量不足7枚的硬币
001158  b9b4              CBNZ     r4,|L1.4488|
;;;1057   			{
;;;1058   				type=15;
00115a  240f              MOVS     r4,#0xf
;;;1059   				while(type>0)
00115c  e011              B        |L1.4482|
                  |L1.4446|
;;;1060   				{
;;;1061   					if(credit_get()<(coinchanger.par_value[type]*coinfactor) || coinchanger.store[type]==0)
00115e  f7fffffe          BL       credit_get
001162  498c              LDR      r1,|L1.5012|
001164  3108              ADDS     r1,r1,#8
001166  5d09              LDRB     r1,[r1,r4]
001168  4a8b              LDR      r2,|L1.5016|
00116a  6812              LDR      r2,[r2,#0]  ; coinfactor
00116c  4351              MULS     r1,r2,r1
00116e  4288              CMP      r0,r1
001170  d303              BCC      |L1.4474|
001172  4888              LDR      r0,|L1.5012|
001174  301a              ADDS     r0,r0,#0x1a
001176  5d00              LDRB     r0,[r0,r4]
001178  b910              CBNZ     r0,|L1.4480|
                  |L1.4474|
;;;1062   						type--;
00117a  1e60              SUBS     r0,r4,#1
00117c  b2c4              UXTB     r4,r0
00117e  e000              B        |L1.4482|
                  |L1.4480|
;;;1063   					else
;;;1064   						break;
001180  e001              B        |L1.4486|
                  |L1.4482|
001182  2c00              CMP      r4,#0                 ;1059
001184  dceb              BGT      |L1.4446|
                  |L1.4486|
001186  bf00              NOP      
                  |L1.4488|
;;;1065   				}
;;;1066   			}
;;;1067   			num=1;
001188  2701              MOVS     r7,#1
;;;1068   			i=0;
00118a  2500              MOVS     r5,#0
;;;1069   			while(coinequip.cmd_status!=cmd_status_complete && i++<200)
00118c  e002              B        |L1.4500|
                  |L1.4494|
;;;1070   			{
;;;1071   				OSTimeDly(2);
00118e  2002              MOVS     r0,#2
001190  f7fffffe          BL       OSTimeDly
                  |L1.4500|
001194  487e              LDR      r0,|L1.5008|
001196  7940              LDRB     r0,[r0,#5]            ;1069  ; coinequip
001198  2803              CMP      r0,#3                 ;1069
00119a  d004              BEQ      |L1.4518|
00119c  4628              MOV      r0,r5                 ;1069
00119e  1c69              ADDS     r1,r5,#1              ;1069
0011a0  b2cd              UXTB     r5,r1                 ;1069
0011a2  28c8              CMP      r0,#0xc8              ;1069
0011a4  dbf3              BLT      |L1.4494|
                  |L1.4518|
;;;1072   			}
;;;1073   			if(i==200)
0011a6  2dc8              CMP      r5,#0xc8
0011a8  d102              BNE      |L1.4528|
;;;1074   				return FALSE;
0011aa  2000              MOVS     r0,#0
                  |L1.4524|
;;;1075   			coinset=1;//使能硬币器
;;;1076   			coin_cmd2[0]=COIN_DISPENSE;
;;;1077   			coin_cmd2[1]=num<<4 | type;
;;;1078   		}
;;;1079   		coinequip.cmd_type=M_CS_PAYOUT;//告诉轮询,现在执行的是退币命令
;;;1080   		coinequip.cmd_status=cmd_status_need;
;;;1081   		return TRUE;
;;;1082   	}
;;;1083   	return FALSE;
;;;1084   }
0011ac  e8bd81f0          POP      {r4-r8,pc}
                  |L1.4528|
0011b0  2001              MOVS     r0,#1                 ;1075
0011b2  497b              LDR      r1,|L1.5024|
0011b4  7008              STRB     r0,[r1,#0]            ;1075
0011b6  200d              MOVS     r0,#0xd               ;1076
0011b8  4978              LDR      r1,|L1.5020|
0011ba  7008              STRB     r0,[r1,#0]            ;1076
0011bc  ea441007          ORR      r0,r4,r7,LSL #4       ;1077
0011c0  7048              STRB     r0,[r1,#1]            ;1077
                  |L1.4546|
0011c2  2002              MOVS     r0,#2                 ;1079
0011c4  4972              LDR      r1,|L1.5008|
0011c6  7188              STRB     r0,[r1,#6]            ;1079
0011c8  2000              MOVS     r0,#0                 ;1080
0011ca  7148              STRB     r0,[r1,#5]            ;1080
0011cc  2001              MOVS     r0,#1                 ;1081
0011ce  e7ed              B        |L1.4524|
                  |L1.4560|
0011d0  2000              MOVS     r0,#0                 ;1083
0011d2  e7eb              B        |L1.4524|
;;;1085   
                          ENDP

                  NewCheckDispense PROC
;;;1086   uint8_t NewCheckDispense(uint32_t money,uint32_t* real)//计算是否可找零
0011d4  e92d43f8          PUSH     {r3-r9,lr}
;;;1087   {
0011d8  4604              MOV      r4,r0
0011da  4688              MOV      r8,r1
;;;1088   	uint8_t type,num;
;;;1089   	uint32_t amount,compare,tmp=0;
0011dc  2000              MOVS     r0,#0
0011de  9000              STR      r0,[sp,#0]
;;;1090   	Check_Dispen_Bill(money,&tmp);
0011e0  4669              MOV      r1,sp
0011e2  4620              MOV      r0,r4
0011e4  f7fffffe          BL       Check_Dispen_Bill
;;;1091   	money-=tmp;
0011e8  9800              LDR      r0,[sp,#0]
0011ea  1a24              SUBS     r4,r4,r0
;;;1092   	if(money==0)
0011ec  b914              CBNZ     r4,|L1.4596|
;;;1093   		return TRUE;
0011ee  2001              MOVS     r0,#1
                  |L1.4592|
;;;1094   	if(coinequip.eqiu_status>1)
;;;1095   		return 2;
;;;1096   	if(coinchanger.allvalue==0)
;;;1097   		return FALSE;
;;;1098   	money=money/coinfactor;
;;;1099   	compare=money;
;;;1100   	amount=money*coinfactor;//可能找零金额
;;;1101   	if(amount==0)
;;;1102   		return FALSE;
;;;1103   		
;;;1104   	type=16;
;;;1105   	while(type>0 && money>0)
;;;1106   	{
;;;1107   		if(money<coinchanger.par_value[type-1] || coinchanger.store[type-1]==0)
;;;1108   			type--;
;;;1109   		else
;;;1110   		{
;;;1111   			num=money/coinchanger.par_value[type-1];
;;;1112   			if(num>coinchanger.store[type-1])
;;;1113   				num=coinchanger.store[type-1];
;;;1114   			money-=coinchanger.par_value[type-1]*num;
;;;1115   			type--;
;;;1116   		}
;;;1117   	}
;;;1118   	if(type==0 && money==compare)//确实无可找金额
;;;1119   		return FALSE;
;;;1120   	*real=amount-(money*coinfactor);//实际可找零金额
;;;1121   	return TRUE;
;;;1122   }
0011f0  e8bd83f8          POP      {r3-r9,pc}
                  |L1.4596|
0011f4  4866              LDR      r0,|L1.5008|
0011f6  7900              LDRB     r0,[r0,#4]            ;1094  ; coinequip
0011f8  2801              CMP      r0,#1                 ;1094
0011fa  dd01              BLE      |L1.4608|
0011fc  2002              MOVS     r0,#2                 ;1095
0011fe  e7f7              B        |L1.4592|
                  |L1.4608|
001200  4864              LDR      r0,|L1.5012|
001202  8d40              LDRH     r0,[r0,#0x2a]         ;1096  ; coinchanger
001204  b908              CBNZ     r0,|L1.4618|
001206  2000              MOVS     r0,#0                 ;1097
001208  e7f2              B        |L1.4592|
                  |L1.4618|
00120a  4863              LDR      r0,|L1.5016|
00120c  6800              LDR      r0,[r0,#0]            ;1098  ; coinfactor
00120e  fbb4f4f0          UDIV     r4,r4,r0              ;1098
001212  4626              MOV      r6,r4                 ;1099
001214  4860              LDR      r0,|L1.5016|
001216  6800              LDR      r0,[r0,#0]            ;1100  ; coinfactor
001218  fb04f700          MUL      r7,r4,r0              ;1100
00121c  b90f              CBNZ     r7,|L1.4642|
00121e  2000              MOVS     r0,#0                 ;1102
001220  e7e6              B        |L1.4592|
                  |L1.4642|
001222  2510              MOVS     r5,#0x10              ;1104
001224  e024              B        |L1.4720|
                  |L1.4646|
001226  1e68              SUBS     r0,r5,#1              ;1107
001228  495a              LDR      r1,|L1.5012|
00122a  3108              ADDS     r1,r1,#8              ;1107
00122c  5c08              LDRB     r0,[r1,r0]            ;1107
00122e  42a0              CMP      r0,r4                 ;1107
001230  d803              BHI      |L1.4666|
001232  1e68              SUBS     r0,r5,#1              ;1107
001234  3112              ADDS     r1,r1,#0x12           ;1107
001236  5c08              LDRB     r0,[r1,r0]            ;1107
001238  b910              CBNZ     r0,|L1.4672|
                  |L1.4666|
00123a  1e68              SUBS     r0,r5,#1              ;1108
00123c  b2c5              UXTB     r5,r0                 ;1108
00123e  e017              B        |L1.4720|
                  |L1.4672|
001240  1e68              SUBS     r0,r5,#1              ;1111
001242  4954              LDR      r1,|L1.5012|
001244  3108              ADDS     r1,r1,#8              ;1111
001246  5c08              LDRB     r0,[r1,r0]            ;1111
001248  fbb4f0f0          UDIV     r0,r4,r0              ;1111
00124c  f00009ff          AND      r9,r0,#0xff           ;1111
001250  1e68              SUBS     r0,r5,#1              ;1112
001252  3112              ADDS     r1,r1,#0x12           ;1112
001254  5c08              LDRB     r0,[r1,r0]            ;1112
001256  4548              CMP      r0,r9                 ;1112
001258  da02              BGE      |L1.4704|
00125a  1e68              SUBS     r0,r5,#1              ;1113
00125c  f8119000          LDRB     r9,[r1,r0]            ;1113
                  |L1.4704|
001260  1e68              SUBS     r0,r5,#1              ;1114
001262  494c              LDR      r1,|L1.5012|
001264  3108              ADDS     r1,r1,#8              ;1114
001266  5c08              LDRB     r0,[r1,r0]            ;1114
001268  fb004419          MLS      r4,r0,r9,r4           ;1114
00126c  1e68              SUBS     r0,r5,#1              ;1115
00126e  b2c5              UXTB     r5,r0                 ;1115
                  |L1.4720|
001270  2d00              CMP      r5,#0                 ;1105
001272  dd01              BLE      |L1.4728|
001274  2c00              CMP      r4,#0                 ;1105
001276  d1d6              BNE      |L1.4646|
                  |L1.4728|
001278  b91d              CBNZ     r5,|L1.4738|
00127a  42b4              CMP      r4,r6                 ;1118
00127c  d101              BNE      |L1.4738|
00127e  2000              MOVS     r0,#0                 ;1119
001280  e7b6              B        |L1.4592|
                  |L1.4738|
001282  4845              LDR      r0,|L1.5016|
001284  6800              LDR      r0,[r0,#0]            ;1120  ; coinfactor
001286  fb047010          MLS      r0,r4,r0,r7           ;1120
00128a  f8c80000          STR      r0,[r8,#0]            ;1120
00128e  2001              MOVS     r0,#1                 ;1121
001290  e7ae              B        |L1.4592|
;;;1123   
                          ENDP

                  NewDISPENSE PROC
;;;1124   uint8_t NewDISPENSE(uint32_t money)//退币
001292  e92d41f0          PUSH     {r4-r8,lr}
;;;1125   {
001296  4605              MOV      r5,r0
;;;1126   	uint8_t num,type,i;//退币数量，退币硬币类型
;;;1127   	
;;;1128   	if(coinequip.cmd_type!=M_CS_PAYOUT)
001298  483d              LDR      r0,|L1.5008|
00129a  7980              LDRB     r0,[r0,#6]  ; coinequip
00129c  2802              CMP      r0,#2
00129e  d068              BEQ      |L1.4978|
;;;1129   	{
;;;1130   		if(coinchanger.level>2 && coinchanger.changetype==1)//层级3与支持扩展指令
0012a0  483c              LDR      r0,|L1.5012|
0012a2  7800              LDRB     r0,[r0,#0]  ; coinchanger
0012a4  2802              CMP      r0,#2
0012a6  dd14              BLE      |L1.4818|
0012a8  483a              LDR      r0,|L1.5012|
0012aa  f890005e          LDRB     r0,[r0,#0x5e]  ; coinchanger
0012ae  2801              CMP      r0,#1
0012b0  d10f              BNE      |L1.4818|
;;;1131   		{
;;;1132   			uint32_t mm=0;
0012b2  2000              MOVS     r0,#0
;;;1133   			mm=money/coinfactor;
0012b4  4938              LDR      r1,|L1.5016|
0012b6  6809              LDR      r1,[r1,#0]  ; coinfactor
0012b8  fbb5f0f1          UDIV     r0,r5,r1
;;;1134   			while(mm>255)
0012bc  e000              B        |L1.4800|
                  |L1.4798|
;;;1135   			{	
;;;1136   				mm-=255;
0012be  38ff              SUBS     r0,r0,#0xff
                  |L1.4800|
0012c0  28ff              CMP      r0,#0xff              ;1134
0012c2  d8fc              BHI      |L1.4798|
;;;1137   			}
;;;1138   			coin_cmd2[0]=COIN_EXP;
0012c4  210f              MOVS     r1,#0xf
0012c6  4a35              LDR      r2,|L1.5020|
0012c8  7011              STRB     r1,[r2,#0]
;;;1139   			coin_cmd2[1]=0x02;
0012ca  2102              MOVS     r1,#2
0012cc  7051              STRB     r1,[r2,#1]
;;;1140   			coin_cmd2[2]=mm;
0012ce  7090              STRB     r0,[r2,#2]
;;;1141   			//coin_cmd2[2]=credit/coinfactor;
;;;1142   		}
0012d0  e048              B        |L1.4964|
                  |L1.4818|
;;;1143   		else//层级3以下
;;;1144   		{
;;;1145   			type=15;
0012d2  240f              MOVS     r4,#0xf
;;;1146   			//if(coinequip.eqiu_status!=1)//禁能不能退币？？？？？？
;;;1147   				//return 2;
;;;1148   			//首先需要找到一个有存储的，面值比余额小的但是是符合前面条件中面值最大的硬币。
;;;1149   			while(type>0)
0012d4  e010              B        |L1.4856|
                  |L1.4822|
;;;1150   			{
;;;1151   				//从大面额开始寻找可找零硬币
;;;1152   				//添加设置的保底枚数
;;;1153   				if(money<(coinchanger.par_value[type]*coinfactor) || coinchanger.store[type]<7)
0012d6  482f              LDR      r0,|L1.5012|
0012d8  3008              ADDS     r0,r0,#8
0012da  5d00              LDRB     r0,[r0,r4]
0012dc  492e              LDR      r1,|L1.5016|
0012de  6809              LDR      r1,[r1,#0]  ; coinfactor
0012e0  4348              MULS     r0,r1,r0
0012e2  42a8              CMP      r0,r5
0012e4  d804              BHI      |L1.4848|
0012e6  482b              LDR      r0,|L1.5012|
0012e8  301a              ADDS     r0,r0,#0x1a
0012ea  5d00              LDRB     r0,[r0,r4]
0012ec  2807              CMP      r0,#7
0012ee  da02              BGE      |L1.4854|
                  |L1.4848|
;;;1154   					type--;
0012f0  1e60              SUBS     r0,r4,#1
0012f2  b2c4              UXTB     r4,r0
0012f4  e000              B        |L1.4856|
                  |L1.4854|
;;;1155   				else
;;;1156   					break;
0012f6  e001              B        |L1.4860|
                  |L1.4856|
0012f8  2c00              CMP      r4,#0                 ;1149
0012fa  dcec              BGT      |L1.4822|
                  |L1.4860|
0012fc  bf00              NOP      
;;;1157   			}
;;;1158   			
;;;1159   			if(type==0)//如果等于0 则证明找遍了硬币器也没找到适合找零的硬币开始寻找那些存储量不足7枚的硬币
0012fe  b9a4              CBNZ     r4,|L1.4906|
;;;1160   			{
;;;1161   				type=15;
001300  240f              MOVS     r4,#0xf
;;;1162   				while(type>0)
001302  e00f              B        |L1.4900|
                  |L1.4868|
;;;1163   				{
;;;1164   					if(money<(coinchanger.par_value[type]*coinfactor) || coinchanger.store[type]==0)
001304  4823              LDR      r0,|L1.5012|
001306  3008              ADDS     r0,r0,#8
001308  5d00              LDRB     r0,[r0,r4]
00130a  4923              LDR      r1,|L1.5016|
00130c  6809              LDR      r1,[r1,#0]  ; coinfactor
00130e  4348              MULS     r0,r1,r0
001310  42a8              CMP      r0,r5
001312  d803              BHI      |L1.4892|
001314  481f              LDR      r0,|L1.5012|
001316  301a              ADDS     r0,r0,#0x1a
001318  5d00              LDRB     r0,[r0,r4]
00131a  b910              CBNZ     r0,|L1.4898|
                  |L1.4892|
;;;1165   						type--;
00131c  1e60              SUBS     r0,r4,#1
00131e  b2c4              UXTB     r4,r0
001320  e000              B        |L1.4900|
                  |L1.4898|
;;;1166   					else
;;;1167   						break;
001322  e001              B        |L1.4904|
                  |L1.4900|
001324  2c00              CMP      r4,#0                 ;1162
001326  dced              BGT      |L1.4868|
                  |L1.4904|
001328  bf00              NOP      
                  |L1.4906|
;;;1168   				}
;;;1169   			}
;;;1170   			num=1;
00132a  2701              MOVS     r7,#1
;;;1171   			i=0;
00132c  2600              MOVS     r6,#0
;;;1172   			while(coinequip.cmd_status!=cmd_status_complete && i++<200)
00132e  e002              B        |L1.4918|
                  |L1.4912|
;;;1173   			{
;;;1174   				OSTimeDly(2);
001330  2002              MOVS     r0,#2
001332  f7fffffe          BL       OSTimeDly
                  |L1.4918|
001336  4816              LDR      r0,|L1.5008|
001338  7940              LDRB     r0,[r0,#5]            ;1172  ; coinequip
00133a  2803              CMP      r0,#3                 ;1172
00133c  d004              BEQ      |L1.4936|
00133e  4630              MOV      r0,r6                 ;1172
001340  1c71              ADDS     r1,r6,#1              ;1172
001342  b2ce              UXTB     r6,r1                 ;1172
001344  28c8              CMP      r0,#0xc8              ;1172
001346  dbf3              BLT      |L1.4912|
                  |L1.4936|
;;;1175   			}
;;;1176   			if(i==200)
001348  2ec8              CMP      r6,#0xc8
00134a  d102              BNE      |L1.4946|
;;;1177   				return FALSE;
00134c  2000              MOVS     r0,#0
                  |L1.4942|
;;;1178   			coinset=1;//使能硬币器
;;;1179   			coin_cmd2[0]=COIN_DISPENSE;
;;;1180   			coin_cmd2[1]=num<<4 | type;
;;;1181   		}
;;;1182   		coinequip.cmd_type=M_CS_PAYOUT;//告诉轮询,现在执行的是退币命令
;;;1183   		coinequip.cmd_status=cmd_status_need;
;;;1184   		return TRUE;
;;;1185   	}
;;;1186   	return FALSE;
;;;1187   }
00134e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.4946|
001352  2001              MOVS     r0,#1                 ;1178
001354  4912              LDR      r1,|L1.5024|
001356  7008              STRB     r0,[r1,#0]            ;1178
001358  200d              MOVS     r0,#0xd               ;1179
00135a  4910              LDR      r1,|L1.5020|
00135c  7008              STRB     r0,[r1,#0]            ;1179
00135e  ea441007          ORR      r0,r4,r7,LSL #4       ;1180
001362  7048              STRB     r0,[r1,#1]            ;1180
                  |L1.4964|
001364  2002              MOVS     r0,#2                 ;1182
001366  490a              LDR      r1,|L1.5008|
001368  7188              STRB     r0,[r1,#6]            ;1182
00136a  2000              MOVS     r0,#0                 ;1183
00136c  7148              STRB     r0,[r1,#5]            ;1183
00136e  2001              MOVS     r0,#1                 ;1184
001370  e7ed              B        |L1.4942|
                  |L1.4978|
001372  2000              MOVS     r0,#0                 ;1186
001374  e7eb              B        |L1.4942|
;;;1188   
                          ENDP

                  CE_COIN PROC
;;;1189   uint8_t CE_COIN(uint8_t type)
001376  4601              MOV      r1,r0
;;;1190   {
;;;1191   	if(coinset==1 || coinset==0)
001378  4809              LDR      r0,|L1.5024|
00137a  7800              LDRB     r0,[r0,#0]  ; coinset
00137c  2801              CMP      r0,#1
00137e  d002              BEQ      |L1.4998|
001380  4807              LDR      r0,|L1.5024|
001382  7800              LDRB     r0,[r0,#0]  ; coinset
001384  b908              CBNZ     r0,|L1.5002|
                  |L1.4998|
;;;1192   	coinset=type;
001386  4806              LDR      r0,|L1.5024|
001388  7001              STRB     r1,[r0,#0]
                  |L1.5002|
;;;1193   	//coinequip.cmd_type=COIN_TYPE;
;;;1194   	//coinequip.cmd_status=cmd_status_need;
;;;1195   	return TRUE;
00138a  2001              MOVS     r0,#1
;;;1196   }
00138c  4770              BX       lr
                          ENDP

00138e  0000              DCW      0x0000
                  |L1.5008|
                          DCD      coinequip
                  |L1.5012|
                          DCD      coinchanger
                  |L1.5016|
                          DCD      coinfactor
                  |L1.5020|
                          DCD      coin_cmd2
                  |L1.5024|
                          DCD      coinset

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  coin_buff
                          %        20
                  coinchanger
                          %        100
                  coinequip
                          %        16
                  coin_cmd
                          %        16
                  coin_cmd2
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  checkcoinnum
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  SEM_COIN_CMD
                          DCD      0x00000000
                  coin_reset_time
                          DCD      0x00000000
                  coinfactor
                          DCD      0x00000000
                  coinset
000010  00                DCB      0x00
                  coinchangenum
000011  000000            DCB      0x00,0x00,0x00
                  coin_timeout
                          DCD      0x00000000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\USR\\Mdb\\coin.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_coin_c_3e8ac9d5____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_coin_c_3e8ac9d5____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_coin_c_3e8ac9d5____REVSH|
#line 144
|__asm___6_coin_c_3e8ac9d5____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

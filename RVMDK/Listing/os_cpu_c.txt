; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\os_cpu_c.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\os_cpu_c.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\os_cpu_c.crf ..\UCOSII\port\os_cpu_c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  OSInitHookBegin PROC
;;;66     #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;67     void  OSInitHookBegin (void)
000000  4770              BX       lr
;;;68     {
;;;69     #if OS_TMR_EN > 0
;;;70         OSTmrCtr = 0;
;;;71     #endif
;;;72     }
;;;73     #endif
                          ENDP

                  OSInitHookEnd PROC
;;;87     #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;88     void  OSInitHookEnd (void)
000002  4770              BX       lr
;;;89     {
;;;90     }
;;;91     #endif
                          ENDP

                  OSTaskCreateHook PROC
;;;104    #if OS_CPU_HOOKS_EN > 0
;;;105    void  OSTaskCreateHook (OS_TCB *ptcb)
000004  4770              BX       lr
;;;106    {
;;;107    #if OS_APP_HOOKS_EN > 0
;;;108        App_TaskCreateHook(ptcb);
;;;109    #else
;;;110        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;111    #endif
;;;112    }
;;;113    #endif
                          ENDP

                  OSTaskDelHook PROC
;;;127    #if OS_CPU_HOOKS_EN > 0
;;;128    void  OSTaskDelHook (OS_TCB *ptcb)
000006  4770              BX       lr
;;;129    {
;;;130    #if OS_APP_HOOKS_EN > 0
;;;131        App_TaskDelHook(ptcb);
;;;132    #else
;;;133        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;134    #endif
;;;135    }
;;;136    #endif
                          ENDP

                  OSTaskIdleHook PROC
;;;150    #if OS_CPU_HOOKS_EN > 0 && OS_VERSION >= 251
;;;151    void  OSTaskIdleHook (void)
000008  4770              BX       lr
;;;152    {
;;;153    #if OS_APP_HOOKS_EN > 0
;;;154        App_TaskIdleHook();
;;;155    #endif
;;;156    }
;;;157    #endif
                          ENDP

                  OSTaskStatHook PROC
;;;170    #if OS_CPU_HOOKS_EN > 0
;;;171    void  OSTaskStatHook (void)
00000a  4770              BX       lr
;;;172    {
;;;173    #if OS_APP_HOOKS_EN > 0
;;;174        App_TaskStatHook();
;;;175    #endif
;;;176    }
;;;177    #endif
                          ENDP

                  OSTaskStkInit PROC
;;;207    
;;;208    OS_STK *OSTaskStkInit (void (*task)(void *p_arg), void *p_arg, OS_STK *ptos, INT16U opt)
00000c  b570              PUSH     {r4-r6,lr}
;;;209    {
00000e  4604              MOV      r4,r0
;;;210        OS_STK *stk;
;;;211    
;;;212    
;;;213        (void)opt;                                   /* 'opt' is not used, prevent warning                 */
;;;214        stk       = ptos;                            /* Load stack pointer                                 */
000010  4610              MOV      r0,r2
;;;215    
;;;216                                                     /* Registers stacked as if auto-saved on exception    */
;;;217        *(stk)    = (INT32U)0x01000000L;             /* xPSR                                               */
000012  f04f7580          MOV      r5,#0x1000000
000016  6005              STR      r5,[r0,#0]
;;;218        *(--stk)  = (INT32U)task;                    /* Entry Point                                        */
000018  1f05              SUBS     r5,r0,#4
00001a  4628              MOV      r0,r5
00001c  602c              STR      r4,[r5,#0]
;;;219        *(--stk)  = (INT32U)0xFFFFFFFEL;             /* R14 (LR) (init value will cause fault if ever used)*/
00001e  f06f0601          MVN      r6,#1
000022  1f05              SUBS     r5,r0,#4
000024  4628              MOV      r0,r5
000026  602e              STR      r6,[r5,#0]
;;;220        *(--stk)  = (INT32U)0x12121212L;             /* R12                                                */
000028  f04f3612          MOV      r6,#0x12121212
00002c  1f05              SUBS     r5,r0,#4
00002e  4628              MOV      r0,r5
000030  602e              STR      r6,[r5,#0]
;;;221        *(--stk)  = (INT32U)0x03030303L;             /* R3                                                 */
000032  f04f3603          MOV      r6,#0x3030303
000036  1f05              SUBS     r5,r0,#4
000038  4628              MOV      r0,r5
00003a  602e              STR      r6,[r5,#0]
;;;222        *(--stk)  = (INT32U)0x02020202L;             /* R2                                                 */
00003c  f04f3602          MOV      r6,#0x2020202
000040  1f05              SUBS     r5,r0,#4
000042  4628              MOV      r0,r5
000044  602e              STR      r6,[r5,#0]
;;;223        *(--stk)  = (INT32U)0x01010101L;             /* R1                                                 */
000046  1076              ASRS     r6,r6,#1
000048  1f05              SUBS     r5,r0,#4
00004a  4628              MOV      r0,r5
00004c  602e              STR      r6,[r5,#0]
;;;224        *(--stk)  = (INT32U)p_arg;                   /* R0 : argument                                      */
00004e  1f05              SUBS     r5,r0,#4
000050  4628              MOV      r0,r5
000052  6029              STR      r1,[r5,#0]
;;;225    
;;;226                                                     /* Remaining registers saved on process stack         */
;;;227        *(--stk)  = (INT32U)0x11111111L;             /* R11                                                */
000054  f04f3611          MOV      r6,#0x11111111
000058  1f05              SUBS     r5,r0,#4
00005a  4628              MOV      r0,r5
00005c  602e              STR      r6,[r5,#0]
;;;228        *(--stk)  = (INT32U)0x10101010L;             /* R10                                                */
00005e  f04f3610          MOV      r6,#0x10101010
000062  1f05              SUBS     r5,r0,#4
000064  4628              MOV      r0,r5
000066  602e              STR      r6,[r5,#0]
;;;229        *(--stk)  = (INT32U)0x09090909L;             /* R9                                                 */
000068  f04f3609          MOV      r6,#0x9090909
00006c  1f05              SUBS     r5,r0,#4
00006e  4628              MOV      r0,r5
000070  602e              STR      r6,[r5,#0]
;;;230        *(--stk)  = (INT32U)0x08080808L;             /* R8                                                 */
000072  f04f3608          MOV      r6,#0x8080808
000076  1f05              SUBS     r5,r0,#4
000078  4628              MOV      r0,r5
00007a  602e              STR      r6,[r5,#0]
;;;231        *(--stk)  = (INT32U)0x07070707L;             /* R7                                                 */
00007c  f04f3607          MOV      r6,#0x7070707
000080  1f05              SUBS     r5,r0,#4
000082  4628              MOV      r0,r5
000084  602e              STR      r6,[r5,#0]
;;;232        *(--stk)  = (INT32U)0x06060606L;             /* R6                                                 */
000086  f04f3606          MOV      r6,#0x6060606
00008a  1f05              SUBS     r5,r0,#4
00008c  4628              MOV      r0,r5
00008e  602e              STR      r6,[r5,#0]
;;;233        *(--stk)  = (INT32U)0x05050505L;             /* R5                                                 */
000090  f04f3605          MOV      r6,#0x5050505
000094  1f05              SUBS     r5,r0,#4
000096  4628              MOV      r0,r5
000098  602e              STR      r6,[r5,#0]
;;;234        *(--stk)  = (INT32U)0x04040404L;             /* R4                                                 */
00009a  f04f3604          MOV      r6,#0x4040404
00009e  1f05              SUBS     r5,r0,#4
0000a0  4628              MOV      r0,r5
0000a2  602e              STR      r6,[r5,#0]
;;;235    
;;;236        return (stk);
;;;237    }
0000a4  bd70              POP      {r4-r6,pc}
;;;238    
                          ENDP

                  OSTaskSwHook PROC
;;;254    #if (OS_CPU_HOOKS_EN > 0) && (OS_TASK_SW_HOOK_EN > 0)
;;;255    void  OSTaskSwHook (void)
0000a6  4770              BX       lr
;;;256    {
;;;257    #if OS_APP_HOOKS_EN > 0
;;;258        App_TaskSwHook();
;;;259    #endif
;;;260    }
;;;261    #endif
                          ENDP

                  OSTCBInitHook PROC
;;;274    #if OS_CPU_HOOKS_EN > 0 && OS_VERSION > 203
;;;275    void  OSTCBInitHook (OS_TCB *ptcb)
0000a8  4770              BX       lr
;;;276    {
;;;277    #if OS_APP_HOOKS_EN > 0
;;;278        App_TCBInitHook(ptcb);
;;;279    #else
;;;280        (void)ptcb;                                  /* Prevent compiler warning                           */
;;;281    #endif
;;;282    }
;;;283    #endif
                          ENDP

                  OSTimeTickHook PROC
;;;296    #if (OS_CPU_HOOKS_EN > 0) && (OS_TIME_TICK_HOOK_EN > 0)
;;;297    void  OSTimeTickHook (void)
0000aa  4770              BX       lr
;;;298    {
;;;299    #if OS_APP_HOOKS_EN > 0
;;;300        App_TimeTickHook();
;;;301    #endif
;;;302    
;;;303    #if OS_TMR_EN > 0
;;;304        OSTmrCtr++;
;;;305        if (OSTmrCtr >= (OS_TICKS_PER_SEC / OS_TMR_CFG_TICKS_PER_SEC)) {
;;;306            OSTmrCtr = 0;
;;;307            OSTmrSignal();
;;;308        }
;;;309    #endif
;;;310    }
;;;311    #endif
                          ENDP


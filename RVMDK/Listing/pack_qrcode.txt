; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\pack_qrcode.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\pack_qrcode.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\pack_qrcode.crf ..\USR\Commucation\pack_qrcode.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                  callback_qrcode_payCheck PROC
;;;10     */
;;;11     static uint8_t callback_qrcode_payCheck(uint8_t *recv, uint16_t len, uint8_t*send)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;12     {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4616              MOV      r6,r2
;;;13     	uint8_t rs = FALSE;
00000a  2700              MOVS     r7,#0
;;;14     	FSMMSG* cmsg;
;;;15     	cmsg = apply_fsm_msg(FSMMSG_SIZE_DEFAULT);
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       apply_fsm_msg
000012  4605              MOV      r5,r0
;;;16     	log_output(cmsg);
;;;17     	cmsg->type = MsgQrcode;		//二维码支付
000014  2016              MOVS     r0,#0x16
000016  7028              STRB     r0,[r5,#0]
;;;18     	cmsg->stype = QRCODE_CHECK;	//表示支付查询
000018  2031              MOVS     r0,#0x31
00001a  7068              STRB     r0,[r5,#1]
;;;19     	cmsg->value = 0;			//未知状态
00001c  2000              MOVS     r0,#0
00001e  6068              STR      r0,[r5,#4]
;;;20     	
;;;21     	if(recv[0] == 0x1D && recv[1] == send[1] && recv[3] == 0x30)//包头与序号正确
000020  7820              LDRB     r0,[r4,#0]
000022  281d              CMP      r0,#0x1d
000024  d10d              BNE      |L1.66|
000026  7860              LDRB     r0,[r4,#1]
000028  7871              LDRB     r1,[r6,#1]
00002a  4288              CMP      r0,r1
00002c  d109              BNE      |L1.66|
00002e  78e0              LDRB     r0,[r4,#3]
000030  2830              CMP      r0,#0x30
000032  d106              BNE      |L1.66|
;;;22     	{
;;;23     		cmsg->value = recv[5];//结果
000034  7960              LDRB     r0,[r4,#5]
000036  6068              STR      r0,[r5,#4]
;;;24     		g_trade.qrcode.type = recv[7];
000038  79e1              LDRB     r1,[r4,#7]
00003a  4846              LDR      r0,|L1.340|
00003c  f880104c          STRB     r1,[r0,#0x4c]
;;;25     		rs =  TRUE;
000040  2701              MOVS     r7,#1
                  |L1.66|
;;;26     	}
;;;27     	if(send_fsm_msg(cmsg) != TRUE)
000042  4628              MOV      r0,r5
000044  f7fffffe          BL       send_fsm_msg
000048  2801              CMP      r0,#1
00004a  d003              BEQ      |L1.84|
;;;28     	{
;;;29     		release_fsm_msg(cmsg);
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       release_fsm_msg
;;;30     		rs = 3;
000052  2703              MOVS     r7,#3
                  |L1.84|
;;;31     	}
;;;32     	return rs;
000054  4638              MOV      r0,r7
;;;33     }
000056  e8bd81f0          POP      {r4-r8,pc}
;;;34     
                          ENDP

                  send_qrcode_dat PROC
;;;39     */
;;;40     void send_qrcode_dat(uint8_t type, uint8_t rs)
00005a  e92d43f0          PUSH     {r4-r9,lr}
;;;41     {
00005e  b087              SUB      sp,sp,#0x1c
000060  4607              MOV      r7,r0
000062  4689              MOV      r9,r1
;;;42     	char tmp[10];
;;;43     	uint8_t i, j , *str;
;;;44     	MAIL *mail;
;;;45     	SETUP_DEVICE  vmInfomation;
;;;46     	
;;;47     	mail = Apply_for_mail(100); //申请信封
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       Apply_for_mail
00006a  4606              MOV      r6,r0
;;;48     	log_output(mail);
;;;49     	
;;;50     	if(mail == 0)
00006c  b916              CBNZ     r6,|L1.116|
                  |L1.110|
;;;51     		return;
;;;52     	
;;;53     	if(type == QRCODE_CHECK)//二维码支付结果查询
;;;54     		mail->com_call_back = callback_qrcode_payCheck;//支付函数
;;;55     	else
;;;56     	if(type == QRCODE_RESULT)//二维码结果汇报
;;;57     		mail->com_call_back = NULL;//查询回调	
;;;58     	else
;;;59     		mail->com_call_back = NULL;
;;;60     	
;;;61     	str = mail->addr;
;;;62     	
;;;63     	i = 0;
;;;64     	str[i++] = 0x17;	//包大类
;;;65     	str[i++] = ' ';		//序号(发送时加上)
;;;66     	str[i++] = ' ';		//总长度(校验一起计算)
;;;67     	str[i++] = 0x30;	//包小类
;;;68     	str[i++] = type;	//指令类型
;;;69     	str[i++] = '-';
;;;70     	//联机ID
;;;71     	e2p_get_vminfo(&vmInfomation);
;;;72     	sprintf(tmp, "%10u", vmInfomation.facId);
;;;73     	for(j = 0;j < 10; j++)
;;;74     	{
;;;75     		str[i++] = tmp[j];
;;;76     	}
;;;77     	str[i++] = '-';
;;;78     	
;;;79     	//时间戳拷贝
;;;80     //	strcpy( (char*)(&str[i]), g_trade.qrcode.timeStamp) ;
;;;81     	strcpy( (char*)(&str[i]), (char*)g_trade.qrcode.stamp) ;
;;;82     //	i += strlen(g_trade.qrcode.timeStamp);
;;;83     	i += strlen((char*)g_trade.qrcode.stamp);
;;;84     	str[i++] = '-';
;;;85     	
;;;86     	//结果
;;;87     	str[i++] = rs + '0';
;;;88     	str[i++] = '-';
;;;89     	
;;;90     	str[2] = i+1;//包长度
;;;91     	
;;;92     	if(type == QRCODE_CHECK)//支付结果查询
;;;93     	{
;;;94     		send_mail(mail);//即时信息
;;;95     	}
;;;96     	else//出货汇报
;;;97     	{
;;;98     		_free(g_trade.qrcode.timeStamp);//释放时间戳
;;;99     		mail_to_flash(mail);
;;;100    	}
;;;101    }
00006e  b007              ADD      sp,sp,#0x1c
000070  e8bd83f0          POP      {r4-r9,pc}
                  |L1.116|
000074  2f31              CMP      r7,#0x31              ;53
000076  d102              BNE      |L1.126|
000078  4837              LDR      r0,|L1.344|
00007a  6030              STR      r0,[r6,#0]            ;54
00007c  e006              B        |L1.140|
                  |L1.126|
00007e  2f32              CMP      r7,#0x32              ;56
000080  d102              BNE      |L1.136|
000082  2000              MOVS     r0,#0                 ;57
000084  6030              STR      r0,[r6,#0]            ;57
000086  e001              B        |L1.140|
                  |L1.136|
000088  2000              MOVS     r0,#0                 ;59
00008a  6030              STR      r0,[r6,#0]            ;59
                  |L1.140|
00008c  6875              LDR      r5,[r6,#4]            ;61
00008e  2400              MOVS     r4,#0                 ;63
000090  2217              MOVS     r2,#0x17              ;64
000092  4621              MOV      r1,r4                 ;64
000094  1c64              ADDS     r4,r4,#1              ;64
000096  546a              STRB     r2,[r5,r1]            ;64
000098  2220              MOVS     r2,#0x20              ;65
00009a  4621              MOV      r1,r4                 ;65
00009c  1c64              ADDS     r4,r4,#1              ;65
00009e  546a              STRB     r2,[r5,r1]            ;65
0000a0  4621              MOV      r1,r4                 ;66
0000a2  1c64              ADDS     r4,r4,#1              ;66
0000a4  546a              STRB     r2,[r5,r1]            ;66
0000a6  2230              MOVS     r2,#0x30              ;67
0000a8  4621              MOV      r1,r4                 ;67
0000aa  1c64              ADDS     r4,r4,#1              ;67
0000ac  546a              STRB     r2,[r5,r1]            ;67
0000ae  4621              MOV      r1,r4                 ;68
0000b0  1c64              ADDS     r4,r4,#1              ;68
0000b2  546f              STRB     r7,[r5,r1]            ;68
0000b4  222d              MOVS     r2,#0x2d              ;69
0000b6  4621              MOV      r1,r4                 ;69
0000b8  1c64              ADDS     r4,r4,#1              ;69
0000ba  546a              STRB     r2,[r5,r1]            ;69
0000bc  a801              ADD      r0,sp,#4              ;71
0000be  f7fffffe          BL       e2p_get_vminfo
0000c2  a126              ADR      r1,|L1.348|
0000c4  a804              ADD      r0,sp,#0x10           ;72
0000c6  9a01              LDR      r2,[sp,#4]            ;72
0000c8  f7fffffe          BL       __2sprintf
0000cc  f04f0800          MOV      r8,#0                 ;73
0000d0  e00a              B        |L1.232|
                  |L1.210|
0000d2  a804              ADD      r0,sp,#0x10           ;75
0000d4  f8102008          LDRB     r2,[r0,r8]            ;75
0000d8  4620              MOV      r0,r4                 ;75
0000da  1c61              ADDS     r1,r4,#1              ;75
0000dc  b2cc              UXTB     r4,r1                 ;75
0000de  542a              STRB     r2,[r5,r0]            ;75
0000e0  f1080001          ADD      r0,r8,#1              ;73
0000e4  f00008ff          AND      r8,r0,#0xff           ;73
                  |L1.232|
0000e8  f1b80f0a          CMP      r8,#0xa               ;73
0000ec  dbf1              BLT      |L1.210|
0000ee  222d              MOVS     r2,#0x2d              ;77
0000f0  4620              MOV      r0,r4                 ;77
0000f2  1c61              ADDS     r1,r4,#1              ;77
0000f4  b2cc              UXTB     r4,r1                 ;77
0000f6  542a              STRB     r2,[r5,r0]            ;77
0000f8  1928              ADDS     r0,r5,r4              ;81
0000fa  4916              LDR      r1,|L1.340|
0000fc  314d              ADDS     r1,r1,#0x4d           ;81
0000fe  f7fffffe          BL       strcpy
000102  4814              LDR      r0,|L1.340|
000104  304d              ADDS     r0,r0,#0x4d           ;83
000106  f7fffffe          BL       strlen
00010a  4420              ADD      r0,r0,r4              ;83
00010c  b2c4              UXTB     r4,r0                 ;83
00010e  222d              MOVS     r2,#0x2d              ;84
000110  4620              MOV      r0,r4                 ;84
000112  1c61              ADDS     r1,r4,#1              ;84
000114  b2cc              UXTB     r4,r1                 ;84
000116  542a              STRB     r2,[r5,r0]            ;84
000118  f1090030          ADD      r0,r9,#0x30           ;87
00011c  b2c2              UXTB     r2,r0                 ;87
00011e  4620              MOV      r0,r4                 ;87
000120  1c61              ADDS     r1,r4,#1              ;87
000122  b2cc              UXTB     r4,r1                 ;87
000124  542a              STRB     r2,[r5,r0]            ;87
000126  222d              MOVS     r2,#0x2d              ;88
000128  4620              MOV      r0,r4                 ;88
00012a  1c61              ADDS     r1,r4,#1              ;88
00012c  b2cc              UXTB     r4,r1                 ;88
00012e  542a              STRB     r2,[r5,r0]            ;88
000130  1c60              ADDS     r0,r4,#1              ;90
000132  70a8              STRB     r0,[r5,#2]            ;90
000134  2f31              CMP      r7,#0x31              ;92
000136  d103              BNE      |L1.320|
000138  4630              MOV      r0,r6                 ;94
00013a  f7fffffe          BL       send_mail
00013e  e006              B        |L1.334|
                  |L1.320|
000140  4904              LDR      r1,|L1.340|
000142  6c88              LDR      r0,[r1,#0x48]         ;98
000144  f7fffffe          BL       _free
000148  4630              MOV      r0,r6                 ;99
00014a  f7fffffe          BL       mail_to_flash
                  |L1.334|
00014e  bf00              NOP      
000150  e78d              B        |L1.110|
;;;102    
                          ENDP

000152  0000              DCW      0x0000
                  |L1.340|
                          DCD      g_trade
                  |L1.344|
                          DCD      callback_qrcode_payCheck
                  |L1.348|
00015c  25313075          DCB      "%10u",0
000160  00      
000161  00                DCB      0
000162  00                DCB      0
000163  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\USR\\Commucation\\pack_qrcode.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_pack_qrcode_c_2d464216____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_pack_qrcode_c_2d464216____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_pack_qrcode_c_2d464216____REVSH|
#line 144
|__asm___13_pack_qrcode_c_2d464216____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

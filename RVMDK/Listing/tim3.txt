; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\output\tim3.o --asm_dir=.\Listing\ --list_dir=.\Listing\ --depend=.\output\tim3.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\bsp_lib -I..\UCOSII\port -I..\UCOSII\src -I..\UCOSII\uC-CPU -I..\Libraries\CMSIS -I..\User\INCLUDES -I..\LCD -I..\USR\Global -I..\USR -I..\USR\FSM -I..\USR\Commucation -I..\USR\Mdb -I..\USR\Drop -I..\USR\DriverBoard -I..\USR\Flash -I..\USR\Card -I..\USR\MSG -I..\USR\Bsp -I..\USR\SetPar -I..\User\QRCode -I..\USR\MEM -I..\USR\QRCode -I..\USR\SETUP -I..\USR\stm32 -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=.\output\tim3.crf ..\bsp_lib\tim3.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM3_Init PROC
;;;14     
;;;15     void TIM3_Init(void) 
000000  b51f              PUSH     {r0-r4,lr}
;;;16     { 
;;;17     	TIM_TimeBaseInitTypeDef    TIM_TimeBaseStructure; 
;;;18     	NVIC_InitTypeDef NVIC_InitStructure; 
;;;19     	
;;;20     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); //开定时器3时钟（最高36 M）
000002  2101              MOVS     r1,#1
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;21     	TIM_TimeBaseStructure.TIM_Period = 0;      				//自动重装载器的值
00000a  2000              MOVS     r0,#0
00000c  f8ad0008          STRH     r0,[sp,#8]
;;;22     	TIM_TimeBaseStructure.TIM_Prescaler = 35999;   				//预分频	2kHZ	0.5ms
000010  f648409f          MOV      r0,#0x8c9f
000014  f8ad0004          STRH     r0,[sp,#4]
;;;23     	
;;;24     	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;			//重复计数 关
000018  2000              MOVS     r0,#0
00001a  f88d000c          STRB     r0,[sp,#0xc]
;;;25     	
;;;26     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV4; 	//时钟分割 
00001e  f44f7000          MOV      r0,#0x200
000022  f8ad000a          STRH     r0,[sp,#0xa]
;;;27     	
;;;28     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_FLAG_Update; //计数方式 (向下计数)
000026  2001              MOVS     r0,#1
000028  f8ad0006          STRH     r0,[sp,#6]
;;;29     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);             //初始化 time3 计数器配置
00002c  a901              ADD      r1,sp,#4
00002e  4846              LDR      r0,|L1.328|
000030  f7fffffe          BL       TIM_TimeBaseInit
;;;30     	//这行放在 TIM_TimeBaseInit 后面，避免开机就进入中断
;;;31     	TIM_ClearFlag(TIM3, TIM_FLAG_Update);	
000034  2101              MOVS     r1,#1
000036  4844              LDR      r0,|L1.328|
000038  f7fffffe          BL       TIM_ClearFlag
;;;32     	
;;;33     	TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE );                   //允许更新中断
00003c  2201              MOVS     r2,#1
00003e  4611              MOV      r1,r2
000040  4841              LDR      r0,|L1.328|
000042  f7fffffe          BL       TIM_ITConfig
;;;34     	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;             //中断通道
000046  201d              MOVS     r0,#0x1d
000048  f88d0000          STRB     r0,[sp,#0]
;;;35     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;  	//主优先级
00004c  2001              MOVS     r0,#1
00004e  f88d0001          STRB     r0,[sp,#1]
;;;36     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;          //从优先级
000052  f88d0002          STRB     r0,[sp,#2]
;;;37     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;        		//使能通道中断
000056  f88d0003          STRB     r0,[sp,#3]
;;;38     	NVIC_Init(&NVIC_InitStructure);                            	//初始化中断
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       NVIC_Init
;;;39     	TIM_Cmd(TIM3, DISABLE);                                      //timer3 使能
000060  2100              MOVS     r1,#0
000062  4839              LDR      r0,|L1.328|
000064  f7fffffe          BL       TIM_Cmd
;;;40     }
000068  bd1f              POP      {r0-r4,pc}
;;;41     
                          ENDP

                  TIM4_Init PROC
;;;42     
;;;43     void TIM4_Init(void) 
00006a  b51f              PUSH     {r0-r4,lr}
;;;44     { 
;;;45     	TIM_TimeBaseInitTypeDef    TIM_TimeBaseStructure; 
;;;46     	NVIC_InitTypeDef NVIC_InitStructure; 
;;;47     	
;;;48     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); //开定时器3时钟（最高36 M）
00006c  2101              MOVS     r1,#1
00006e  2004              MOVS     r0,#4
000070  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;49     	TIM_TimeBaseStructure.TIM_Period = 0;      				//自动重装载器的值
000074  2000              MOVS     r0,#0
000076  f8ad0008          STRH     r0,[sp,#8]
;;;50     	TIM_TimeBaseStructure.TIM_Prescaler = 35999;   				//预分频	2kHZ	0.5ms
00007a  f648409f          MOV      r0,#0x8c9f
00007e  f8ad0004          STRH     r0,[sp,#4]
;;;51     	
;;;52     	TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;			//重复计数 关
000082  2000              MOVS     r0,#0
000084  f88d000c          STRB     r0,[sp,#0xc]
;;;53     	
;;;54     	TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV4; 	//时钟分割 
000088  f44f7000          MOV      r0,#0x200
00008c  f8ad000a          STRH     r0,[sp,#0xa]
;;;55     	
;;;56     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_FLAG_Update; //计数方式 (向下计数)
000090  2001              MOVS     r0,#1
000092  f8ad0006          STRH     r0,[sp,#6]
;;;57     	TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);             //初始化 time3 计数器配置
000096  a901              ADD      r1,sp,#4
000098  482c              LDR      r0,|L1.332|
00009a  f7fffffe          BL       TIM_TimeBaseInit
;;;58     	//这行放在 TIM_TimeBaseInit 后面，避免开机就进入中断
;;;59     	TIM_ClearFlag(TIM4, TIM_FLAG_Update);	
00009e  2101              MOVS     r1,#1
0000a0  482a              LDR      r0,|L1.332|
0000a2  f7fffffe          BL       TIM_ClearFlag
;;;60     	
;;;61     	TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE );                   //允许更新中断
0000a6  2201              MOVS     r2,#1
0000a8  4611              MOV      r1,r2
0000aa  4828              LDR      r0,|L1.332|
0000ac  f7fffffe          BL       TIM_ITConfig
;;;62     	NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;             //中断通道
0000b0  201e              MOVS     r0,#0x1e
0000b2  f88d0000          STRB     r0,[sp,#0]
;;;63     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;  	//主优先级
0000b6  2001              MOVS     r0,#1
0000b8  f88d0001          STRB     r0,[sp,#1]
;;;64     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;          //从优先级
0000bc  f88d0002          STRB     r0,[sp,#2]
;;;65     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;        		//使能通道中断
0000c0  f88d0003          STRB     r0,[sp,#3]
;;;66     	NVIC_Init(&NVIC_InitStructure);                            	//初始化中断
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       NVIC_Init
;;;67     	TIM_Cmd(TIM4, DISABLE);                                      //timer3 使能
0000ca  2100              MOVS     r1,#0
0000cc  481f              LDR      r0,|L1.332|
0000ce  f7fffffe          BL       TIM_Cmd
;;;68     }
0000d2  bd1f              POP      {r0-r4,pc}
;;;69     
                          ENDP

                  start_tim4_ms PROC
;;;89     //===============================
;;;90      void start_tim4_ms(uint16_t num)
0000d4  b510              PUSH     {r4,lr}
;;;91      {
0000d6  4604              MOV      r4,r0
;;;92     	 TIM_SetAutoreload(TIM4, num*2);//改变重装值
0000d8  f64f70ff          MOV      r0,#0xffff
0000dc  ea000144          AND      r1,r0,r4,LSL #1
0000e0  481a              LDR      r0,|L1.332|
0000e2  f7fffffe          BL       TIM_SetAutoreload
;;;93     	 TIM_SetCounter(TIM4,0);		//清除计数器值
0000e6  2100              MOVS     r1,#0
0000e8  4818              LDR      r0,|L1.332|
0000ea  f7fffffe          BL       TIM_SetCounter
;;;94     	 TIM_Cmd(TIM4, ENABLE);
0000ee  2101              MOVS     r1,#1
0000f0  4816              LDR      r0,|L1.332|
0000f2  f7fffffe          BL       TIM_Cmd
;;;95     
;;;96      }
0000f6  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  start_tim3_ms PROC
;;;100    //===============================
;;;101     void start_tim3_ms(uint16_t num)
0000f8  b510              PUSH     {r4,lr}
;;;102     {
0000fa  4604              MOV      r4,r0
;;;103    	 TIM_SetAutoreload(TIM3, num*2);//改变重装值
0000fc  f64f70ff          MOV      r0,#0xffff
000100  ea000144          AND      r1,r0,r4,LSL #1
000104  4810              LDR      r0,|L1.328|
000106  f7fffffe          BL       TIM_SetAutoreload
;;;104    	 TIM_SetCounter(TIM3,0);		//清除计数器值
00010a  2100              MOVS     r1,#0
00010c  480e              LDR      r0,|L1.328|
00010e  f7fffffe          BL       TIM_SetCounter
;;;105    	 TIM_Cmd(TIM3, ENABLE);
000112  2101              MOVS     r1,#1
000114  480c              LDR      r0,|L1.328|
000116  f7fffffe          BL       TIM_Cmd
;;;106    
;;;107     }
00011a  bd10              POP      {r4,pc}
;;;108    //===============================
                          ENDP

                  start_tim3_s PROC
;;;110    //===============================
;;;111     void start_tim3_s(uint8_t num)
00011c  b510              PUSH     {r4,lr}
;;;112     {
00011e  4604              MOV      r4,r0
;;;113    	TIM_SetCounter(TIM3,2000*num);
000120  f44f60fa          MOV      r0,#0x7d0
000124  4360              MULS     r0,r4,r0
000126  b281              UXTH     r1,r0
000128  4807              LDR      r0,|L1.328|
00012a  f7fffffe          BL       TIM_SetCounter
;;;114    	TIM_SetAutoreload(TIM3, 2000*num);
00012e  f44f60fa          MOV      r0,#0x7d0
000132  4360              MULS     r0,r4,r0
000134  b281              UXTH     r1,r0
000136  4804              LDR      r0,|L1.328|
000138  f7fffffe          BL       TIM_SetAutoreload
;;;115    	TIM_Cmd(TIM3, ENABLE);
00013c  2101              MOVS     r1,#1
00013e  4802              LDR      r0,|L1.328|
000140  f7fffffe          BL       TIM_Cmd
;;;116     }
000144  bd10              POP      {r4,pc}
;;;117    
                          ENDP

000146  0000              DCW      0x0000
                  |L1.328|
                          DCD      0x40000400
                  |L1.332|
                          DCD      0x40000800

;*** Start embedded assembler ***

#line 1 "..\\bsp_lib\\tim3.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_tim3_c_a51670e4____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_tim3_c_a51670e4____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_tim3_c_a51670e4____REVSH|
#line 144
|__asm___6_tim3_c_a51670e4____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
